[
  {
    "objectID": "course-syllabus.html",
    "href": "course-syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "Course: DATS 1001-Data Science for All\nLecture: MW 12:45-2:00\nClassroom: 1776 G. St., NW Rm. C103\n\nInstructor: Prof. Emmanuel Teitelbaum\nEmail: ejt@gwu.edu\nOffice Hours:Mondays 3-5 p.m. and by appointment.\nLocation: Online or in Monroe Hall, Rm. 411, Sign up here\n\nTeaching Assistant: Gourab Mukherjee\nEmail: gourab.mukherjee@email.gwu.edu\nOffice Hours: Fridays, 9:30-11:30 a.m.\nLocation: Online, follow this link\n\nTeaching Assistant: Sai Srinivas Lakkoju\nEmail: saisrinivas.lakkoju@email.gwu.edu\nOffice Hours: Thursdays, 1-3 p.m.\nLocation: Online, follow this link\n\nCredit Hours: 3.0.\n\nThe best way to contact me is via the course Discord server for inquiries about code or course material and by email or during office hours for personal matters.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-information",
    "href": "course-syllabus.html#course-information",
    "title": "Syllabus",
    "section": "",
    "text": "Course: DATS 1001-Data Science for All\nLecture: MW 12:45-2:00\nClassroom: 1776 G. St., NW Rm. C103\n\nInstructor: Prof. Emmanuel Teitelbaum\nEmail: ejt@gwu.edu\nOffice Hours:Mondays 3-5 p.m. and by appointment.\nLocation: Online or in Monroe Hall, Rm. 411, Sign up here\n\nTeaching Assistant: Gourab Mukherjee\nEmail: gourab.mukherjee@email.gwu.edu\nOffice Hours: Fridays, 9:30-11:30 a.m.\nLocation: Online, follow this link\n\nTeaching Assistant: Sai Srinivas Lakkoju\nEmail: saisrinivas.lakkoju@email.gwu.edu\nOffice Hours: Thursdays, 1-3 p.m.\nLocation: Online, follow this link\n\nCredit Hours: 3.0.\n\nThe best way to contact me is via the course Discord server for inquiries about code or course material and by email or during office hours for personal matters.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#learning-objectives",
    "href": "course-syllabus.html#learning-objectives",
    "title": "Syllabus",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nDevelop Proficiency in R Programming: Students will learn the fundamentals of R programming, including basic syntax, data manipulation, and the use of R packages, enabling them to write and execute R scripts effectively.\nMaster Data Visualization Techniques: Students will gain a deep understanding of the grammar of graphics and best practices in data visualization, allowing them to create clear, accurate, and impactful visual representations of data.\nApply Data Wrangling Techniques: Students will learn to organize, clean, and transform datasets into tidy formats using R, preparing them for analysis by applying grouping, summarizing, and joining operations.\nUnderstand and Implement Statistical Models: Students will learn the principles of statistical modeling, including linear, multiple, and logistic regression, and will apply these models to real-world data to make predictions and informed decisions.\nConduct Hypothesis Testing and Interpret Results: Students will learn the concepts of sampling, uncertainty, and hypothesis testing, enabling them to design research studies, test hypotheses, and draw valid conclusions from data.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#readings",
    "href": "course-syllabus.html#readings",
    "title": "Syllabus",
    "section": "Readings",
    "text": "Readings\nStudents will read approximately 20 pages per week of academic material during the semester.\nAll academic readings will be linked to the course website. There are no textbooks that need to be purchased for this course.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#assignments",
    "href": "course-syllabus.html#assignments",
    "title": "Syllabus",
    "section": "Assignments",
    "text": "Assignments\n\nQuizzes (20%)\nCoding assignments (40%)\nFinal project (40% of final grade)\n\nAssignment 1 (10%)\nAssignment 2 (10%)\nAssignment 3 (10%)\nLightning Talk (10%)\n\n\n\nQuizzes\nStudents will complete approximately ten graded quizzes. These exercises will be oriented towards strengthening the student’s ability to manipulate, visualize and communicate data with R and Quarto. I will drop your lowest two quiz scores. Please do not email me about missed quizzes.\n\n\nCoding Assignments\nStudents will complete four weekly coding assignments. These assignments are designed to provide students with the opportunity to apply their newly-acquired skills to real world data and to develop their ability to write and execute R scripts.\n\n\nFinal Project\nEach student will complete a final project that will be developed throughout the semester. Students will work in groups to complete the project. The ultimate objective of this project is to design and execute an original data analysis. Details on the project will be provided in class over the course of the semester.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-grading",
    "href": "course-syllabus.html#course-grading",
    "title": "Syllabus",
    "section": "Course Grading",
    "text": "Course Grading\nThe grading scale below maps your final point or percentage total to your final letter grade for the course.\n\n\n\nRange\nLetter Grade\n\n\n\n\n94-100\nA\n\n\n90-93\nA-\n\n\n87-89\nB+\n\n\n84-86\nB\n\n\n80-83\nB-\n\n\n77-79\nC+\n\n\n74-76\nC\n\n\n70-73\nC-\n\n\n67-69\nD+\n\n\n64-66\nD\n\n\n60-63\nD-\n\n\n&lt;59\nF",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#late-work",
    "href": "course-syllabus.html#late-work",
    "title": "Syllabus",
    "section": "Late Work",
    "text": "Late Work\nLate assignments will incur a penalty of 1 percentage point per day. Late work will not be accepted more than 7 days past the deadline.\nStudents with exceptional circumstances may receive accommodations for late work under exceptional circumstances, and in consultation with the students’ academic advisor, when a verified medical excuse written by a qualified medical professional is provided.\nAccommodations are automatically approved for university-approved absences such as sporting events, religious holidays, etc. but these should be provided to the instructor by the end of the second week of the semester.\nNo exceptions will be made to the late work policy.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#policy-on-ai-tools",
    "href": "course-syllabus.html#policy-on-ai-tools",
    "title": "Syllabus",
    "section": "Policy on AI Tools",
    "text": "Policy on AI Tools\n\nOverview\nThe use of Large Language Models (LLMs) can be a valuable tool for students in this course, but it is important to use it ethically and appropriately. By following the guidelines and expectations outlined in this syllabus policy, students can maximize the benefits of using LLMs while also demonstrating their own critical thinking, research, and programming skills.\nAs part of this course, students will have the option to use ChatGPT and other LLMs to assist in the writing of their R scripts for specific course assignments. Such tools can provide students with a starting point for their code but often the code is incomplete or error-prone. It is important to recognize that LLMs are a tool and not a substitute for critical thinking, research, or programming skills. Therefore, this syllabus policy outlines the guidelines and expectations for using LLMs in this course.\n\n\nGuidelines\nIt is also important to note that some uses of LLMs are more appropriate than others. For example, it is acceptable to use LLMs to generate boilerplate code or to help with syntax, but it is not acceptable to use an LLM to complete entire assignments or assessments. Students should use LLMs as a starting point and then modify and expand on the generated code to demonstrate their own understanding and skills.\nOne way to think of LLMs is as a tutor or classmate. What would it be appropriate to ask a tutor or classmate for help with? What would you not be permitted ask a tutor or classmate for help with?",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#office-hours",
    "href": "course-syllabus.html#office-hours",
    "title": "Syllabus",
    "section": "Office Hours",
    "text": "Office Hours\nAnother way we can work toward your success in the course is through office/student hours. Please make an appointment to talk with me during this time. You can work with me to:\n\nClarify any questions about the syllabus or course content\nReview an assignment you’ve completed and have questions about\nStep through practice problems or questions\nGet study strategies\nDiscuss grades\n\nTo make the meeting more effective, you can:\n\nGather materials (assignments, notes, etc.) ready in advance\nBe ready to take notes during office hours\nAsk follow up questions if you need clarification\nConfirm any action plan at the close of the meeting\nFollowing through on any action plan",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#prerequisites",
    "href": "course-syllabus.html#prerequisites",
    "title": "Syllabus",
    "section": "Prerequisites",
    "text": "Prerequisites\n\nAcademic\nThere are no academic prerequisites for this course.\n\n\nTechnological\n\nConfiguration and software\nTo fully participate in our course, you will need regular access to broadband Internet access as well as other technology components. Please consult GW Online’s Technical Requirements and Support for details on recommended configurations and software available to you. You will need to use the following tools and platforms:\n\nPosit Cloud: a cloud-based computing platform that allows you to run R code and render Quarto documents in the cloud.You will need to purchase a student subscription ($5/month) to access the class workspace.\nRStudio: an IDE for generating data visualizations using the programming language, R.\nQuarto: a document generation tool that allows you to create documents that combine code, data, and text.\nDiscord: a real-time chat application.\n\n\n\nSkills\nFor our course, you should be able to:\n\nAccess and use GW’s Blackboard system.\nUse your GW email for university-related communications per university policy.\nUse productivity software (e.g., Office 365, Google Suite) to collaborate with peers and submit assignments.\nUse web conferencing tools (e.g., Zoom, Webex) to collaborate with peers and me.\nUse a mobile device and/or computer to upload documents, images, and recordings.\nSeek technology help and tools by contacting GW Information Technology | (202)-994-4948 | ithelp@gwu.edu.\n\nIf you need assistance with technology tools we’ll use in this course, please visit the Technology Support link in the left navigation menu in our course on Blackboard.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-credit-hour-policy",
    "href": "course-syllabus.html#course-credit-hour-policy",
    "title": "Syllabus",
    "section": "Course Credit Hour Policy",
    "text": "Course Credit Hour Policy\nSummer courses are more than twice as intensive as those held during the academic year. Over 6 weeks, students will spend approximately 18.75 hours per week doing independent learning, including, but not limited to, readings, quizzes, assignments and a final project. This amounts to 36 hours of direct-instruction and 76.5 hours independent coursework.\n\nHow this applies to you\nUse the credit hour policy to plan and manage your workload and time spent on this course. Please contact me if you are having difficulty managing your workload, and we can discuss strategies to help you succeed in the course.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#demonstrating-academic-integrity",
    "href": "course-syllabus.html#demonstrating-academic-integrity",
    "title": "Syllabus",
    "section": "Demonstrating Academic Integrity",
    "text": "Demonstrating Academic Integrity\nAll of us in the course will comply with the GW Code of Academic Integrity. It states that “we, the Students, Faculty, Librarians, Staff, and Administration of The George Washington University, believing academic integrity to be central to the mission of the University, commit ourselves to promoting high standards for the integrity of academic work. Commitment to academic integrity upholds educational equity, development, and dissemination of meaningful knowledge, and mutual respect that our community values and nurtures. The George Washington University Code of Academic Integrity is established to further this commitment.”\nAcademic dishonesty is defined as cheating of any kind, including misrepresenting one’s own work, taking credit for the work of others without crediting them and without appropriate authorization, and the fabrication of information. For details and complete code, see the Code of Academic Integrity.Common examples of academic dishonesty include cheating, fabrication, plagiarism, falsification, forgery of University academic documents, and facilitating academic dishonesty by others. Learn more about avoiding these:\n\nGW guidance for students on academic integrity.\nPlagiarism: What is it and how to avoid it from GW Libraries.\nMaintaining academic honesty can be a challenging skill to learn. If you have questions about maintaining our course standards, please talk with me early on.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#aiming-for-success",
    "href": "course-syllabus.html#aiming-for-success",
    "title": "Syllabus",
    "section": "Aiming For Success",
    "text": "Aiming For Success\nI care about your learning and also about this subject matter, and I am here to help you have a meaningful learning experience. I expect you to take ownership of your learning: you can get more out of the course by thoughtfully participating in discussions, actively taking notes on readings and lectures, and giving your best effort overall. I will hold you to the highest standards for academic honesty and integrity in your work. I will also encourage you to collaborate and learn from your peers through thoughtful and respectful discussion. It is recommended you log in daily order to keep up with course requirements. I must highlight that communication is vital, so I hope you feel comfortable reaching out to me if you are struggling or have concerns or need accommodations beyond accessibility. We can determine strategies to set you up for success. Finally, I look forward to collaborating with you in this course to create a meaningful experience for everyone.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-communication",
    "href": "course-syllabus.html#course-communication",
    "title": "Syllabus",
    "section": "Course Communication",
    "text": "Course Communication\nCommunication in our course is essential; clearing up questions earlier than later is a good practice, so please don’t hesitate to reach out to me. In any mode of communication used in our course, all of us will follow netiquette found in our syllabus.\nWe will communicate primarily through GW’s Blackboard System and the Discord server. Announcements and emails sent through Blackboard automatically go to your GW email address (i.e., userid@gwu.edu). Please check your GW email account on a daily basis or forward your GW email to another address that you check daily.\nI will respond to emails/discussion posts within 48 hours (i.e., “24 hours on weekdays and on the next business day over weekends and holidays.”) I will provide feedback on assignments/exams within 3 days (i.e., “five days on weekdays and on the next business day over weekends and holidays.”)\nYou can post general course-related questions to our Discord server. Please post your question here first rather than emailing me directly if your question regards the course material. However, if you have a question that is more personal in nature (i.e., grades), please email me directly to set up an appointment.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#netiquette",
    "href": "course-syllabus.html#netiquette",
    "title": "Syllabus",
    "section": "Netiquette",
    "text": "Netiquette\nBehind every name there is a person.\nTo ensure safe and meaningful learning experiences for everyone, we all agree to:\n\nRemain professional, respectful, and courteous at all times on all platforms.\nKeep in mind this is a college class. Something that would be inappropriate in an in-person classroom is also inappropriate in an online classroom.\nWhen upset, we’ll wait a day or two prior to posting. Messages posted or emailed in anger are often regretted later.\nAsk one another for clarification if we find a communication offensive or difficult to understand.\nAvoid sweeping generalizations. Back up our stated opinions with facts and reliable sources.\nUnderstand that we may disagree and that exposure to other people’s opinions is part of the learning experience.\nJust as we would like our privacy respected, we will respect the privacy of other course participants and what they share.\n\nI (the instructor) reserve the right to delete any post or communication in our course that is deemed inappropriate without prior notification to the student. This includes anything containing language that is offensive, rude, profane, racist, or hateful. Items that are seriously off-topic or serve no purpose other than to vent frustration will also be removed.\nUsing outside communication apps\nI am aware that you and your peers might communicate using tools outside of GW’s Blackboard, my course website, our course Discord channel, or email systems. Rules of netiquette and appropriate communication extend to these tools as well as to Blackboard. If you see any tool being used inappropriately (i.e., any communication containing language that is offensive, rude, profane, racist, or hateful; uses that promote cheating of any kind), contact me as soon as possible to speak privately about it.\n(Adapted from Lake Superior Connect, Creative Commons Attribution 3.0)",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#policies",
    "href": "course-syllabus.html#policies",
    "title": "Syllabus",
    "section": "Policies",
    "text": "Policies\nTo make this a meaningful learning experience for everyone, please read and understand the following policies. All GW policies can be found on the GW Office of Ethics, Compliance, and Privacy site. All GW community members are responsible for adhering to and activating in accordance with all university policies. Please contact me if you have any questions.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#accessibility-and-accommodations",
    "href": "course-syllabus.html#accessibility-and-accommodations",
    "title": "Syllabus",
    "section": "Accessibility and Accommodations",
    "text": "Accessibility and Accommodations\n\nGW’s Disability Support Services\nIf you are a student with a disability, or think you may have a disability, you can let me know, and/or you can talk to GW’s Office of Disability Support Services (DSS). DSS works with both students with disabilities and instructors to identify reasonable accommodations. Contact the DSS office at (202) 994-8250, by email on dss@gwu.edu, or in-person in Rome Hall Suite 102 to establish eligibility and to coordinate reasonable accommodations. If you have already been approved for accommodations, please send me your accommodation letter and meet with me so we can develop an implementation plan together.\nHow are course technology tools accessible to everyone? To find out, access Technology Support Technology Tools Policies in the Blackboard course menu.\n\n\nAccommodations Beyond Disability\nEveryone has different needs for learning. If you don’t have a documented disability but feel that you would benefit from learning support for other reasons, please don’t hesitate to talk to me. If you have substantial non-academic obligations or other concerns (e.g., food insecurity, work, childcare, athletic commitments, language barriers, financial issues, technology access, commuting, etc.) that make learning difficult, please contact me. I’ll keep this information confidential, and together, we can brainstorm ways to meet your needs.\n\n\nOther Needs\nAny student who has difficulty affording groceries or accessing sufficient food to eat every day, or who lacks a safe and stable place to live, and believes this may affect their performance in the course, is urged to contact GW’s Office of Student Financial Assistance for support. Furthermore, please notify me if you are comfortable doing so. Some other resources to support you are found under the course menu item Student Resources and include support for academic achievement and personal well-being. (Adapted from Goldrick-Rab, 2017)",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#counseling-and-psychological-services",
    "href": "course-syllabus.html#counseling-and-psychological-services",
    "title": "Syllabus",
    "section": "Counseling and Psychological Services",
    "text": "Counseling and Psychological Services\nGW’s Health Center offers counseling and psychological services to GW students. Please note that staff is licensed to offer short term therapy to students in Washington, DC, Maryland, and Virginia. If you are living outside these regions, the office may be able to refer you elsewhere. Assistance and referrals 24 hours a day, 365 days a year and can be reached on (202) 994-5300.\nThe Center provides assistance and referral to address students’ personal, social, career, and study skills problems. Services for students include: crisis and emergency mental health consultations, confidential assessment, counseling services (individual and small group), and referrals.\nVirtual Workshops are open to any student regardless of geographic location. These can be exceptionally valuable and help you build essential skills and cope with common ongoing mental health concerns. Please contact the GW Health Center on (202) 994-5300 for more information.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#religious-observances",
    "href": "course-syllabus.html#religious-observances",
    "title": "Syllabus",
    "section": "Religious Observances",
    "text": "Religious Observances\nAs members of the GW community, you have the right to observe religious holidays. University policy requires that students notify their instructors during the first week of the semester if they plan to be absent from class on days of religious observance. For further details, please consult the university policy on religious holiday observance.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#key-dates",
    "href": "course-syllabus.html#key-dates",
    "title": "Syllabus",
    "section": "Key Dates",
    "text": "Key Dates\nPlease defer to the due dates listed on the course website. You can also view due dates in the gradebook and under each individual course assignment item in Blackboard Ultra.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#incomplete-grades",
    "href": "course-syllabus.html#incomplete-grades",
    "title": "Syllabus",
    "section": "Incomplete Grades",
    "text": "Incomplete Grades\n\nUndergraduate students\nIncomplete grades may be given to undergraduate students only if for reasons beyond the student’s control (such as medical or family emergency) they are unable to complete the final work of the course. Faculty should not assign an Incomplete grade if not asked by the student.\nA contract must be signed by the instructor and the student and filed in the department office. A copy should be submitted to the Academic Advising office in Phillips 107. A student has up to a calendar year to finish the coursework for the class, and when completed a grade change form must be submitted to the Academic Advising office to update the grade.\nFor further policy and contract information for undergraduate students, please consult with your advisor and also visit the website for Columbian College of Arts and Sciences Academic Advising.\n\n\nGraduate students\nIncomplete grades may be given to graduate students only if for reasons beyond the student’s control (such as medical or family emergency) they are unable to complete the final work of the course. Faculty should not assign an Incomplete grade if not asked by the student.\nFor further information, please consult with your advisor and complete a CCAS graduate student incomplete grade form.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "project/project-assignment-2.html",
    "href": "project/project-assignment-2.html",
    "title": "Project Assignment 2",
    "section": "",
    "text": "Details coming soon…",
    "crumbs": [
      "Project",
      "Assignment 2"
    ]
  },
  {
    "objectID": "project/project-datasets.html",
    "href": "project/project-datasets.html",
    "title": "Datasets",
    "section": "",
    "text": "Here are some datasets that you might consider using for your final project:\n\nILOSTAT is the statistical database of the International Labour Organisation. It has data pertaining to labor, working conditions, industrial relations, poverty and inequality.\nGoogle Public Data Explorer contains information about dozens of databases related to governance and the economy. You cannot download the raw data from Google, but you can use the site to visualize the data and then follow the link to the original source.\nOECD DATA provides data related to the performance of high income countries.\nOur World in Data is a good general resource for political economy data. The site is centered around blog posts but you can also search for a topic, view a visualization related to that topic and then download the data used to create it.\nStatista is a good place to look for data on more niche topics.\nUNCTADstat is the United Nations Conference on Trade and Development statistical database. It provides harmonized data on a range of topics related to economic performance, trade and statistics.\nThe UN Human Development Reports include a number of important indicators related to human development, gender and sustainable development goals (SDGs).\nVarieties of Democracy (V-DEM) provides original measures of the quality of democracy for every country dating back to the 18th century.\nWorld Bank Development Indicators (WDI) is the primary World Bank database for development data from officially-recognized international sources.\nThe World Bank DataBank provides access to dozens of additional World Bank databases on topics such as regional development, governance, education, gender and the environment.\n\nFor information on more specific resources available, see this page on the Gelman Library website.",
    "crumbs": [
      "Project",
      "Datasets"
    ]
  },
  {
    "objectID": "slides/week-4.1.html#line-chart-from-last-class",
    "href": "slides/week-4.1.html#line-chart-from-last-class",
    "title": "Data Viz Best Practices",
    "section": "Line Chart from Last Class",
    "text": "Line Chart from Last Class"
  },
  {
    "objectID": "slides/week-4.1.html#problem",
    "href": "slides/week-4.1.html#problem",
    "title": "Data Viz Best Practices",
    "section": "Problem",
    "text": "Problem"
  },
  {
    "objectID": "slides/week-4.1.html#color-blindness",
    "href": "slides/week-4.1.html#color-blindness",
    "title": "Data Viz Best Practices",
    "section": "Color Blindness",
    "text": "Color Blindness\n\n\nColor Vision Deficiency (CVD) or color blindness affects 8 percent of men and 1 in 200 women\nThere are different types of CVD but most common is red-green color blindness\nTherefore, don’t include red and green in the same chart!\nLook for color blind safe palettes"
  },
  {
    "objectID": "slides/week-4.1.html#section",
    "href": "slides/week-4.1.html#section",
    "title": "Data Viz Best Practices",
    "section": "",
    "text": "Solution: Use a colorblind safe color scheme like viridis…"
  },
  {
    "objectID": "slides/week-4.1.html#section-1",
    "href": "slides/week-4.1.html#section-1",
    "title": "Data Viz Best Practices",
    "section": "",
    "text": "Use scale_color_viridis_d() in this case to specify the viridis color scheme…\n\n# in this ggplot() call, we add a third dimension for line color\nggplot(dem_waves_ctrs, aes(x = year, y = polyarchy, color = country)) +\n  geom_line(linewidth = 1) + # our geom is a line with a width of 1\n  labs(\n    x = \"Year\", \n    y = \"Polyarchy Score\", \n    title = 'Democracy in countries representing three different \"waves\"', \n    caption = \"Source: V-Dem Institute\", \n    color = \"Country\" # make title of legend to upper case\n  ) +\n  scale_color_viridis_d(option = \"mako\", end = .8) # use viridis color palette"
  },
  {
    "objectID": "slides/week-4.1.html#better",
    "href": "slides/week-4.1.html#better",
    "title": "Data Viz Best Practices",
    "section": "Better!",
    "text": "Better!"
  },
  {
    "objectID": "slides/week-4.1.html#your-turn",
    "href": "slides/week-4.1.html#your-turn",
    "title": "Data Viz Best Practices",
    "section": "Your Turn!",
    "text": "Your Turn!\n\n\nSee this reference to view different palettes and options\nAlso check out the paletteer package for easy access to many more palettes\nUse scale_color_viridis_d() to specify a viridis color scheme\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "slides/week-4.1.html#scatter-plot-setup",
    "href": "slides/week-4.1.html#scatter-plot-setup",
    "title": "Data Viz Best Practices",
    "section": "Scatter Plot Setup",
    "text": "Scatter Plot Setup\n\n\ndem_summary_ctry &lt;-\n  read_csv(\"data/dem_women.csv\") |&gt;\n  group_by(country, region) |&gt; # group by country, keep region\n  summarize(\n    polyarchy = mean(polyarchy, na.rm = TRUE),\n    gdp_pc = mean(gdp_pc, na.rm = TRUE), \n    flfp = mean(flfp, na.rm = TRUE), \n    women_rep = mean(women_rep, na.rm = TRUE)\n  )"
  },
  {
    "objectID": "slides/week-4.1.html#scatter-plot-example",
    "href": "slides/week-4.1.html#scatter-plot-example",
    "title": "Data Viz Best Practices",
    "section": "Scatter Plot Example",
    "text": "Scatter Plot Example"
  },
  {
    "objectID": "slides/week-4.1.html#scatter-plot-example-1",
    "href": "slides/week-4.1.html#scatter-plot-example-1",
    "title": "Data Viz Best Practices",
    "section": "Scatter Plot Example",
    "text": "Scatter Plot Example\n\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point(aes(color = region)) + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\"\n    ) +\n  scale_color_viridis_d(option = \"mako\", end = .8)"
  },
  {
    "objectID": "slides/week-4.1.html#continuous-color-scales",
    "href": "slides/week-4.1.html#continuous-color-scales",
    "title": "Data Viz Best Practices",
    "section": "Continuous Color Scales",
    "text": "Continuous Color Scales"
  },
  {
    "objectID": "slides/week-4.1.html#use-scale_color_viridis_c",
    "href": "slides/week-4.1.html#use-scale_color_viridis_c",
    "title": "Data Viz Best Practices",
    "section": "Use scale_color_viridis_c()",
    "text": "Use scale_color_viridis_c()\n\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point(aes(color = flfp)) + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"FLFP\"\n    ) +\n  scale_color_viridis_c(option = \"mako\", end = .8)"
  },
  {
    "objectID": "slides/week-4.1.html#fill-vs.-color",
    "href": "slides/week-4.1.html#fill-vs.-color",
    "title": "Data Viz Best Practices",
    "section": "Fill vs. Color",
    "text": "Fill vs. Color\n\n\nUse color (e.g. color = or scale_color_*) to modify the color of points, lines, or text.\nCommonly applied to:\n\nScatter plots\nLine charts\nText elements"
  },
  {
    "objectID": "slides/week-4.1.html#fill-vs.-color-1",
    "href": "slides/week-4.1.html#fill-vs.-color-1",
    "title": "Data Viz Best Practices",
    "section": "Fill vs. Color",
    "text": "Fill vs. Color\n\n\nUse fill (e.g. fill = or scale_fill_*) to modify the fill color of shapes like bars, boxes, or polygons.\nCommonly applied to:\n\nBar charts\nBox plots\nHistograms"
  },
  {
    "objectID": "slides/week-4.1.html#our-column-chart-from-previous-class",
    "href": "slides/week-4.1.html#our-column-chart-from-previous-class",
    "title": "Data Viz Best Practices",
    "section": "Our Column Chart from Previous Class",
    "text": "Our Column Chart from Previous Class"
  },
  {
    "objectID": "slides/week-4.1.html#section-2",
    "href": "slides/week-4.1.html#section-2",
    "title": "Data Viz Best Practices",
    "section": "",
    "text": "Here we used the fill argument to color the bars in our column chart.\n\n\nggplot(dem_summary, aes(x = reorder(region, -polyarchy), y = polyarchy)) +\n  geom_col(fill = \"steelblue\") + \n  labs(\n    x = \"Region\", \n    y = \"Avg. Polyarchy Score\", \n    title = \"Democracy by region, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    ) + \n  theme_minimal() +\n  scale_fill_viridis_d(option = \"mako\", end = .8)"
  },
  {
    "objectID": "slides/week-4.1.html#section-3",
    "href": "slides/week-4.1.html#section-3",
    "title": "Data Viz Best Practices",
    "section": "",
    "text": "Should we do this instead?\n\n\nggplot(dem_summary, aes(x = reorder(region, -polyarchy), y = polyarchy, fill = region)) +\n  geom_col() + \n  labs(\n    x = \"Region\", \n    y = \"Avg. Polyarchy Score\", \n    title = \"Democracy by region, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    ) + \n  theme_minimal() +\n  scale_fill_viridis_d(option = \"mako\", end = .8)"
  },
  {
    "objectID": "slides/week-4.1.html#section-4",
    "href": "slides/week-4.1.html#section-4",
    "title": "Data Viz Best Practices",
    "section": "",
    "text": "Should we do this instead?"
  },
  {
    "objectID": "slides/week-4.1.html#when-to-use-a-color-scheme",
    "href": "slides/week-4.1.html#when-to-use-a-color-scheme",
    "title": "Data Viz Best Practices",
    "section": "When to Use a Color Scheme",
    "text": "When to Use a Color Scheme\n\n\nUse a color scheme when you want to differentiate between categories or groups\nBut only when the color adds value to the visualization\nIn this case, region is already differentiated by column height"
  },
  {
    "objectID": "slides/week-4.1.html#facet-wrapping",
    "href": "slides/week-4.1.html#facet-wrapping",
    "title": "Data Viz Best Practices",
    "section": "Facet Wrapping",
    "text": "Facet Wrapping"
  },
  {
    "objectID": "slides/week-4.1.html#facet-wrapping-1",
    "href": "slides/week-4.1.html#facet-wrapping-1",
    "title": "Data Viz Best Practices",
    "section": "Facet Wrapping",
    "text": "Facet Wrapping\n\nUse facet_wrap() with ~ before variable you want to wrap on…\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point() + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  facet_wrap(~ region) +\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )"
  },
  {
    "objectID": "slides/week-4.1.html#facet-wrapping-2",
    "href": "slides/week-4.1.html#facet-wrapping-2",
    "title": "Data Viz Best Practices",
    "section": "Facet Wrapping",
    "text": "Facet Wrapping\n\nWhat else changes? Back down to two dimensions…\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point() + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  facet_wrap(~ region) +\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )"
  },
  {
    "objectID": "slides/week-4.1.html#facet-wrapping-3",
    "href": "slides/week-4.1.html#facet-wrapping-3",
    "title": "Data Viz Best Practices",
    "section": "Facet Wrapping",
    "text": "Facet Wrapping\n\nDon’t forget to take the legend title out of the captions…\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point() + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  facet_wrap(~ region) +\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )"
  },
  {
    "objectID": "slides/week-4.1.html#your-turn-1",
    "href": "slides/week-4.1.html#your-turn-1",
    "title": "Data Viz Best Practices",
    "section": "Your Turn!",
    "text": "Your Turn!\n\n\nFacet wrap your scatter plot\nUse scales = \"free\" in facet_wrap call to fix the West\n\nfacet_wrap(~ region, scales = \"free\")\n\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/week-4.1.html#labeling-points",
    "href": "slides/week-4.1.html#labeling-points",
    "title": "Data Viz Best Practices",
    "section": "Labeling Points",
    "text": "Labeling Points"
  },
  {
    "objectID": "slides/week-4.1.html#labeling-points-1",
    "href": "slides/week-4.1.html#labeling-points-1",
    "title": "Data Viz Best Practices",
    "section": "Labeling Points",
    "text": "Labeling Points\n\nFilter for Asia, add labels with geom_text()…\n\ndem_summary_ctry |&gt; \n  filter(region == \"Asia\") |&gt;\n  ggplot(aes(x = gdp_pc, y = polyarchy)) + \n    geom_point() + \n    geom_text(aes(label = country), size = 2, vjust = 2) +\n    geom_smooth(method = \"lm\", linewidth = 1) +\n    scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n      labs(\n        x= \"GDP Per Capita\", \n        y = \"Polyarchy Score\",\n        title = \"Wealth and democracy in Asia, 1990 - present\", \n        caption = \"Source: V-Dem Institute\"\n        )"
  },
  {
    "objectID": "slides/week-4.1.html#your-turn-2",
    "href": "slides/week-4.1.html#your-turn-2",
    "title": "Data Viz Best Practices",
    "section": "Your Turn!",
    "text": "Your Turn!\n\n\nFilter for Asia or another region\nUse geom_text() to add labels to your points\nPlay with size and vjust paramters\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/week-4.1.html#make-it-interactive",
    "href": "slides/week-4.1.html#make-it-interactive",
    "title": "Data Viz Best Practices",
    "section": "Make it Interactive",
    "text": "Make it Interactive"
  },
  {
    "objectID": "slides/week-4.1.html#section-5",
    "href": "slides/week-4.1.html#section-5",
    "title": "Data Viz Best Practices",
    "section": "",
    "text": "Use plotly to make any plot interactive…\n\nlibrary(plotly)\n\nmodernization_plot &lt;- ggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point(aes(color = region)) + \n  aes(label = country) +\n  geom_smooth(method = \"lm\", linewidth = 1) + \n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\"\n    ) +\n  scale_color_viridis_d(option = \"inferno\", end = .8)\n\nggplotly(modernization_plot, tooltip = c(\"country\", \"gdp_pc\", \"polyarchy\"))"
  },
  {
    "objectID": "slides/week-4.1.html#your-turn-3",
    "href": "slides/week-4.1.html#your-turn-3",
    "title": "Data Viz Best Practices",
    "section": "Your Turn!",
    "text": "Your Turn!\n\n\nMake your scatter plot interactive with plotly\nUse tooltip argument to show more information on hover\nMake sure to include an additional aesthetic in aes() for the label\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/week-4.1.html#messages-warnings-and-errors",
    "href": "slides/week-4.1.html#messages-warnings-and-errors",
    "title": "Data Viz Best Practices",
    "section": "Messages, Warnings and Errors",
    "text": "Messages, Warnings and Errors\n\n\nMessages tell you what R is doing\nWarnings tell you that something might be wrong\nErrors tell you that something is definitely wrong\n\nLocate the error line number in the console and check your code\nError line tells you about where the error occurred, not exact\nErrors are normal, don’t freak out!\nIn fact, you should practice making errors to learn how to fix them"
  },
  {
    "objectID": "slides/week-5.1.html#where-does-data-come-from",
    "href": "slides/week-5.1.html#where-does-data-come-from",
    "title": "Understanding Data",
    "section": "Where Does Data Come From?",
    "text": "Where Does Data Come From?\n\nThoughts? 😎 💭\n\n\n\nYour boss or a client sends you a file\nSurvey data collected by you or someone else\nYou can download it from a website\nYou can scrape it from a website\nA data package (e.g. unvotes)\nYou can access it through an API"
  },
  {
    "objectID": "slides/week-5.1.html#getting-started-with-data",
    "href": "slides/week-5.1.html#getting-started-with-data",
    "title": "Understanding Data",
    "section": "Getting Started with Data",
    "text": "Getting Started with Data\n\n\n\nTabular data is data that is organized into rows and columns\n\na.k.a. rectangular data\n\nA data frame is a special kind of tabular data used in data science\nA variable is something you can measure\nAn observation is a single unit or case in your data set\nThe unit of analysis is the level at which you are measuring\n\nIn a cross-section: country, state, county, city, individual, etc.\nIn a time-series: year, month, day, etc."
  },
  {
    "objectID": "slides/week-5.1.html#the-concept-of-tidy-data",
    "href": "slides/week-5.1.html#the-concept-of-tidy-data",
    "title": "Understanding Data",
    "section": "The Concept of “Tidy Data”",
    "text": "The Concept of “Tidy Data”\n\n\nEach column represents a single variable\nEach row represents a single observation\nEach cell represents a single value"
  },
  {
    "objectID": "slides/week-5.1.html#tidy-data-example",
    "href": "slides/week-5.1.html#tidy-data-example",
    "title": "Understanding Data",
    "section": "Tidy Data Example",
    "text": "Tidy Data Example"
  },
  {
    "objectID": "slides/week-5.1.html#what-are-clean-data",
    "href": "slides/week-5.1.html#what-are-clean-data",
    "title": "Understanding Data",
    "section": "What are Clean Data?",
    "text": "What are Clean Data?\n\nColumn names are easy to work with and are not duplicated\nMissing values have been dealt with\nThere are no repeated observations or columns\nThere are no blank observations or columns\nThe data are in the proper format, for example dates should be formatted as dates"
  },
  {
    "objectID": "slides/week-5.1.html#messy-data-example",
    "href": "slides/week-5.1.html#messy-data-example",
    "title": "Understanding Data",
    "section": "Messy Data Example",
    "text": "Messy Data Example"
  },
  {
    "objectID": "slides/week-5.1.html#which-of-these-is-likely-tidyclean",
    "href": "slides/week-5.1.html#which-of-these-is-likely-tidyclean",
    "title": "Understanding Data",
    "section": "Which of These is Likely Tidy/Clean?",
    "text": "Which of These is Likely Tidy/Clean?\n\n\nYour boss or a client sends you a file\nSurvey data collected by you or someone else\nYou can download it from a website\nYou can scrape it from a website\nA curated collection (e.g. unvotes)\nYou can access it through an API"
  },
  {
    "objectID": "slides/week-5.1.html#how-do-we-get-tidyclean-data",
    "href": "slides/week-5.1.html#how-do-we-get-tidyclean-data",
    "title": "Understanding Data",
    "section": "How Do We Get Tidy/Clean Data?",
    "text": "How Do We Get Tidy/Clean Data?\n\n\nGet lucky and find it\nWrangle it ourselves\nUse a package where it has been wrangled for us\nDownload via an API"
  },
  {
    "objectID": "slides/week-5.1.html#read-data-into-r",
    "href": "slides/week-5.1.html#read-data-into-r",
    "title": "Understanding Data",
    "section": "Read Data into R",
    "text": "Read Data into R\n\n\nUse read_csv() function from readr package\nreadr package is part of the tidyverse\nCan do more with it than base R functions"
  },
  {
    "objectID": "slides/week-5.1.html#r-code-review",
    "href": "slides/week-5.1.html#r-code-review",
    "title": "Understanding Data",
    "section": "R Code Review",
    "text": "R Code Review\n\n\n\n&lt;- is the assignment operator\n\nUse it to assign values to objects\n\n# is the comment operator\n\nUse it to comment out code or add comments\nDifferent function than in markdown text\n\nTo call a library, use library() and name of library\n\nname of library does not have to be in quotes, e.g. library(readr)\nonly when you install it, e.g. install.packages(\"readr\")"
  },
  {
    "objectID": "slides/week-5.1.html#read-data-into-r-1",
    "href": "slides/week-5.1.html#read-data-into-r-1",
    "title": "Understanding Data",
    "section": "Read Data into R",
    "text": "Read Data into R\n\n\n# load libraries\nlibrary(readr)\nlibrary(dplry)\n\ndem_summary &lt;- read_csv(\"data/dem_summary.csv\") #notice file path\n\nglimpse(dem_summary)"
  },
  {
    "objectID": "slides/week-5.1.html#viewing-the-data-in-r",
    "href": "slides/week-5.1.html#viewing-the-data-in-r",
    "title": "Understanding Data",
    "section": "Viewing the Data in R",
    "text": "Viewing the Data in R\n\nUse glimpse() to see the columns and data types:\n\n# load libraries\nlibrary(readr)\nlibrary(dplyr)\n\ndem_summary &lt;- read_csv(\"data/dem_summary.csv\")\n\nglimpse(dem_summary)\n\nRows: 6\nColumns: 5\n$ region    &lt;chr&gt; \"The West\", \"Latin America\", \"Eastern Europe\", \"Asia\", \"Afri…\n$ polyarchy &lt;dbl&gt; 0.8709230, 0.6371358, 0.5387451, 0.4076602, 0.3934166, 0.245…\n$ gdp_pc    &lt;dbl&gt; 37.913054, 9.610284, 12.176554, 9.746391, 4.410484, 21.134319\n$ flfp      &lt;dbl&gt; 52.99082, 48.12645, 50.45894, 50.32171, 56.69530, 26.57872\n$ women_rep &lt;dbl&gt; 28.12921, 21.32548, 17.99728, 14.45225, 17.44296, 10.21568"
  },
  {
    "objectID": "slides/week-5.1.html#try-it-yourself",
    "href": "slides/week-5.1.html#try-it-yourself",
    "title": "Understanding Data",
    "section": "Try It Yourself!",
    "text": "Try It Yourself!\n\nOpen the CSV file to see what it looks like\nThen use this code to read it into R and view it\n\n\n# load libraries\nlibrary(readr)\nlibrary(dplyr)\n\ndem_summary &lt;- read_csv(\"data/dem_summary.csv\")\n\nglimpse(dem_summary)\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/week-5.1.html#write-a-new-csv-file",
    "href": "slides/week-5.1.html#write-a-new-csv-file",
    "title": "Understanding Data",
    "section": "Write a New CSV File",
    "text": "Write a New CSV File\n\nNow try writing the same data to a file with a different name\n\nwrite_csv(dem_summary, \"data/your_new_file_name.csv\") \n\n\n\n\n−+\n02:00"
  },
  {
    "objectID": "slides/week-5.1.html#read-in-excel-file",
    "href": "slides/week-5.1.html#read-in-excel-file",
    "title": "Understanding Data",
    "section": "Read in Excel File",
    "text": "Read in Excel File\n\n\nlibrary(readxl)\n\ndem_summary &lt;- read_excel(\"data/dem_summary.xlsx\")\n\nglimpse(dem_summary)"
  },
  {
    "objectID": "slides/week-5.1.html#try-with-excel",
    "href": "slides/week-5.1.html#try-with-excel",
    "title": "Understanding Data",
    "section": "Try With Excel",
    "text": "Try With Excel\n\n\nRead in the Excel file\nFollow same steps as with CSV file\n\nuse read_excel() to read in the data\ninstall and experiment with writexl\n\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/week-5.1.html#import-data-from-google-sheets",
    "href": "slides/week-5.1.html#import-data-from-google-sheets",
    "title": "Understanding Data",
    "section": "Import Data from Google Sheets",
    "text": "Import Data from Google Sheets\n\n\nCan use googlesheets4\nHave a look at these Gapminder data\nUse gs4_deauth() to authenticate\nThen use read_sheet() to read in the data"
  },
  {
    "objectID": "slides/week-5.1.html#example-code",
    "href": "slides/week-5.1.html#example-code",
    "title": "Understanding Data",
    "section": "Example Code",
    "text": "Example Code\n\n\nlibrary(googlesheets4)\n\n# Deauthorize to access public sheets without credentials\ngs4_deauth()\n\n# Read in the gapminder Africa data\ngapminder_data &lt;- read_sheet(\"1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY\")"
  },
  {
    "objectID": "slides/week-5.1.html#or",
    "href": "slides/week-5.1.html#or",
    "title": "Understanding Data",
    "section": "Or…",
    "text": "Or…\n\n\nlibrary(googlesheets4)\n\n# Deauthorize to access public sheets without credentials\ngs4_deauth()\n\n# Read in the gapminder Africa data\ngapminder_data &lt;- read_sheet(\"1U6Cf_qEOhiR9AZqTqS3mbMF3zt2db48ZP5v3rkrAEJY\")"
  },
  {
    "objectID": "slides/week-5.1.html#or-1",
    "href": "slides/week-5.1.html#or-1",
    "title": "Understanding Data",
    "section": "Or…",
    "text": "Or…\n\n\nlibrary(googlesheets4)\n\n# Deauthorize to access public sheets without credentials\ngs4_deauth()\n\n# Read in the gapminder Africa data\ngapminder_data &lt;- googledrive::drive_get(\"gapminder\") |&gt;\n  read_sheet()"
  },
  {
    "objectID": "slides/week-5.1.html#try-it-yourself-1",
    "href": "slides/week-5.1.html#try-it-yourself-1",
    "title": "Understanding Data",
    "section": "Try It Yourself!",
    "text": "Try It Yourself!\n\n\nUse the code above to read in the data\nTry reading in Gapminder data for a different country\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/week-5.1.html#find-your-own-data",
    "href": "slides/week-5.1.html#find-your-own-data",
    "title": "Understanding Data",
    "section": "Find Your Own Data",
    "text": "Find Your Own Data\n\n\nVisit kaggle.com\nFind a dataset you like\nDownload it as a CSV\nUpload to your Posit Cloud project\nRead it into R\nExplore with glimpse() and View()\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/week-3.1.html#types-of-visualizations",
    "href": "slides/week-3.1.html#types-of-visualizations",
    "title": "Grammar of Graphics",
    "section": "Types of Visualizations",
    "text": "Types of Visualizations\n\n\n\nColumn charts (bar charts)\n\nUse to compare values across categories\n\nHistograms\n\nUse to show distribution of a single variable\n\nLine charts\n\nUse to show trends over time\nCan use column charts but not as effective\n\nScatter plots\n\nUse to show relationships between two variables\nX-axis is usually explanatory variable, Y-axis is outcome variable"
  },
  {
    "objectID": "slides/week-3.1.html#the-grammar-of-graphics",
    "href": "slides/week-3.1.html#the-grammar-of-graphics",
    "title": "Grammar of Graphics",
    "section": "The Grammar of Graphics",
    "text": "The Grammar of Graphics\n\n\nData viz has a language with its own grammar\nBasic components include:\n\nData we are trying to visualize\nAesthetics (dimensions)\nGeom (e.g. bar, line, scatter plot)\nColor scales\nThemes\nAnnotations"
  },
  {
    "objectID": "slides/week-3.1.html#section",
    "href": "slides/week-3.1.html#section",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "Let’s start with the first two, the data and the aesthetic, with a column chart example…\n\n\nlibrary(readr)\nlibrary(ggplot2)\n\ndem_summary &lt;- read_csv(\"data/dem_summary.csv\")\n\nggplot(dem_summary, aes(x = region, y = polyarchy))"
  },
  {
    "objectID": "slides/week-3.1.html#section-1",
    "href": "slides/week-3.1.html#section-1",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "This gives us the axes without any visualization:"
  },
  {
    "objectID": "slides/week-3.1.html#section-2",
    "href": "slides/week-3.1.html#section-2",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "Now let’s add a geom. In this case we want a column chart so we add geom_col().\n\n\nggplot(dem_summary, aes(x = region, y = polyarchy)) + \n  geom_col()"
  },
  {
    "objectID": "slides/week-3.1.html#section-3",
    "href": "slides/week-3.1.html#section-3",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "That gets the idea across but looks a little depressing, so…"
  },
  {
    "objectID": "slides/week-3.1.html#section-4",
    "href": "slides/week-3.1.html#section-4",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "…let’s change the color of the columns by specifying fill = \"steelblue\".\n\n\nggplot(dem_summary, aes(x = region, y = polyarchy)) + \n  geom_col(fill = \"steelblue\")\n\n\n\n\n\n\n\n\nTip\n\n\nSee here for more availableggplot2` colors."
  },
  {
    "objectID": "slides/week-3.1.html#section-5",
    "href": "slides/week-3.1.html#section-5",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "Note how color of original columns is simply overwritten:"
  },
  {
    "objectID": "slides/week-3.1.html#section-6",
    "href": "slides/week-3.1.html#section-6",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "Now let’s add some labels with the labs() function:\n\n\nggplot(dem_summary, aes(x = region, y = polyarchy)) + \n  geom_col(fill = \"steelblue\") +\n  labs(\n    x = \"Region\", \n    y = \"Avg. Polyarchy Score\", \n    title = \"Democracy by region, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )"
  },
  {
    "objectID": "slides/week-3.1.html#section-7",
    "href": "slides/week-3.1.html#section-7",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "And that gives us…"
  },
  {
    "objectID": "slides/week-3.1.html#section-8",
    "href": "slides/week-3.1.html#section-8",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "Next, we reorder the bars with fct_reorder() from the forcats package.\n\n\nlibrary(forcats)\n\nggplot(dem_summary, aes(x = fct_reorder(region, -polyarchy), y = polyarchy)) +\n  geom_col(fill = \"steelblue\") + \n  labs(\n    x = \"Region\", \n    y = \"Avg. Polyarchy Score\", \n    title = \"Democracy by region, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )\n\n\nNote that we could also use the base R reorder() function here."
  },
  {
    "objectID": "slides/week-3.1.html#section-9",
    "href": "slides/week-3.1.html#section-9",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "This way, we get a nice, visually appealing ordering of the bars according to levels of democracy…"
  },
  {
    "objectID": "slides/week-3.1.html#section-10",
    "href": "slides/week-3.1.html#section-10",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "Now let’s change the theme to theme_minimal().\n\n\nggplot(dem_summary, aes(x = reorder(region, -polyarchy), y = polyarchy)) +\n  geom_col(fill = \"steelblue\") + \n  labs(\n    x = \"Region\", \n    y = \"Avg. Polyarchy Score\", \n    title = \"Democracy by region, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    ) + theme_minimal()\n\n\n\n\n\n\n\n\nTip\n\n\nSee here for available ggplot2 themes."
  },
  {
    "objectID": "slides/week-3.1.html#section-11",
    "href": "slides/week-3.1.html#section-11",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "Gives us a clean, elegant look."
  },
  {
    "objectID": "slides/week-3.1.html#section-12",
    "href": "slides/week-3.1.html#section-12",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "Note that you can also save your plot as an object to modify later.\n\n\ndem_bar_chart &lt;- ggplot(dem_summary, aes(x = reorder(region, -polyarchy), y = polyarchy)) +\n  geom_col(fill = \"steelblue\")"
  },
  {
    "objectID": "slides/week-3.1.html#section-13",
    "href": "slides/week-3.1.html#section-13",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "Which gives us…\n\ndem_bar_chart"
  },
  {
    "objectID": "slides/week-3.1.html#section-14",
    "href": "slides/week-3.1.html#section-14",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "Now let’s add back our labels…\n\n\ndem_bar_chart &lt;- dem_bar_chart +\n  labs(\n    x = \"Region\", \n    y = \"Avg. Polyarchy Score\", \n    title = \"Democracy by region, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )"
  },
  {
    "objectID": "slides/week-3.1.html#section-15",
    "href": "slides/week-3.1.html#section-15",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "So now we have…\n\ndem_bar_chart"
  },
  {
    "objectID": "slides/week-3.1.html#section-16",
    "href": "slides/week-3.1.html#section-16",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "And now we’ll add back our theme…\n\n\ndem_bar_chart &lt;- dem_bar_chart + theme_minimal()"
  },
  {
    "objectID": "slides/week-3.1.html#section-17",
    "href": "slides/week-3.1.html#section-17",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "Voila!\n\ndem_bar_chart"
  },
  {
    "objectID": "slides/week-3.1.html#section-18",
    "href": "slides/week-3.1.html#section-18",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "Change the theme. There are many themes to choose from.\n\ndem_bar_chart + theme_bw()"
  },
  {
    "objectID": "slides/week-3.1.html#your-turn",
    "href": "slides/week-3.1.html#your-turn",
    "title": "Grammar of Graphics",
    "section": "Your Turn!",
    "text": "Your Turn!\n\n\nglimpse() the data\nFind a new variable to visualize1\nMake a bar chart with it\nChange the color of the bars\nOrder the bars\nAdd labels\nAdd a theme\nTry saving your plot as an object\nThen change the labels and/or theme\n\n\n\n\n−+\n10:00\n\n\n\nData for GDP per capita spotty after 2015"
  },
  {
    "objectID": "slides/week-3.1.html#purpose-of-histograms",
    "href": "slides/week-3.1.html#purpose-of-histograms",
    "title": "Grammar of Graphics",
    "section": "Purpose of Histograms",
    "text": "Purpose of Histograms\n\n\nHistograms are used to visualize the distribution of a single variable\nx-axis represents value of variable of interest\ny-axis represents the frequency of that value"
  },
  {
    "objectID": "slides/week-3.1.html#purpose-of-histograms-1",
    "href": "slides/week-3.1.html#purpose-of-histograms-1",
    "title": "Grammar of Graphics",
    "section": "Purpose of Histograms",
    "text": "Purpose of Histograms\n\n\nThey are generally used for continuous variables (e.g., income, age, etc.)\n\nA continuous variable is one that can take on any value within a range (e.g., 0.5, 1.2, 3.7, etc.)\nA discrete variable is one that can only take on certain values (e.g., 1, 2, 3, etc.)\n\nTypically, the height of the bar represents the number of observations which fall in that bin"
  },
  {
    "objectID": "slides/week-3.1.html#example",
    "href": "slides/week-3.1.html#example",
    "title": "Grammar of Graphics",
    "section": "Example",
    "text": "Example"
  },
  {
    "objectID": "slides/week-3.1.html#histogram-code",
    "href": "slides/week-3.1.html#histogram-code",
    "title": "Grammar of Graphics",
    "section": "Histogram Code",
    "text": "Histogram Code\n\n\n# load dplyr\n\nlibrary(dplyr)\n\n# load data\ndem_women &lt;- read_csv(\"data/dem_women.csv\")\n\n# filter to 2022\ndem_women_2022 &lt;- dem_women |&gt;\n  filter(year == 2022) \n\n# create histogram\nggplot(dem_women_2022, aes(x = flfp)) +\n  geom_histogram(fill = \"steelblue\") + \n  labs(\n    x = \"Percentage of Working Aged Women in Labor Force\",\n    y = \"Number of Countries\",\n    title = \"Female labor force participation rates, 2022\",\n    caption = \"Source: World Bank\"\n    ) + theme_minimal()"
  },
  {
    "objectID": "slides/week-3.1.html#histogram-code-1",
    "href": "slides/week-3.1.html#histogram-code-1",
    "title": "Grammar of Graphics",
    "section": "Histogram Code",
    "text": "Histogram Code\n\nNote that you only need to specify the x axis variable in the aes() function. ggplot2 will automatically visualize the y-axis for a histogram.\n\n\nggplot(dem_women_2022, aes(x = flfp)) +\n  geom_histogram(bins = 50, fill = \"steelblue\") + \n  labs(\n    x = \"Percentage of Working Aged Women in Labor Force\",\n    y = \"Number of Countries\",\n    title = \"Female labor force participation rates, 2022\",\n    caption = \"Source: World Bank\"\n    ) + theme_minimal()"
  },
  {
    "objectID": "slides/week-3.1.html#change-number-of-bins",
    "href": "slides/week-3.1.html#change-number-of-bins",
    "title": "Grammar of Graphics",
    "section": "Change Number of Bins",
    "text": "Change Number of Bins\n\nChange number of bins (bars) using bins or binwidth arguments (default number of bins = 30):\n\n\nggplot(dem_women_2022, aes(x = flfp)) +\n  geom_histogram(bins = 50, fill = \"steelblue\") + \n  labs(\n    x = \"Percentage of Working Aged Women in Labor Force\",\n    y = \"Number of Countries\",\n    title = \"Female labor force participation rates, 2022\",\n    caption = \"Source: World Bank\"\n    ) + theme_minimal()"
  },
  {
    "objectID": "slides/week-3.1.html#section-19",
    "href": "slides/week-3.1.html#section-19",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "At 50 bins…"
  },
  {
    "objectID": "slides/week-3.1.html#section-20",
    "href": "slides/week-3.1.html#section-20",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "At 100 bins…probably too many!"
  },
  {
    "objectID": "slides/week-3.1.html#section-21",
    "href": "slides/week-3.1.html#section-21",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "Using binwidth instead of bins…\n\n\nggplot(dem_women_2022, aes(x = flfp)) +\n  geom_histogram(binwidth = 2, fill = \"steelblue\") + \n  labs(\n    x = \"Percentage of Working Aged Women in Labor Force\",\n    y = \"Number of Countries\",\n    title = \"Female labor force participation rates, 2022\",\n    caption = \"Source: World Bank\"\n    ) + theme_minimal()"
  },
  {
    "objectID": "slides/week-3.1.html#section-22",
    "href": "slides/week-3.1.html#section-22",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "Setting binwidth to 2…"
  },
  {
    "objectID": "slides/week-3.1.html#change-from-count-to-density",
    "href": "slides/week-3.1.html#change-from-count-to-density",
    "title": "Grammar of Graphics",
    "section": "Change from Count to Density",
    "text": "Change from Count to Density\n\n\nggplot(dem_women_2022, aes(after_stat(density), x = flfp)) +\n  geom_histogram(fill = \"steelblue\") + \n  labs(\n    x = \"Percentage of Working Aged Women in Labor Force\",\n    y = \"Density\",\n    title = \"Female labor force participation rates, 2022\",\n    caption = \"Source: World Bank\"\n    ) + theme_minimal()\n\n\nFor densities, the total area sums to 1. The height of a bar represents the probability of observations in that bin (rather than the number of observations)."
  },
  {
    "objectID": "slides/week-3.1.html#section-23",
    "href": "slides/week-3.1.html#section-23",
    "title": "Grammar of Graphics",
    "section": "",
    "text": "Which gives us…"
  },
  {
    "objectID": "slides/week-3.1.html#your-turn-1",
    "href": "slides/week-3.1.html#your-turn-1",
    "title": "Grammar of Graphics",
    "section": "Your Turn!",
    "text": "Your Turn!\n\n\nPick a variable that you want to explore the distribution of1\nMake a histogram\n\nOnly specify x = in aes()\nSpecify geom as geom_histogram\n\nChoose color for bars\nChoose appropriate labels\nChange number of bins\nChange from count to density\n\n\n\n\n−+\n10:00\n\n\n\n\n\nData for GDP per capita spotty after 2015"
  },
  {
    "objectID": "instructor.html",
    "href": "instructor.html",
    "title": "Instructor",
    "section": "",
    "text": "Emmanuel Teitelbaum is an associate professor of political science and international affairs at the The George Washington University His research and writing explore how class conflict and compromise intersect with democracy and development. He also has a strong interest in labor standards and understanding how labor unions, nonprofit organizations, consumers and corporations can help to promote them.\nAt GW, Professor Teitelbaum teaches courses on comparative politics, comparative political economy and data science. He is on faculty in the Department of Political Science and the Elliott School of International Affairs and is affiliated with the Sigur Center for Asian Studies as well as the Institute for International Economic Policy.",
    "crumbs": [
      "Course information",
      "Instructor"
    ]
  },
  {
    "objectID": "instructor.html#office-hours",
    "href": "instructor.html#office-hours",
    "title": "Instructor",
    "section": "Office Hours",
    "text": "Office Hours\nProfessor Teitelbaum’s office hours are on Mondays from 3:00 p.m. to 5:00 p.m. Please sign up for a slot (or two) on his Calendly page. He is available for consultation virtually on Zoom or in his office at 411 Monroe Hall (2115 G. ST NW).",
    "crumbs": [
      "Course information",
      "Instructor"
    ]
  },
  {
    "objectID": "weeks/week-14.html",
    "href": "weeks/week-14.html",
    "title": "Week 14",
    "section": "",
    "text": "📖 Aklin and Matto, “Prisoners of the Wrong Dilemma”"
  },
  {
    "objectID": "weeks/week-14.html#readings",
    "href": "weeks/week-14.html#readings",
    "title": "Week 14",
    "section": "",
    "text": "📖 Aklin and Matto, “Prisoners of the Wrong Dilemma”"
  },
  {
    "objectID": "weeks/week-14.html#slides",
    "href": "weeks/week-14.html#slides",
    "title": "Week 14",
    "section": "Slides",
    "text": "Slides\n🖥️ Climate change and collective action\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "weeks/week-8.html",
    "href": "weeks/week-8.html",
    "title": "Week 8",
    "section": "",
    "text": "Important\n\n\n\nExam 2 is due on Sunday, March 19."
  },
  {
    "objectID": "weeks/week-8.html#readings",
    "href": "weeks/week-8.html#readings",
    "title": "Week 8",
    "section": "Readings",
    "text": "Readings\n📖 James Putzel, “The ‘Populist’ Right Challenge to Neoliberalism”\n📖 Mary Cullen, “How to Write and Format a White Paper”"
  },
  {
    "objectID": "weeks/week-8.html#slides",
    "href": "weeks/week-8.html#slides",
    "title": "Week 8",
    "section": "Slides",
    "text": "Slides\n🖥️ Populism and social policy\n🖥️ Exam 2 review"
  },
  {
    "objectID": "weeks/week-8.html#assignments",
    "href": "weeks/week-8.html#assignments",
    "title": "Week 8",
    "section": "Assignments",
    "text": "Assignments\n📘 Exam 2\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "weeks/week-12.html",
    "href": "weeks/week-12.html",
    "title": "Week 12",
    "section": "",
    "text": "Important\n\n\n\n“Project Assignment 2: White Paper” is due on Sunday, April 9"
  },
  {
    "objectID": "weeks/week-12.html#readings",
    "href": "weeks/week-12.html#readings",
    "title": "Week 12",
    "section": "Readings",
    "text": "Readings\n📖 Autor, Dorn and Hanson, “The China Shock”\n📖 Joseph Stiglitz, People, Power, and Profits, Chapter 3"
  },
  {
    "objectID": "weeks/week-12.html#slides",
    "href": "weeks/week-12.html#slides",
    "title": "Week 12",
    "section": "Slides",
    "text": "Slides\n🖥️ Globalization\n🖥️ Inequality"
  },
  {
    "objectID": "weeks/week-12.html#assignments",
    "href": "weeks/week-12.html#assignments",
    "title": "Week 12",
    "section": "Assignments",
    "text": "Assignments\n✍️ Project Assignment 2: White Paper\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "weeks/week-11.html",
    "href": "weeks/week-11.html",
    "title": "Week 11",
    "section": "",
    "text": "📖 Gumbrell-McCormick and Hyman, “Democracy in Trade Unions, Democracy Through Trade Unions?”\n📖 Hall and Soskice, Varities of Capitalism, Chapter 1"
  },
  {
    "objectID": "weeks/week-11.html#readings",
    "href": "weeks/week-11.html#readings",
    "title": "Week 11",
    "section": "",
    "text": "📖 Gumbrell-McCormick and Hyman, “Democracy in Trade Unions, Democracy Through Trade Unions?”\n📖 Hall and Soskice, Varities of Capitalism, Chapter 1"
  },
  {
    "objectID": "weeks/week-11.html#slides",
    "href": "weeks/week-11.html#slides",
    "title": "Week 11",
    "section": "Slides",
    "text": "Slides\n🖥️ Unions and collective bargaining\n🖥️ Varieties of capitalism\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "weeks/week-2.html",
    "href": "weeks/week-2.html",
    "title": "Week 2",
    "section": "",
    "text": "📖 Acemoglu and Robinson, “Rents and Economic Development”\n📖 Cheibub and Vreeland, “Modernization Theory”"
  },
  {
    "objectID": "weeks/week-2.html#readings",
    "href": "weeks/week-2.html#readings",
    "title": "Week 2",
    "section": "",
    "text": "📖 Acemoglu and Robinson, “Rents and Economic Development”\n📖 Cheibub and Vreeland, “Modernization Theory”"
  },
  {
    "objectID": "weeks/week-2.html#slides",
    "href": "weeks/week-2.html#slides",
    "title": "Week 2",
    "section": "Slides",
    "text": "Slides\n🖥️ Institutions and Development\n🖥️ Modernization Theory\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "weeks/week-1.html",
    "href": "weeks/week-1.html",
    "title": "Week 1",
    "section": "",
    "text": "📖 Review the course syllabus and support resources\n📖 Polanyi, The Great Transformation, Chapter 11"
  },
  {
    "objectID": "weeks/week-1.html#readings",
    "href": "weeks/week-1.html#readings",
    "title": "Week 1",
    "section": "",
    "text": "📖 Review the course syllabus and support resources\n📖 Polanyi, The Great Transformation, Chapter 11"
  },
  {
    "objectID": "weeks/week-1.html#slides",
    "href": "weeks/week-1.html#slides",
    "title": "Week 1",
    "section": "Slides",
    "text": "Slides\n🖥Polany’s Great Transformation\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "weeks/week-5.html",
    "href": "weeks/week-5.html",
    "title": "Week 5",
    "section": "",
    "text": "📖 Stokes et. al., Brokers, Voters and Clientelism, Chapter 1\n📖 Aspinall and Berenschot, Democracy for Sale, Chapter 5"
  },
  {
    "objectID": "weeks/week-5.html#readings",
    "href": "weeks/week-5.html#readings",
    "title": "Week 5",
    "section": "",
    "text": "📖 Stokes et. al., Brokers, Voters and Clientelism, Chapter 1\n📖 Aspinall and Berenschot, Democracy for Sale, Chapter 5"
  },
  {
    "objectID": "weeks/week-5.html#slides",
    "href": "weeks/week-5.html#slides",
    "title": "Week 5",
    "section": "Slides",
    "text": "Slides\n🖥️ Programmatic politics vs. clientelism\n🖥️ Vote buying\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "weeks/week-6.html",
    "href": "weeks/week-6.html",
    "title": "Week 6",
    "section": "",
    "text": "📖 Edward Miguel, “Tribe or Nation?”\n📖 Holland and Ben Ross Schneider, “Easy and Hard Redistribution”"
  },
  {
    "objectID": "weeks/week-6.html#readings",
    "href": "weeks/week-6.html#readings",
    "title": "Week 6",
    "section": "",
    "text": "📖 Edward Miguel, “Tribe or Nation?”\n📖 Holland and Ben Ross Schneider, “Easy and Hard Redistribution”"
  },
  {
    "objectID": "weeks/week-6.html#slides",
    "href": "weeks/week-6.html#slides",
    "title": "Week 6",
    "section": "Slides",
    "text": "Slides\n🖥️ Ethnicity and public goods\n🖥️ Democracy and redistribution"
  },
  {
    "objectID": "weeks/week-6.html#videos",
    "href": "weeks/week-6.html#videos",
    "title": "Week 6",
    "section": "Videos",
    "text": "Videos\n📺 Bar chart video\n📺 Line chart video\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "assignments/coding-assignment-2.html",
    "href": "assignments/coding-assignment-2.html",
    "title": "Coding Assignment 2",
    "section": "",
    "text": "For this assignment, you are going to download some variables using the wbstats and vdemlite packages. Then you are going to wrangle these data and merge the two data sets into one and analyze how they relate to women’s representation in national parliaments. Do your work for each step in the code chunks provided.\nHere is a setup code chunk. You can load all of your packages here or as you go along in the code chunks below using the library() function. However, note that you really only need to load a library once per document.\n\n\n\n\n\n\nWarning\n\n\n\nPlease refrain from installing any packages in your code chunks because this will also install them every time the code chunk is run or your document is rendered. This may not be desirable for you or whoever is looking at or running your code (e.g. me).",
    "crumbs": [
      "Coding Asignments",
      "Assignment 2"
    ]
  },
  {
    "objectID": "LICENSE.html#creative-commons-attribution-sharealike-4.0-international-public-license",
    "href": "LICENSE.html#creative-commons-attribution-sharealike-4.0-international-public-license",
    "title": "Attribution-ShareAlike 4.0 International",
    "section": "Creative Commons Attribution-ShareAlike 4.0 International Public License",
    "text": "Creative Commons Attribution-ShareAlike 4.0 International Public License\nBy exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution-ShareAlike 4.0 International Public License (“Public License”). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.\n\nSection 1 – Definitions.\n\nAdapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.\nAdapter’s License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.\nBY-SA Compatible License means a license listed at creativecommons.org/compatiblelicenses, approved by Creative Commons as essentially the equivalent of this Public License.\nCopyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.\nEffective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.\nExceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.\nLicense Elements means the license attributes listed in the name of a Creative Commons Public License. The License Elements of this Public License are Attribution and ShareAlike.\nLicensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.\nLicensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.\nLicensor means the individual(s) or entity(ies) granting rights under this Public License.\nShare means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.\nSui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.\nYou means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.\n\n\n\nSection 2 – Scope.\n\nLicense grant.\n\nSubject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:\nA. reproduce and Share the Licensed Material, in whole or in part; and\nB. produce, reproduce, and Share Adapted Material.\nExceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.\nTerm. The term of this Public License is specified in Section 6(a).\nMedia and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)(4) never produces Adapted Material.\nDownstream recipients.\nA. Offer from the Licensor – Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.\nB. Additional offer from the Licensor – Adapted Material. Every recipient of Adapted Material from You automatically receives an offer from the Licensor to exercise the Licensed Rights in the Adapted Material under the conditions of the Adapter’s License You apply.\nC. No downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.\nNo endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).\n\nOther rights.\n\nMoral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.\nPatent and trademark rights are not licensed under this Public License.\nTo the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.\n\n\n\n\nSection 3 – License Conditions.\nYour exercise of the Licensed Rights is expressly made subject to the following conditions.\n\nAttribution.\n\nIf You Share the Licensed Material (including in modified form), You must:\nA. retain the following if it is supplied by the Licensor with the Licensed Material:\n\nidentification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);\na copyright notice;\na notice that refers to this Public License;\na notice that refers to the disclaimer of warranties;\na URI or hyperlink to the Licensed Material to the extent reasonably practicable;\n\nB. indicate if You modified the Licensed Material and retain an indication of any previous modifications; and\nC. indicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.\nYou may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.\nIf requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.\n\nShareAlike.\n\nIn addition to the conditions in Section 3(a), if You Share Adapted Material You produce, the following conditions also apply.\n\nThe Adapter’s License You apply must be a Creative Commons license with the same License Elements, this version or later, or a BY-SA Compatible License.\nYou must include the text of, or the URI or hyperlink to, the Adapter’s License You apply. You may satisfy this condition in any reasonable manner based on the medium, means, and context in which You Share Adapted Material.\nYou may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, Adapted Material that restrict exercise of the rights granted under the Adapter’s License You apply.\n\n\n\nSection 4 – Sui Generis Database Rights.\nWhere the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:\n\nfor the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;\nif You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material, including for purposes of Section 3(b); and\nYou must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.\n\n\nSection 5 – Disclaimer of Warranties and Limitation of Liability.\n\nUnless otherwise separately undertaken by the Licensor, to the extent possible, the Licensor offers the Licensed Material as-is and as-available, and makes no representations or warranties of any kind concerning the Licensed Material, whether express, implied, statutory, or other. This includes, without limitation, warranties of title, merchantability, fitness for a particular purpose, non-infringement, absence of latent or other defects, accuracy, or the presence or absence of errors, whether or not known or discoverable. Where disclaimers of warranties are not allowed in full or in part, this disclaimer may not apply to You.\nTo the extent possible, in no event will the Licensor be liable to You on any legal theory (including, without limitation, negligence) or otherwise for any direct, special, indirect, incidental, consequential, punitive, exemplary, or other losses, costs, expenses, or damages arising out of this Public License or use of the Licensed Material, even if the Licensor has been advised of the possibility of such losses, costs, expenses, or damages. Where a limitation of liability is not allowed in full or in part, this limitation may not apply to You.\nThe disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.\n\n\n\nSection 6 – Term and Termination.\n\nThis Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.\nWhere Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:\n\nautomatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or\nupon express reinstatement by the Licensor.\n\nFor the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\nFor the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.\nSections 1, 5, 6, 7, and 8 survive termination of this Public License.\n\n\n\nSection 7 – Other Terms and Conditions.\n\nThe Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.\nAny arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.\n\n\n\nSection 8 – Interpretation.\n\nFor the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.\nTo the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.\nNo term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.\nNothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.\n\n\nCreative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the “Licensor.” The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication. Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark “Creative Commons” or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.\nCreative Commons may be contacted at creativecommons.org."
  },
  {
    "objectID": "course-links.html",
    "href": "course-links.html",
    "title": "Useful links",
    "section": "",
    "text": "Lecture Recordings\n🔗 on Blackboard\n\n\nProf T’s Zoom Office\n🔗 on Zoom\n\n\nOffice Hours Appointments\n🔗 on Calendly",
    "crumbs": [
      "Course information",
      "Useful links"
    ]
  },
  {
    "objectID": "course-description.html",
    "href": "course-description.html",
    "title": "Course Description",
    "section": "",
    "text": "This course provides a comprehensive introduction to data science, blending theoretical foundations with practical applications. Students will begin with data visualization, learning the essential tools and principles for creating informative and impactful visual representations of data. The course then progresses to data wrangling, where students will clean, manipulate, and prepare data for analysis.\nAs the semester unfolds, students will explore web scraping techniques to gather data from online sources, followed by an examination of the ethical considerations surrounding data collection, privacy, and algorithmic bias. The course then delves into statistical modeling, introducing both linear and logistic regression, and other core methods used in predictive analytics.\nThroughout the course, various special topics, such as bootstrapping, randomization tests, or interactive web applications, will be covered, offering students a chance to explore current trends and tools in data science. The curriculum is designed to equip students with a versatile toolkit, enabling them to tackle real-world data challenges and communicate their findings effectively.",
    "crumbs": [
      "Course information",
      "Description"
    ]
  },
  {
    "objectID": "assignments/coding-assignment-1.html",
    "href": "assignments/coding-assignment-1.html",
    "title": "Homework 1",
    "section": "",
    "text": "For this assignment, you are going to evaluate modernization theory as laid out in Seymour Martin Lipset’s classic article entitled “Some Social Requisites of Democracy: Economic Development and Political Legitimacy.” How classic is this article? According to Google Scholar, this piece has been cited more than 11.5 thousand times!\nWe are going to use data from V-Dem and modern data viz tools to explore Lipset’s hypothesis that economic modernization is highly correlated with democracy. We have already done this to some extent by looking at the relationship between wealth and the polyarchy score. But we are going to broaden things out by looking at other measures of democracy contained in the V-Dem dataset. Specifically, you will get to choose between the following four measures:\n\nliberal democracy (libdem)\nparticipatory democracy (partipdem)\ndeliberative democracy (delibdem)\negalitarian democracy (egaldem).\n\nFor measuring modernization we are going to stick with GDP per capita (gdp_pc).\nStart by running this code chunk to import all of the packages you will need for this exercise. Then start working through the code and questions below. Feel free to grab relevant code chunks from the slides or the classwork QMD files that we have used in class so far.\n\nlibrary(tidyverse)\nlibrary(plotly)",
    "crumbs": [
      "Coding Asignments",
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/coding-assignment-1.html#overview",
    "href": "assignments/coding-assignment-1.html#overview",
    "title": "Homework 1",
    "section": "",
    "text": "For this assignment, you are going to evaluate modernization theory as laid out in Seymour Martin Lipset’s classic article entitled “Some Social Requisites of Democracy: Economic Development and Political Legitimacy.” How classic is this article? According to Google Scholar, this piece has been cited more than 11.5 thousand times!\nWe are going to use data from V-Dem and modern data viz tools to explore Lipset’s hypothesis that economic modernization is highly correlated with democracy. We have already done this to some extent by looking at the relationship between wealth and the polyarchy score. But we are going to broaden things out by looking at other measures of democracy contained in the V-Dem dataset. Specifically, you will get to choose between the following four measures:\n\nliberal democracy (libdem)\nparticipatory democracy (partipdem)\ndeliberative democracy (delibdem)\negalitarian democracy (egaldem).\n\nFor measuring modernization we are going to stick with GDP per capita (gdp_pc).\nStart by running this code chunk to import all of the packages you will need for this exercise. Then start working through the code and questions below. Feel free to grab relevant code chunks from the slides or the classwork QMD files that we have used in class so far.\n\nlibrary(tidyverse)\nlibrary(plotly)",
    "crumbs": [
      "Coding Asignments",
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/coding-assignment-1.html#step-1-make-a-line-chart-showing-country-trends-20-pts",
    "href": "assignments/coding-assignment-1.html#step-1-make-a-line-chart-showing-country-trends-20-pts",
    "title": "Homework 1",
    "section": "Step 1: Make a line chart showing country trends (20 pts)",
    "text": "Step 1: Make a line chart showing country trends (20 pts)\na) Read in the data from line_chart.csv using read_csv() in an object called line_chart_dta.\nb) Now use glimpse() to inspect the data. How many rows and columns are in the data frame? Write your answer below the code chunk\nc) Now click on the data frame in the Environment tab or use View() to scroll through the data frame. What countries, years and variables are in the data frame? What are the measures of democracy?\nd) Now choose one of the democracy indicators and visualize it with a line chart using ggplot2. Be sure to specify x =, y = and color = in your aes() call and use geom_line() to create the chart.Add appropriate axis labels, a title and a caption. Now add a colorblind-friendly color map using viridis and a theme.\ne) In a few sentences below, interpret your chart. Describe the levels and trends in democracy scores. Put your answer right below this line in markdown text (DO NOT write your comments in a code chunk!!).",
    "crumbs": [
      "Coding Asignments",
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/coding-assignment-1.html#step-2-make-a-column-chart-comparing-regional-levels-20-pts",
    "href": "assignments/coding-assignment-1.html#step-2-make-a-column-chart-comparing-regional-levels-20-pts",
    "title": "Homework 1",
    "section": "Step 2: Make a column chart comparing regional levels (20 pts)",
    "text": "Step 2: Make a column chart comparing regional levels (20 pts)\na) Read in the data from column_chart.csv using read_csv() in an object called column_chart_dta. You should see average democracy scores for the countries that you made a line chart for in Step 1.\nb) View the data frame. Describe briefly what you see, e.g. number of rows, columns and how the countries rank in terms of one of the democracy scores.\nc) Use ggplot() and geom_col() to visualize one of the democracy measures with a column chart (you can use the same measure as in Step 1 or a different one). Use fct_reorder() to arrange the columns in order of the y-axis values. Make sure to add appropriate axis labels, a title and a caption. Change the fill color and add a theme to spruce it up a bit. Remember that these are averages over the same number of years as the line chart you made in Step 1\nd) Interpret your column chart. Does the evidence in the column chart roughly match what you saw in the line chart above?",
    "crumbs": [
      "Coding Asignments",
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/coding-assignment-1.html#step-3-make-a-scatter-plot-20-pts",
    "href": "assignments/coding-assignment-1.html#step-3-make-a-scatter-plot-20-pts",
    "title": "Homework 1",
    "section": "Step 3: Make a scatter plot (20 pts)",
    "text": "Step 3: Make a scatter plot (20 pts)\na) Load the scatter plot data with read_csv()from scatter_plot.csv, storing the data in an object called scatter_plot_dta. Then glimpse or view the data and describe briefly what you see. Note that the values you see are country averages for the variables over the period 2010 - 2019.\nb) Now build a scatter plot with ggplot2 using these data. Put GDP on the x-axis and one of the measures of democracy on the y-axis and color the points by region. Stretch the x-axis on a log scale and use the scales package to add a prefix and suffix to the x-axis numbers to indicate that they are dollar figures. Add appropriate labels and a viridis color map and add your favorite theme. Note that you will get some warnings about a few missing data points, so try setting warning: false at the top of the code chunk with the hash pipe (#|) operator.\nc) Next add a trend line with geom_smooth() preferably with a linear model (method = “lm”). Note that you will get some warnings about missing data points and a message about the linear model. Try setting warning: false at the top of the code chunk with the hash pipe (#|) operator.",
    "crumbs": [
      "Coding Asignments",
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/coding-assignment-1.html#step-4-additional-tasks-20-pts",
    "href": "assignments/coding-assignment-1.html#step-4-additional-tasks-20-pts",
    "title": "Homework 1",
    "section": "Step 4: Additional Tasks (20 pts)",
    "text": "Step 4: Additional Tasks (20 pts)\na) Facet wrap your scatter plot by region.\nb) Remove the facet_wrap() call and display the relationship for one region and use geom_text() to label your points.\nc) Remove the text labels and make your scatter plot interactive using ggplotly(). Make sure that your tooltip includes the information that you want to display to the user.",
    "crumbs": [
      "Coding Asignments",
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/coding-assignment-1.html#step-5-interpretation-10-pts",
    "href": "assignments/coding-assignment-1.html#step-5-interpretation-10-pts",
    "title": "Homework 1",
    "section": "Step 5: Interpretation (10 pts)",
    "text": "Step 5: Interpretation (10 pts)\nInterpret your results from your visualizations, including the scatter plot, line chart and column chart. Is there an obvious relationship between development and democracy? Do the data generally support Lipset’s theory?",
    "crumbs": [
      "Coding Asignments",
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/coding-assignment-1.html#step-6-rendering-10-pts",
    "href": "assignments/coding-assignment-1.html#step-6-rendering-10-pts",
    "title": "Homework 1",
    "section": "Step 6: Rendering (10 pts)",
    "text": "Step 6: Rendering (10 pts)\nPress the render button to create your HTML document. If you get any errors go back and fix them and try again until the document renders.",
    "crumbs": [
      "Coding Asignments",
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/coding-assignment-1.html#extra-credit-3-pts",
    "href": "assignments/coding-assignment-1.html#extra-credit-3-pts",
    "title": "Homework 1",
    "section": "Extra Credit (3 pts)",
    "text": "Extra Credit (3 pts)\n(a) Use a Quato theme to improve the look of the HTML output.\n(b) Use the paletteer package to a different theme to your scatter plot from Step 4.\n(c) Add annotation to your scatter plot from Step 4 using hline() or vline() to highlight a significant point in your data, like the mean or some other significant value. (Note: you will have to do some research to complete this step–we did not do it in class).",
    "crumbs": [
      "Coding Asignments",
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/coding-assignment-1.html#submission",
    "href": "assignments/coding-assignment-1.html#submission",
    "title": "Homework 1",
    "section": "Submission",
    "text": "Submission\nAfter rendering your document, export your project folder and submit it on Blackboard. You will find the link to the Coding Assignment one submission portal under the Assignments link. There are instructions along with screenshots there to assist you with the process of exporting your project as a ZIP file from Posit Cloud.",
    "crumbs": [
      "Coding Asignments",
      "Assignment 1"
    ]
  },
  {
    "objectID": "weeks/week-7.html",
    "href": "weeks/week-7.html",
    "title": "Week 7",
    "section": "",
    "text": "Important\n\n\n\n“Data Assignment 2: Cleaning & Visualizing Data in Excel” is due on Sunday, March 5"
  },
  {
    "objectID": "weeks/week-7.html#readings",
    "href": "weeks/week-7.html#readings",
    "title": "Week 7",
    "section": "Readings",
    "text": "Readings\nArchibong et. al., “Washington Consensus Reforms and Economic Performance in Sub-Saharan Africa”\nBenería et. al., “Markets, Globalization and Gender”"
  },
  {
    "objectID": "weeks/week-7.html#slides",
    "href": "weeks/week-7.html#slides",
    "title": "Week 7",
    "section": "Slides",
    "text": "Slides\n🖥️ Washington consensus reforms\n🖥️ The gendered legacy of reform"
  },
  {
    "objectID": "weeks/week-7.html#videos",
    "href": "weeks/week-7.html#videos",
    "title": "Week 7",
    "section": "Videos",
    "text": "Videos\n📺 Scatter plot video\n📺 Map video"
  },
  {
    "objectID": "weeks/week-7.html#assignments",
    "href": "weeks/week-7.html#assignments",
    "title": "Week 7",
    "section": "Assignments",
    "text": "Assignments\n🧮 Data Assignment 2: Cleaning & Visualizing Data in Excel\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "weeks/week-4.html",
    "href": "weeks/week-4.html",
    "title": "Week 4",
    "section": "",
    "text": "Important\n\n\n\nExam 1 is due on Sunday, February 12"
  },
  {
    "objectID": "weeks/week-4.html#readings",
    "href": "weeks/week-4.html#readings",
    "title": "Week 4",
    "section": "Readings",
    "text": "Readings\n📖 Hessami and Lopes da Fonseca, “Female Political Representation and Substantive Effects on Policies”"
  },
  {
    "objectID": "weeks/week-4.html#slides",
    "href": "weeks/week-4.html#slides",
    "title": "Week 4",
    "section": "Slides",
    "text": "Slides\n🖥️ Women’s empowerment\n🖥️ Exam 1 review"
  },
  {
    "objectID": "weeks/week-4.html#assignments",
    "href": "weeks/week-4.html#assignments",
    "title": "Week 4",
    "section": "Assignments",
    "text": "Assignments\n📘 Exam 1\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "weeks/week-3.html",
    "href": "weeks/week-3.html",
    "title": "Week 3",
    "section": "",
    "text": "Important\n\n\n\n“Data Assignment 1: Working With Data in Excel” is due on Sunday, February 5"
  },
  {
    "objectID": "weeks/week-3.html#readings",
    "href": "weeks/week-3.html#readings",
    "title": "Week 3",
    "section": "Readings",
    "text": "Readings\n📖Kaufman and Haggard, “Democratic Decline in the United States”\n📖Michael Ross, The Oil Curse, Chapter 3"
  },
  {
    "objectID": "weeks/week-3.html#slides",
    "href": "weeks/week-3.html#slides",
    "title": "Week 3",
    "section": "Slides",
    "text": "Slides\n🖥️ Democratic backsliding\n🖥️ The resource curse"
  },
  {
    "objectID": "weeks/week-3.html#assignments",
    "href": "weeks/week-3.html#assignments",
    "title": "Week 3",
    "section": "Assignments",
    "text": "Assignments\n🧮 Data Assignment 1\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "weeks/week-10.html",
    "href": "weeks/week-10.html",
    "title": "Week 10",
    "section": "",
    "text": "Important\n\n\n\nProject Assignment 1 is due on Sunday, March 26."
  },
  {
    "objectID": "weeks/week-10.html#readings",
    "href": "weeks/week-10.html#readings",
    "title": "Week 10",
    "section": "Readings",
    "text": "Readings\n📖 Gøsta Esping-Andersen, The Three Worlds of Welfare Capitalism\n📖 Alesina et. al., “Why Doesn’t the United States Have a European-Style Welfare State?”"
  },
  {
    "objectID": "weeks/week-10.html#slides",
    "href": "weeks/week-10.html#slides",
    "title": "Week 10",
    "section": "Slides",
    "text": "Slides\n🖥️ Welfare states in the OECD\n🖥️ U.S. exceptionalism\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "weeks/week-10.html#assignments",
    "href": "weeks/week-10.html#assignments",
    "title": "Week 10",
    "section": "Assignments",
    "text": "Assignments\n✍️ Project Assignment 1: Outline and Sources"
  },
  {
    "objectID": "weeks/week-13.html",
    "href": "weeks/week-13.html",
    "title": "Week 13",
    "section": "",
    "text": "📖 John Judis, The Politics of Our Time\n\nFor Tuesday, choose one chapter to read from Part I\nFor Thursday, choose one chapter to read from Part II or Part III"
  },
  {
    "objectID": "weeks/week-13.html#readings",
    "href": "weeks/week-13.html#readings",
    "title": "Week 13",
    "section": "",
    "text": "📖 John Judis, The Politics of Our Time\n\nFor Tuesday, choose one chapter to read from Part I\nFor Thursday, choose one chapter to read from Part II or Part III"
  },
  {
    "objectID": "weeks/week-13.html#slides",
    "href": "weeks/week-13.html#slides",
    "title": "Week 13",
    "section": "Slides",
    "text": "Slides\n🖥️ The populist backlash in the West\n🖥️ The rise of nationalism and socialism\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "weeks/week-9.html",
    "href": "weeks/week-9.html",
    "title": "Week 9",
    "section": "",
    "text": "Important\n\n\n\nExam 2 is due on Sunday, March 19"
  },
  {
    "objectID": "weeks/week-9.html#readings",
    "href": "weeks/week-9.html#readings",
    "title": "Week 9",
    "section": "Readings",
    "text": "Readings\n📖 Mary Cullen, “How to Write and Format a White Paper”"
  },
  {
    "objectID": "weeks/week-9.html#assignments",
    "href": "weeks/week-9.html#assignments",
    "title": "Week 9",
    "section": "Assignments",
    "text": "Assignments\n📘 Exam 2\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "weeks/week-15.html",
    "href": "weeks/week-15.html",
    "title": "Week 15",
    "section": "",
    "text": "Important\n\n\n\nExam 3 is due on Sunday, April 30."
  },
  {
    "objectID": "weeks/week-15.html#slides",
    "href": "weeks/week-15.html#slides",
    "title": "Week 15",
    "section": "Slides",
    "text": "Slides\nExam 3 Review (Factile game)"
  },
  {
    "objectID": "weeks/week-15.html#assignments",
    "href": "weeks/week-15.html#assignments",
    "title": "Week 15",
    "section": "Assignments",
    "text": "Assignments\n📘 Exam 3\n✍️ Project Assignment 3: Tableau Dashboard\n\n\nBack to course schedule ⏎"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Course Schedule",
    "section": "",
    "text": "This page displays an outline of the topics, content, and assignments for the semester. Links, to slides, assignments and course resources will go live as the semester progresses. All assignments must be submitted by 11:59 p.m. on the due date.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek\nDate\nTopic\nReading\nVideo\nSlides\nAssignment\nDue Date\n\n\n\n\n1\nMon, Aug 26\nWelcome to DATS 1001\n📖 📖\n📺 📺\n\n\n\n\n\n\nWed, Aug 28\nMeet ouR tech stack\n📖\n📺\n🖥️\n\n\n\n\n2\nMon, Sep 2\n🇺🇸 No class, Labor Day\n\n\n\n\n\n\n\n\nWed, Sep 4\nR coding basics\n📖\n📺 📺\n🖥️\n\n\n\n\n3\nMon, Sep 9\nGrammar of graphics\n📖 📖\n📺 📺\n🖥️\n\n\n\n\n\nWed, Sep 11\nWhich visualization do I use?\n📖\n📺 📺\n🖥️\n\n\n\n\n4\nMon, Sep 16\nVisualization best practices\n📖\n📺\n🖥️\n\n\n\n\n\nWed, Sep 18\nCoding assignment 1\n📖\n\n\n🧮\nSun, Sep 22\n\n\n5\nMon, Sep 23\nWhat is tidy data?\n📖\n📺\n🖥️\n\n\n\n\n\nWed, Sep 25\nWorking with data\n📖\n📺\n🖥️\n\n\n\n\n6\nMon, Sep 30\nGrammar of data wrangling\n📖\n📺\n🖥️\n\n\n\n\n\nWed, Oct 2\nJoining data frames\n📖\n📺\n🖥️\n\n\n\n\n7\nMon, Oct 7\nTidying data\n📖\n📺\n🖥️\n\n\n\n\n\nWed, Oct 9\nCoding assignment 2\n📖\n\n🖥️\n🧮\nSun, Oct 13\n\n\n8\nMon, Oct 14\nThe language of models\n📖\n📺\n🖥️\n\n\n\n\n\nWed, Oct 16\nLinear regression\n📖\n📺\n🖥️\n✍️\nSun, Oct 20\n\n\n9\nMon, Oct 21\nMultiple regression\n📖\n📺\n🖥️\n\n\n\n\n\nWed, Oct 23\nLogistic regression\n📖\n📺\n🖥️\n\n\n\n\n10\nMon, Oct 28\nPredictive modeling\n📖\n📺\n🖥️\n\n\n\n\n\nWed, Oct 30\nCoding assignment 3\n📖\n\n🖥️\n🧮\nSun, Nov 3\n\n\n11\nMon, Nov 4\nResearch design\n📖\n📺\n🖥️\n\n\n\n\n\nWed, Nov 6\nDistributions\n📖\n📺\n🖥️\n✍️\nSun, Nov 10\n\n\n12\nMon, Nov 11\nSampling and uncertainty\n📖\n📺\n🖥️\n\n\n\n\n\nWed, Nov 13\nHypothesis testing 1\n📖\n📺\n🖥️\n\n\n\n\n13\nMon, Nov 18\nHypothesis testing 2\n📖\n📺\n🖥️\n\n\n\n\n\nWed, Nov 20\nCoding assignment 4\n📖\n📺\n🖥️\n🧮\nSun, Nov 24\n\n\n14\nMon, Nov 25\n🦃 No class–Thanksgiving break\n\n\n\n\n\n\n\n\nWed, Nov 27\n🦃 No class–Thanksgiving break\n\n\n\n\n\n\n\n15\nMon, Dec 2\nLightning talks\n\n\n\n\n\n\n\n\nWed, Dec 4\nLightning talks\n\n\n\n\n\n\n\n16\nMon, Dec 9\nWrap-up: DS careers\n\n\n\n✍️\nDate of scheduled final",
    "crumbs": [
      "Course information",
      "Schedule"
    ]
  },
  {
    "objectID": "slides/week-3.2.html#line-charts",
    "href": "slides/week-3.2.html#line-charts",
    "title": "Which Visualization Should I Use?",
    "section": "Line Charts",
    "text": "Line Charts\n\n\nLine charts are used to show trends over time\nYou especially want to use a line chart when you have multiple cases or categories that you want to compare over time"
  },
  {
    "objectID": "slides/week-3.2.html#huntingtons-three-waves",
    "href": "slides/week-3.2.html#huntingtons-three-waves",
    "title": "Which Visualization Should I Use?",
    "section": "Huntington’s Three Waves",
    "text": "Huntington’s Three Waves"
  },
  {
    "objectID": "slides/week-3.2.html#line-chart-example",
    "href": "slides/week-3.2.html#line-chart-example",
    "title": "Which Visualization Should I Use?",
    "section": "Line Chart Example",
    "text": "Line Chart Example"
  },
  {
    "objectID": "slides/week-3.2.html#section",
    "href": "slides/week-3.2.html#section",
    "title": "Which Visualization Should I Use?",
    "section": "",
    "text": "Here is the code…\n\n\n# in this ggplot() call, we add a third dimension for line color\nggplot(dem_waves_ctrs, aes(x = year, y = polyarchy, color = country)) +\n  geom_line(linewidth = 1) + # our geom is a line with a width of 1\n  labs(\n    x = \"Year\", \n    y = \"Polyarchy Score\", \n    title = 'Democracy in countries representing three different \"waves\"', \n    caption = \"Source: V-Dem Institute\", \n    color = \"Country\" # make title of legend to upper case\n  )"
  },
  {
    "objectID": "slides/week-3.2.html#section-1",
    "href": "slides/week-3.2.html#section-1",
    "title": "Which Visualization Should I Use?",
    "section": "",
    "text": "Use geom_line() to specify a line chart…\n\n\n# in this ggplot() call, we add a third dimension for line color\nggplot(dem_waves_ctrs, aes(x = year, y = polyarchy, color = country)) +\n  geom_line(linewidth = 1) + # our geom is a line with a width of 1\n  labs(\n    x = \"Year\", \n    y = \"Polyarchy Score\", \n    title = 'Democracy in countries representing three different \"waves\"', \n    caption = \"Source: V-Dem Institute\", \n    color = \"Country\" # make title of legend to upper case\n  )"
  },
  {
    "objectID": "slides/week-3.2.html#section-2",
    "href": "slides/week-3.2.html#section-2",
    "title": "Which Visualization Should I Use?",
    "section": "",
    "text": "Add third dimension to the aes() call for line color…\n\n\n# in this ggplot() call, we add a third dimension for line color\nggplot(dem_waves_ctrs, aes(x = year, y = polyarchy, color = country)) +\n  geom_line(linewidth = 1) + # our geom is a line with a width of 1\n  labs(\n    x = \"Year\", \n    y = \"Polyarchy Score\", \n    title = 'Democracy in countries representing three different \"waves\"', \n    caption = \"Source: V-Dem Institute\", \n    color = \"Country\" # make title of legend to upper case\n  )"
  },
  {
    "objectID": "slides/week-3.2.html#section-3",
    "href": "slides/week-3.2.html#section-3",
    "title": "Which Visualization Should I Use?",
    "section": "",
    "text": "Modify the legend title…\n\n\n# in this ggplot() call, we add a third dimension for line color\nggplot(dem_waves_ctrs, aes(x = year, y = polyarchy, color = country)) +\n  geom_line(linewidth = 1) + # our geom is a line with a width of 1\n  labs(\n    x = \"Year\", \n    y = \"Polyarchy Score\", \n    title = 'Democracy in countries representing three different \"waves\"', \n    caption = \"Source: V-Dem Institute\", \n    color = \"Country\" # make title of legend to upper case\n  )"
  },
  {
    "objectID": "slides/week-3.2.html#your-turn",
    "href": "slides/week-3.2.html#your-turn",
    "title": "Which Visualization Should I Use?",
    "section": "Your Turn!",
    "text": "Your Turn!\n\n\nSee table three of this article\nSelect three countries to visualize\nAdjust setup code to filter data on those countries\nVisualize with geom_line()\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "slides/week-3.2.html#scatter-plots",
    "href": "slides/week-3.2.html#scatter-plots",
    "title": "Which Visualization Should I Use?",
    "section": "Scatter Plots",
    "text": "Scatter Plots\n\n\nScatter plots are used to show the relationship between two variables\nFrequently the outcome variable is on the y-axis and the predictor variable is on the x-axis\nIn addition to the points, you can use color, size, and shape to add more information to the plot"
  },
  {
    "objectID": "slides/week-3.2.html#scatter-plot-setup",
    "href": "slides/week-3.2.html#scatter-plot-setup",
    "title": "Which Visualization Should I Use?",
    "section": "Scatter Plot Setup",
    "text": "Scatter Plot Setup\n\n\ndem_summary_ctry &lt;- read_csv(\"data/dem_women.csv\") |&gt;\n  group_by(country, region) |&gt; # group by country, keep region\n  summarize(\n    polyarchy = mean(polyarchy, na.rm = TRUE),\n    gdp_pc = mean(gdp_pc, na.rm = TRUE), \n    flfp = mean(flfp, na.rm = TRUE), \n    women_rep = mean(women_rep, na.rm = TRUE)\n  )"
  },
  {
    "objectID": "slides/week-3.2.html#scatter-plot",
    "href": "slides/week-3.2.html#scatter-plot",
    "title": "Which Visualization Should I Use?",
    "section": "Scatter Plot",
    "text": "Scatter Plot\n\n\nCode\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy, color = region, size = women_rep)) + \n  geom_point() + # use geom_point() for scatter plots\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\",\n    size = \"Women Reps\"\n    )"
  },
  {
    "objectID": "slides/week-3.2.html#scatter-plot-1",
    "href": "slides/week-3.2.html#scatter-plot-1",
    "title": "Which Visualization Should I Use?",
    "section": "Scatter Plot",
    "text": "Scatter Plot\n\nUse geom_point()…\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy, color = region, size = women_rep)) +\n  geom_point() + # use geom_point() for scatter plots\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\",\n    size = \"Women Reps\"\n    )"
  },
  {
    "objectID": "slides/week-3.2.html#scatter-plot-2",
    "href": "slides/week-3.2.html#scatter-plot-2",
    "title": "Which Visualization Should I Use?",
    "section": "Scatter Plot",
    "text": "Scatter Plot\n\nFour dimensions…\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy, color = region, size = women_rep)) + \n  geom_point() + # use geom_point() for scatter plots\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\",\n    size = \"Women Reps\"\n    )"
  },
  {
    "objectID": "slides/week-3.2.html#scatter-plot-3",
    "href": "slides/week-3.2.html#scatter-plot-3",
    "title": "Which Visualization Should I Use?",
    "section": "Scatter Plot",
    "text": "Scatter Plot\n\nStretch axis on log scale and use scales package to adjust labels…\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy, color = region, size = women_rep)) + \n  geom_point() + # use geom_point() for scatter plots\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\",\n    size = \"Women Reps\"\n    )"
  },
  {
    "objectID": "slides/week-3.2.html#scatter-plot-4",
    "href": "slides/week-3.2.html#scatter-plot-4",
    "title": "Which Visualization Should I Use?",
    "section": "Scatter Plot",
    "text": "Scatter Plot\n\nChange legend titles…\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy, color = region, size = women_rep)) + \n  geom_point() + # use geom_point() for scatter plots\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\",\n    size = \"Women Reps\"\n    )"
  },
  {
    "objectID": "slides/week-3.2.html#your-turn-1",
    "href": "slides/week-3.2.html#your-turn-1",
    "title": "Which Visualization Should I Use?",
    "section": "Your Turn!",
    "text": "Your Turn!\n\nThere are four variables in dem_summary_ctry\nPick one related to women’s empowerment\nVisualize it on the y-axis with gdp_pc or polyarchy on the x-axis\nChange labels and legend titles to match your visualization\nInterpret your plot\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "slides/week-3.2.html#add-a-trend-line",
    "href": "slides/week-3.2.html#add-a-trend-line",
    "title": "Which Visualization Should I Use?",
    "section": "Add a Trend Line",
    "text": "Add a Trend Line"
  },
  {
    "objectID": "slides/week-3.2.html#add-a-trend-line-1",
    "href": "slides/week-3.2.html#add-a-trend-line-1",
    "title": "Which Visualization Should I Use?",
    "section": "Add a Trend Line",
    "text": "Add a Trend Line\n\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point(aes(color = region)) + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\"\n    )"
  },
  {
    "objectID": "slides/week-3.2.html#add-a-trend-line-2",
    "href": "slides/week-3.2.html#add-a-trend-line-2",
    "title": "Which Visualization Should I Use?",
    "section": "Add a Trend Line",
    "text": "Add a Trend Line\n\nTaking out size and adding color to geom_point() call…\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point(aes(color = region)) + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\"\n    )"
  },
  {
    "objectID": "slides/week-3.2.html#add-a-trend-line-3",
    "href": "slides/week-3.2.html#add-a-trend-line-3",
    "title": "Which Visualization Should I Use?",
    "section": "Add a Trend Line",
    "text": "Add a Trend Line\n\nChanging legend titles…\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point(aes(color = region)) + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\"\n    )"
  },
  {
    "objectID": "slides/week-3.2.html#your-turn-2",
    "href": "slides/week-3.2.html#your-turn-2",
    "title": "Which Visualization Should I Use?",
    "section": "Your Turn!",
    "text": "Your Turn!\n\n\nAdd a trendline to your plot\nChange the labels accordingly\nTry using method = \"loess\" instead of a “lm”\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "slides/week-3.2.html#which-plot-should-you-use",
    "href": "slides/week-3.2.html#which-plot-should-you-use",
    "title": "Which Visualization Should I Use?",
    "section": "Which Plot Should You Use?",
    "text": "Which Plot Should You Use?\n\n\n\nTrends in stock process over time\nDistribution of income in a country\nComparison of FLFP across MENA countries\nRelationship between poverty and inequality (cross-nationally)"
  },
  {
    "objectID": "slides/week-3.2.html#which-geom-would-you-use",
    "href": "slides/week-3.2.html#which-geom-would-you-use",
    "title": "Which Visualization Should I Use?",
    "section": "Which Geom Would You Use?",
    "text": "Which Geom Would You Use?\n\n\n\nColumn chart\nHistogram\nLine chart\nScatter plot"
  },
  {
    "objectID": "slides/week-3.2.html#other-plots-and-geometries",
    "href": "slides/week-3.2.html#other-plots-and-geometries",
    "title": "Which Visualization Should I Use?",
    "section": "Other Plots and Geometries",
    "text": "Other Plots and Geometries\n\n\n\n\nBox Plot\ngeom_boxplot()\nViolin Plot\ngeom_violin()\nDensity Plot\ngeom_density()\nBar Plot (Categorical)\ngeom_bar()\nHeatmap\ngeom_tile()\n\n\n\nArea Plot\ngeom_area()\nDot Plot\ngeom_dotplot()\nPie Chart\n(usually a bar plot with coord_polar())\nRidgeline Plot\nggridges::geom_density_ridges()\nMap Plot (Choropleth)\ngeom_polygon()"
  },
  {
    "objectID": "slides/week-1.2.html#rstudio",
    "href": "slides/week-1.2.html#rstudio",
    "title": "Meet ouR Tech Stack",
    "section": "RStudio",
    "text": "RStudio\n\nRStudio is an integrated development environment (IDE) for R\nRStudio has four panes\n\nSource-where you write code\nConsole-where you run code\nEnvironment-where you see objects in memory\nFiles/Plots/Packages/Help-where you can navigate files, see plots, install packages, and get help\n\nLet’s open RStudio and have a look around"
  },
  {
    "objectID": "slides/week-1.2.html#quarto",
    "href": "slides/week-1.2.html#quarto",
    "title": "Meet ouR Tech Stack",
    "section": "Quarto",
    "text": "Quarto\n\n\n\nQuarto is an open-source scientific publishing platform\nAllows you to integrate text with code\nKind of like a word processor for data science\nCan use it to create reports, books, websites, etc.\nCan make HTML, PDF, Word, and other formats\nCan use R, Python, Julia, and other languages"
  },
  {
    "objectID": "slides/week-1.2.html#project-oriented-workflow",
    "href": "slides/week-1.2.html#project-oriented-workflow",
    "title": "Meet ouR Tech Stack",
    "section": "Project Oriented Workflow",
    "text": "Project Oriented Workflow\n\n\n\nAlways start a document in a project folder\n\nThat way you don’t have to do setwd\nAlso can share easily with other people\n\nGo to File&gt;New Project\nCreate a Quarto project folder"
  },
  {
    "objectID": "slides/week-1.2.html#visual-editor",
    "href": "slides/week-1.2.html#visual-editor",
    "title": "Meet ouR Tech Stack",
    "section": "Visual Editor",
    "text": "Visual Editor\n\n\nThere are two ways to edit Quarto docs\n\nSource (markdown)\nVisual editor\n\nVisual editor\n\nWYSIWYM\nApproximates appearance\n\nTry both and see what you like"
  },
  {
    "objectID": "slides/week-1.2.html#rendering-documents",
    "href": "slides/week-1.2.html#rendering-documents",
    "title": "Meet ouR Tech Stack",
    "section": "Rendering Documents",
    "text": "Rendering Documents\n\n\nRendering = converting to another format\n\nDefault format is HTML\nCan also render to PDF, Word, etc.\n\nTo render a Quarto document\n\nClick on the Render button\n\nOr keyboard shortcut (Cmd/Ctrl + Shift + K)\n\n\nBy default, Quarto will preview the document in your browser\nBut you can also preview in Viewer pane\n\nClick on the gear icon next to the Render button\nSelect “Preview in Viewer Pane”"
  },
  {
    "objectID": "slides/week-1.2.html#illustration",
    "href": "slides/week-1.2.html#illustration",
    "title": "Meet ouR Tech Stack",
    "section": "Illustration",
    "text": "Illustration"
  },
  {
    "objectID": "slides/week-1.2.html#lets-try-quarto",
    "href": "slides/week-1.2.html#lets-try-quarto",
    "title": "Meet ouR Tech Stack",
    "section": "Let’s Try Quarto!",
    "text": "Let’s Try Quarto!\n\nCreate a new Quarto document\n\nFile&gt;New File&gt;Quarto Document\n\nSave the document in your project folder\nRender it\n\nClick on the Render button\nOr keyboard shortcut (Cmd/Ctr + Shift + K)\n\nTry out the visual editor\n\n\n\n\n−+\n02:00"
  },
  {
    "objectID": "slides/week-1.2.html#document-elements",
    "href": "slides/week-1.2.html#document-elements",
    "title": "Meet ouR Tech Stack",
    "section": "Document Elements",
    "text": "Document Elements\n\n\nYAML Header\nMarkdown content\nCode chunks"
  },
  {
    "objectID": "slides/week-1.2.html#yaml-header",
    "href": "slides/week-1.2.html#yaml-header",
    "title": "Meet ouR Tech Stack",
    "section": "YAML Header",
    "text": "YAML Header\n\n\nMetadata about the document\n\nTitle, author, date, etc.\n\nOutput format\nExecution options"
  },
  {
    "objectID": "slides/week-1.2.html#yaml-header-1",
    "href": "slides/week-1.2.html#yaml-header-1",
    "title": "Meet ouR Tech Stack",
    "section": "YAML Header",
    "text": "YAML Header\n---\ntitle: \"My Documnet\"\nauthor: \"Your Name\"\ndate: today\ndate-format: long\nformat: html\nexecute:\n  echo: false\n  message: false\n---\n\nTry adding some of these options in your document\nThen render it again\nLook in the Quarto guide for other options to try\n\n\n\n\n−+\n02:00"
  },
  {
    "objectID": "slides/week-1.2.html#markdown",
    "href": "slides/week-1.2.html#markdown",
    "title": "Meet ouR Tech Stack",
    "section": "Markdown",
    "text": "Markdown\n\n\n\nMarkdown is a simple markup language\nYou can use it to format text\nYou can also use it to embed images, tables, etc.\nAnd to embed code chunks…"
  },
  {
    "objectID": "slides/week-1.2.html#markdown-syntax---basic-authoring",
    "href": "slides/week-1.2.html#markdown-syntax---basic-authoring",
    "title": "Meet ouR Tech Stack",
    "section": "Markdown Syntax - Basic Authoring",
    "text": "Markdown Syntax - Basic Authoring\n\n\nFor basic text you can just start typing\nFor line breaks use two spaces and return (enter)\nHeadings (use #, ##, ###, etc.)\n\n# is the largest heading (level 1)\n## is the next largest (level 2)\n### is the next largest (level 3)\nEtc."
  },
  {
    "objectID": "slides/week-1.2.html#markdown-syntax---styling",
    "href": "slides/week-1.2.html#markdown-syntax---styling",
    "title": "Meet ouR Tech Stack",
    "section": "Markdown Syntax - Styling",
    "text": "Markdown Syntax - Styling\n\n\nEmphasis = Italics (use *)\n\nBold (use **)\n\nLists\n\nBullet points (use -)\nNumbered lists (use 1.)"
  },
  {
    "objectID": "slides/week-1.2.html#markdown-syntax---content",
    "href": "slides/week-1.2.html#markdown-syntax---content",
    "title": "Meet ouR Tech Stack",
    "section": "Markdown Syntax - Content",
    "text": "Markdown Syntax - Content\n\n\nLinks (use [text](url))\nImages (use ![](file path or url))\nCode chunks\n\nR code chunks (```{r}…```)\nPython code chunks (```{python}…```)\nEtc."
  },
  {
    "objectID": "slides/week-1.2.html#try-some-markdown",
    "href": "slides/week-1.2.html#try-some-markdown",
    "title": "Meet ouR Tech Stack",
    "section": "Try Some Markdown",
    "text": "Try Some Markdown\n\n\nCheck out the Markdown Cheatsheet\nTry editing the markdown in your document\nTry some of the other things you find in the guide\nThen render it again\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "slides/week-1.2.html#code-chunks",
    "href": "slides/week-1.2.html#code-chunks",
    "title": "Meet ouR Tech Stack",
    "section": "Code Chunks",
    "text": "Code Chunks\n\n\nIncorporate R code (could also be Python, Julia, etc.)\nAdd a code chunk with the ‘+’ button\nRun the code chunk by clicking the play button\n\nOr use keyboard shortcut (Cmd/Ctrl + Shift + Enter)\n\nRun all chunks up that point by clicking the down arrow\n\nOr use keyboard shortcut (Cmd/Ctrl + Shift + K)\n\nRun a single line with shortcut (Cmd/Ctrl + Enter)"
  },
  {
    "objectID": "slides/week-1.2.html#code-chunk-options",
    "href": "slides/week-1.2.html#code-chunk-options",
    "title": "Meet ouR Tech Stack",
    "section": "Code Chunk Options",
    "text": "Code Chunk Options\n\n\nUse #| (hash-pipe) to add options\nlabel is a unique identifier for the chunk\nOptions to control what happens when you render\n\necho controls whether the code is shown\neval controls whether the code is run\nmessage controls whether messages are shown\nwarning controls whether warnings are shown"
  },
  {
    "objectID": "slides/week-1.2.html#code-chunk-options-1",
    "href": "slides/week-1.2.html#code-chunk-options-1",
    "title": "Meet ouR Tech Stack",
    "section": "Code Chunk Options",
    "text": "Code Chunk Options\n\n\nCode-chunk options override global options set in YAML header\nSee documentation for more options\nYou can also use write chunk options inline with chunk name,\n\ne.g., {r, echo = FALSE} ..."
  },
  {
    "objectID": "slides/week-1.2.html#illustration-1",
    "href": "slides/week-1.2.html#illustration-1",
    "title": "Meet ouR Tech Stack",
    "section": "Illustration",
    "text": "Illustration"
  },
  {
    "objectID": "slides/week-1.2.html#try-it-yourself",
    "href": "slides/week-1.2.html#try-it-yourself",
    "title": "Meet ouR Tech Stack",
    "section": "Try it Yourself!",
    "text": "Try it Yourself!\n\nCreate a code chunk\nCopy this code chunk into your document\n\n\nlibrary(ggplot2)\n\nggplot(mpg, aes(displ, hwy, colour = class)) + \n  geom_point()\n\n\nTry adding some chunk options in your document\nThen render it again\n\n\n\n\n−+\n02:00"
  },
  {
    "objectID": "slides/week-2.1.html#what-can-r-do",
    "href": "slides/week-2.1.html#what-can-r-do",
    "title": "R Coding Basics",
    "section": "What Can R Do?",
    "text": "What Can R Do?\n\n\n\nR is a powerful language for data analysis and visualization\nIt is also a general-purpose programming language\nDoes everything from web development to machine learning\nIt is open-source and has a large community of users and developers"
  },
  {
    "objectID": "slides/week-2.1.html#r-as-a-calculator",
    "href": "slides/week-2.1.html#r-as-a-calculator",
    "title": "R Coding Basics",
    "section": "R as a Calculator",
    "text": "R as a Calculator\n\n\nR can be used as a simple calculator\nYou can perform arithmetic operations on numbers\n\n\n# Addi a number and store it to a value\nsum_of_2plus2 &lt;- 2 + 2\n\n\nsum_of_2plus2\n\n[1] 4"
  },
  {
    "objectID": "slides/week-2.1.html#some-common-arithmetic-operators",
    "href": "slides/week-2.1.html#some-common-arithmetic-operators",
    "title": "R Coding Basics",
    "section": "Some Common Arithmetic Operators",
    "text": "Some Common Arithmetic Operators\n\n\n+ addition\n- subtraction\n* multiplication\n/ division\n^ exponentiation (also **)"
  },
  {
    "objectID": "slides/week-2.1.html#functions",
    "href": "slides/week-2.1.html#functions",
    "title": "R Coding Basics",
    "section": "Functions",
    "text": "Functions\n\nA function is a set of instructions that produces some output\nIn R, you can use built-in functions to perform specific tasks\nFor example, you can use the mean() function to calculate the average of a set of numbers\nTo do this you have to use the combine function c() to create a vector of numbers"
  },
  {
    "objectID": "slides/week-2.1.html#section",
    "href": "slides/week-2.1.html#section",
    "title": "R Coding Basics",
    "section": "",
    "text": "Create a vector of numbers and take the mean…\n\n\n# Create a vector of numbers\nnumbers &lt;- c(1, 2, 3, 4, 5)\n\n# Calculate the mean of the numbers\nmean(numbers)\n\n[1] 3"
  },
  {
    "objectID": "slides/week-2.1.html#some-common-base-r-functions",
    "href": "slides/week-2.1.html#some-common-base-r-functions",
    "title": "R Coding Basics",
    "section": "Some Common Base R Functions",
    "text": "Some Common Base R Functions\n\nmean() calculates the mean of a set of numbers\nmedian() calculates the median of a set of numbers\nsd() calculates the standard deviation of a set of numbers\nsum() calculates the sum of a set of numbers\nlength() calculates the length of a vector\nmax() and min() calculate the maximum and minimum values of a vector\nround() rounds a number to a specified number of decimal places\nsqrt() calculates the square root of a number\nlog() calculates the natural logarithm of a number\nexp() calculates the exponential of a number\nabs() calculates the absolute value of a number"
  },
  {
    "objectID": "slides/week-2.1.html#from-functions-to-packages",
    "href": "slides/week-2.1.html#from-functions-to-packages",
    "title": "R Coding Basics",
    "section": "From Functions to Packages",
    "text": "From Functions to Packages\n\n\n\nA function is a set of instructions\n\nread_csv() is a function\nggplot() is a function\n\nA package is a collection of functions\n\nreadr is a package that contains the read_csv() function\nggplot2 is a package that contains the ggplot() function\n\nUse install.packages() to install packages\nUse library() to load packages\nYou can install packages from CRAN"
  },
  {
    "objectID": "slides/week-2.1.html#the-tidyverse",
    "href": "slides/week-2.1.html#the-tidyverse",
    "title": "R Coding Basics",
    "section": "The Tidyverse",
    "text": "The Tidyverse\n\n\nThe Tidyverse is a collection of data science packages\nIt is also considered a dialect of R\nIn this class, we will be using many Tidyverse packages\n\nggplot2 for data visualization\nreadr for reading data\ndplyr for data manipulation\ntidyr for data tidying\nEtc.\n\nAt first we will load the packages independently, e.g. library(ggplot2)\nLater we will load them all at once with library(tidyverse)"
  },
  {
    "objectID": "slides/week-2.1.html#what-is-an-object",
    "href": "slides/week-2.1.html#what-is-an-object",
    "title": "R Coding Basics",
    "section": "What is an Object?",
    "text": "What is an Object?\n\n\nAn object in R is a data structure used to store data\nIt can vary from simple scalar types to more complex data structures like vectors, lists, or data frames\nObjects hold not only data but also information about the type of data and the operations that can be performed on them\nEvery entity in R is considered an object, making R a language based around the manipulation of objects"
  },
  {
    "objectID": "slides/week-2.1.html#how-to-store-data",
    "href": "slides/week-2.1.html#how-to-store-data",
    "title": "R Coding Basics",
    "section": "How to Store Data",
    "text": "How to Store Data\n\nIn R, you can store data in objects using the assignment operator &lt;-\nThe object name is on the left of &lt;-, and the data or value you wish to assign to the object is on the right\nThen you can print the object to the console using the object name\n\n\n# Store the value 42 in the object my_number\nmy_number &lt;- 42\n\n# Print the value of my_number\nmy_number \n\n[1] 42"
  },
  {
    "objectID": "slides/week-2.1.html#when-to-store-data-in-objects",
    "href": "slides/week-2.1.html#when-to-store-data-in-objects",
    "title": "R Coding Basics",
    "section": "When to Store Data in Objects",
    "text": "When to Store Data in Objects\n\n\nNote that you don’t always have to store data in objects\nYou should mostly store data in objects when you want to use the data later\nIf you only need to use the data once, you can just use the data directly\n\n\n# Add two numbers without storing them in an object\n2 + 2\n\n[1] 4"
  },
  {
    "objectID": "slides/week-2.1.html#your-turn",
    "href": "slides/week-2.1.html#your-turn",
    "title": "R Coding Basics",
    "section": "Your Turn!",
    "text": "Your Turn!\n\n\nGo to the Week 2 module on Posit Cloud\nWork through the first set of challenges there\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/week-2.1.html#lets-get-going-.-.-.",
    "href": "slides/week-2.1.html#lets-get-going-.-.-.",
    "title": "R Coding Basics",
    "section": "Let’s get going . . .",
    "text": "Let’s get going . . .\n\nLet’s open up the Getting Started module on Posit Cloud…\nAnd work through the examples there."
  },
  {
    "objectID": "slides/week-2.1.html#example-make-a-map",
    "href": "slides/week-2.1.html#example-make-a-map",
    "title": "R Coding Basics",
    "section": "Example: Make a map!",
    "text": "Example: Make a map!"
  },
  {
    "objectID": "slides/week-2.1.html#example-make-a-map-1",
    "href": "slides/week-2.1.html#example-make-a-map-1",
    "title": "R Coding Basics",
    "section": "Example: Make a map!",
    "text": "Example: Make a map!\n\n\nlibrary(leaflet)\nleaflet() %&gt;% \n  addTiles() %&gt;%   # Add default OpenStreetMap map tiles\n  addMarkers(lat = 38.90243843683386, lng =  -77.0443814477152, \n             label = \"Elliott School of International Affairs\")\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/week-2.1.html#example-plotting-democracy-over-time",
    "href": "slides/week-2.1.html#example-plotting-democracy-over-time",
    "title": "R Coding Basics",
    "section": "Example: Plotting Democracy Over Time",
    "text": "Example: Plotting Democracy Over Time"
  },
  {
    "objectID": "slides/week-2.1.html#example-plotting-democracy-over-time-1",
    "href": "slides/week-2.1.html#example-plotting-democracy-over-time-1",
    "title": "R Coding Basics",
    "section": "Example: Plotting Democracy Over Time",
    "text": "Example: Plotting Democracy Over Time\n\n# Load the packages\nlibrary(vdemlite)\nlibrary(ggplot2)\n\n# Use vdemlite to extract democracy scores for France and INdia\ndem_data &lt;- fetchdem(indicators = \"v2x_polyarchy\",\n                     countries = c(\"FRA\", \"IND\"))\n\n# And now we can plot the data\nggplot(dem_data, aes(y = v2x_polyarchy, x = year, color=country_name)) +\n  geom_line() +\n  theme_minimal() +\n  xlab(\"Year\") +\n  ylab(\"Electoral Democracy Index\") +\n  ggtitle(\"Electoral Democracy, 1970-2022\") +\n  geom_hline(yintercept = .5, linetype = \"dashed\", color = \"grey\") +\n   scale_color_manual(name=\"Country\", values=c(\"#E69F00\", \"#56B4E9\")) +\n  ylim(0, 1)\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/week-2.1.html#example-un-voting-trends",
    "href": "slides/week-2.1.html#example-un-voting-trends",
    "title": "R Coding Basics",
    "section": "Example: UN Voting Trends",
    "text": "Example: UN Voting Trends"
  },
  {
    "objectID": "slides/week-2.1.html#example-un-voting-trends-1",
    "href": "slides/week-2.1.html#example-un-voting-trends-1",
    "title": "R Coding Basics",
    "section": "Example: UN Voting Trends",
    "text": "Example: UN Voting Trends\n\nlibrary(tidyverse)\nlibrary(unvotes)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(pacman)\n\nunvotes &lt;- un_votes %&gt;%\n  inner_join(un_roll_calls, by = \"rcid\") %&gt;%\n  inner_join(un_roll_call_issues, by = \"rcid\")\n\nunvotes %&gt;%\n  # then filter out to only include the countries we want\n  filter(country %in% c(\"South Africa\", \"United States\", \"France\")) %&gt;%\n  # then make sure R understands the the year variable is a data\n  mutate(year = year(date)) %&gt;%\n  # Then group the data by country and year\n  group_by(country, year, issue) %&gt;%\n  # then take the average Yes votes for each country_year\n  summarize(percent_yes = mean(vote == \"yes\")) %&gt;%\n  # then make a nice plot\n  ggplot(mapping = aes(x = year, y = percent_yes, color = country)) +\n  geom_point(alpha = 0.4) +\n  geom_smooth(method = \"loess\", se = FALSE) +\n  facet_wrap(~issue) +\n  scale_y_continuous(labels = percent) +\n  scale_color_manual( values=c(\"#E69F00\", \"#56B4E9\", \"#009E73\")) +\n  labs(\n    title = \"Percentage of 'Yes' votes in the UN General Assembly\",\n    subtitle = \"1946 to 2019\",\n    y = \"% Yes\",\n    x = \"Year\",\n    color = \"Country\"\n  )\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This site was built with Quarto and is based on a template provided by Mine Çetinkaya-Rundel under a Creative Commons Attribution-NonCommercial 4.0 Iicense."
  },
  {
    "objectID": "project/project-assignment-3.html",
    "href": "project/project-assignment-3.html",
    "title": "Project Assignment 3",
    "section": "",
    "text": "Details coming soon…",
    "crumbs": [
      "Project",
      "Assignment 3"
    ]
  },
  {
    "objectID": "project/project-assignment-1.html",
    "href": "project/project-assignment-1.html",
    "title": "Project Assignment 1",
    "section": "",
    "text": "Details coming soon…",
    "crumbs": [
      "Project",
      "Assignment 1"
    ]
  },
  {
    "objectID": "course-support.html",
    "href": "course-support.html",
    "title": "Support",
    "section": "",
    "text": "Writing Center GW’s Writing Center cultivates confident writers in the University community by facilitating collaborative, critical, and inclusive conversations at all stages of the writing process. Working alongside peer mentors, writers develop strategies to write independently in academic and public settings. Appointments can be booked online here.\nAcademic Commons Academic Commons provides tutoring and other academic support resources to students in many courses. Students can schedule virtual one-on-one appointments or attend virtual drop-in sessions. Students may schedule an appointment, review the tutoring schedule, access other academic support resources, or obtain assistance here.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#academic-support",
    "href": "course-support.html#academic-support",
    "title": "Support",
    "section": "",
    "text": "Writing Center GW’s Writing Center cultivates confident writers in the University community by facilitating collaborative, critical, and inclusive conversations at all stages of the writing process. Working alongside peer mentors, writers develop strategies to write independently in academic and public settings. Appointments can be booked online here.\nAcademic Commons Academic Commons provides tutoring and other academic support resources to students in many courses. Students can schedule virtual one-on-one appointments or attend virtual drop-in sessions. Students may schedule an appointment, review the tutoring schedule, access other academic support resources, or obtain assistance here.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#support-for-students-outside-the-classroom",
    "href": "course-support.html#support-for-students-outside-the-classroom",
    "title": "Support",
    "section": "Support for students outside the classroom",
    "text": "Support for students outside the classroom\nDisability Support Services (DSS) 202-994-8250 Any student who may need an accommodation based on the potential impact of a disability should contact Disability Support Services to establish eligibility and to coordinate reasonable accommodations.\nCounseling and Psychological Services 202-994-5300 GW’s Colonial Health Center offers counseling and psychological services, supporting mental health and personal development by collaborating directly with students to overcome challenges and difficulties that may interfere with academic, emotional, and personal success.\nGW aims to create a community that cares for each other.The CARE Team fosters this goal by creating a pathway through which students who may need additional support can be identified and referred to the most appropriate services. Through the CARE Team, students are given the support they need to persist and succeed at GW and beyond.\nSafety and Security:\n\nIn an emergency: call GWPD 202-994-6111 or 911.\nFor situation-specific actions: review the Emergency Response Handbook\nStay informed: safety.gwu.edu/stay-informed",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "slides/week-5.1.html#what-is-a-data-frame",
    "href": "slides/week-5.1.html#what-is-a-data-frame",
    "title": "Understanding Data",
    "section": "What is a Data Frame?",
    "text": "What is a Data Frame?\n\n\nSpecial kind of tabular data used in data science\nEach column can be a different data type\nData frames are the most common data structure in R"
  },
  {
    "objectID": "slides/week-5.1.html#what-is-a-tibble",
    "href": "slides/week-5.1.html#what-is-a-tibble",
    "title": "Understanding Data",
    "section": "What is a Tibble?",
    "text": "What is a Tibble?\n\n\nModern data frames in R\nOffers better printing and subsetting behaviors\nDoes not convert character vectors to factors by default\nDisplays only the first 10 rows and as many columns as fit on screen\nColumn names are preserved exactly, even if they contain spaces"
  },
  {
    "objectID": "slides/week-5.1.html#creating-a-tibble",
    "href": "slides/week-5.1.html#creating-a-tibble",
    "title": "Understanding Data",
    "section": "Creating a Tibble",
    "text": "Creating a Tibble\n\n\nWhen you read data into R with readr you automatically get a tibble\nYou can create a tibble using tibble() from the tibble package:\n\n\n  library(tibble)\n  \n  # Create a tibble\n  my_tibble &lt;- tibble(\n    name = c(\"Alice\", \"Bob\", \"Charlie\"),\n    age = c(25, 30, 35),\n    height = c(160, 170, 180),\n    is_student = c(TRUE, FALSE, FALSE)\n  )\n  \nmy_tibble  \n\n# A tibble: 3 × 4\n  name      age height is_student\n  &lt;chr&gt;   &lt;dbl&gt;  &lt;dbl&gt; &lt;lgl&gt;     \n1 Alice      25    160 TRUE      \n2 Bob        30    170 FALSE     \n3 Charlie    35    180 FALSE"
  },
  {
    "objectID": "slides/week-5.1.html#common-data-types",
    "href": "slides/week-5.1.html#common-data-types",
    "title": "Understanding Data",
    "section": "Common Data Types",
    "text": "Common Data Types\n\n&lt;chr&gt; (Character): Stores text strings\n\nExample: \"hello\", \"R programming\"\n\n&lt;dbl&gt; (Double): Stores decimal (floating-point) numbers\n\nExample: 3.14, -1.0\n\n&lt;int&gt; (Integer): Stores whole numbers (integers)\n\nExample: 1, -100, 42\n\n&lt;lgl&gt; (Logical): Stores boolean values (TRUE, FALSE, NA)\n\nExample: TRUE, FALSE, NA\n\n&lt;fct&gt; (Factor): Stores categorical variables with fixed levels\n\nExample: factor(c(\"low\", \"medium\", \"high\"))\n\n&lt;date&gt; (Date): Stores dates in the “YYYY-MM-DD” format\n\nExample: as.Date(\"2024-09-05\")"
  },
  {
    "objectID": "slides/week-5.1.html#other-data-types",
    "href": "slides/week-5.1.html#other-data-types",
    "title": "Understanding Data",
    "section": "Other Data Types",
    "text": "Other Data Types\n\n\n&lt;dttm&gt; (Date-Time or POSIXct): Stores date-time objects (both date and time).\n\nExample: as.POSIXct(\"2024-09-05 14:30:00\")\n\n&lt;time&gt; (Time): Specifically stores time-of-day values (rarely seen without a date)\n\nExample: \"14:30:00\"\n\n&lt;list&gt; (List): Stores lists, where each entry can be a complex object.\n\nExample: list(c(1, 2, 3), c(\"a\", \"b\", \"c\"))"
  },
  {
    "objectID": "slides/week-5.1.html#dates-and-times-with-lubridate",
    "href": "slides/week-5.1.html#dates-and-times-with-lubridate",
    "title": "Understanding Data",
    "section": "Dates and Times with lubridate",
    "text": "Dates and Times with lubridate\n\nlubridate is an R package that makes it easier to work with dates and times\nUse convenient functions to store dates in different formats\n\n\nlibrary(lubridate)\n  \n# Store a date\nmy_date &lt;- ymd(\"2024-09-05\")\nmy_date2 &lt;- mdy(\"09-05-2024\")\nmy_date3 &lt;- dmy(\"05-09-2024\")\n  \n# Print in long form\nformat(my_date, \"%B %d, %Y\")\n\n[1] \"September 05, 2024\""
  },
  {
    "objectID": "slides/week-5.1.html#your-turn",
    "href": "slides/week-5.1.html#your-turn",
    "title": "Understanding Data",
    "section": "Your Turn",
    "text": "Your Turn\n\n\nCreate your own tibble\nMake it on a topic you find interesting\nTry to include at least three data types\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/week-5.2.html#how-do-we-get-tidyclean-data",
    "href": "slides/week-5.2.html#how-do-we-get-tidyclean-data",
    "title": "Working With Data",
    "section": "How Do We Get Tidy/Clean Data?",
    "text": "How Do We Get Tidy/Clean Data?\n\n\nGet lucky and find it (like on kaggle)\nWrangle it ourselves\nUse a package where it has been wrangled for us\nDownload via an API"
  },
  {
    "objectID": "slides/week-5.2.html#this-lesson",
    "href": "slides/week-5.2.html#this-lesson",
    "title": "Working With Data",
    "section": "This Lesson",
    "text": "This Lesson\n\nPractice with World Bank and V-Dem data\nWorld Bank data through wbstats\n\nThere is another package called WDI\nBoth packages for accessing data through WB API\n\nVarieties of Democracy (V-Dem) through vdemlite\n\nThere is also a package called vdemdata\nvdemlite offers more functionality, works better in the cloud"
  },
  {
    "objectID": "slides/week-5.2.html#filter-select-mutate",
    "href": "slides/week-5.2.html#filter-select-mutate",
    "title": "Working With Data",
    "section": "filter(), select(), mutate()",
    "text": "filter(), select(), mutate()\n\nAlong the way we will practice some important dplyr verbs:\n\n\nfilter() is used to select observations based on their values\nselect() is used to select variables\nmutate() is used to create new variables or modifying existing ones\n\n\nAs well as some helpful functions from the janitor package."
  },
  {
    "objectID": "slides/week-5.2.html#what-is-a-data-frame",
    "href": "slides/week-5.2.html#what-is-a-data-frame",
    "title": "Working With Data",
    "section": "What is a Data Frame?",
    "text": "What is a Data Frame?\n\n\nSpecial kind of tabular data used in data science\nEach column can be a different data type\nData frames are the most common data structure in R"
  },
  {
    "objectID": "slides/week-5.2.html#what-is-a-tibble",
    "href": "slides/week-5.2.html#what-is-a-tibble",
    "title": "Working With Data",
    "section": "What is a Tibble?",
    "text": "What is a Tibble?\n\n\nModern data frames in R\nOffers better printing and subsetting behaviors\nDoes not convert character vectors to factors by default\nDisplays only the first 10 rows and as many columns as fit on screen\nColumn names are preserved exactly, even if they contain spaces"
  },
  {
    "objectID": "slides/week-5.2.html#creating-a-tibble",
    "href": "slides/week-5.2.html#creating-a-tibble",
    "title": "Working With Data",
    "section": "Creating a Tibble",
    "text": "Creating a Tibble\n\n\nWhen you read data into R with readr you automatically get a tibble\nYou can create a tibble using tibble() from the tibble package:\n\n\n  library(tibble)\n  \n  # Create a tibble\n  my_tibble &lt;- tibble(\n    name = c(\"Alice\", \"Bob\", \"Charlie\"),\n    age = c(25, 30, 35),\n    height = c(160, 170, 180),\n    is_student = c(TRUE, FALSE, FALSE)\n  )\n  \nmy_tibble  \n\n# A tibble: 3 × 4\n  name      age height is_student\n  &lt;chr&gt;   &lt;dbl&gt;  &lt;dbl&gt; &lt;lgl&gt;     \n1 Alice      25    160 TRUE      \n2 Bob        30    170 FALSE     \n3 Charlie    35    180 FALSE"
  },
  {
    "objectID": "slides/week-5.2.html#common-data-types",
    "href": "slides/week-5.2.html#common-data-types",
    "title": "Working With Data",
    "section": "Common Data Types",
    "text": "Common Data Types\n\n&lt;chr&gt; (Character): Stores text strings\n\nExample: \"hello\", \"R programming\"\n\n&lt;dbl&gt; (Double): Stores decimal (floating-point) numbers\n\nExample: 3.14, -1.0\n\n&lt;int&gt; (Integer): Stores whole numbers (integers)\n\nExample: 1, -100, 42\n\n&lt;lgl&gt; (Logical): Stores boolean values (TRUE, FALSE, NA)\n\nExample: TRUE, FALSE, NA\n\n&lt;fct&gt; (Factor): Stores categorical variables with fixed levels\n\nExample: factor(c(\"low\", \"medium\", \"high\"))\n\n&lt;date&gt; (Date): Stores dates in the “YYYY-MM-DD” format\n\nExample: as.Date(\"2024-09-05\")"
  },
  {
    "objectID": "slides/week-5.2.html#other-data-types",
    "href": "slides/week-5.2.html#other-data-types",
    "title": "Working With Data",
    "section": "Other Data Types",
    "text": "Other Data Types\n\n\n&lt;dttm&gt; (Date-Time or POSIXct): Stores date-time objects (both date and time).\n\nExample: as.POSIXct(\"2024-09-05 14:30:00\")\n\n&lt;time&gt; (Time): Specifically stores time-of-day values (rarely seen without a date)\n\nExample: \"14:30:00\"\n\n&lt;list&gt; (List): Stores lists, where each entry can be a complex object.\n\nExample: list(c(1, 2, 3), c(\"a\", \"b\", \"c\"))"
  },
  {
    "objectID": "slides/week-5.2.html#dates-and-times-with-lubridate",
    "href": "slides/week-5.2.html#dates-and-times-with-lubridate",
    "title": "Working With Data",
    "section": "Dates and Times with lubridate",
    "text": "Dates and Times with lubridate\n\nlubridate is an R package that makes it easier to work with dates and times\nUse convenient functions to store dates in different formats\n\n\nlibrary(lubridate)\n  \n# Store a date\nmy_date &lt;- ymd(\"2024-09-05\")\nmy_date2 &lt;- mdy(\"09-05-2024\")\nmy_date3 &lt;- dmy(\"05-09-2024\")\n  \n# Print in long form\nformat(my_date, \"%B %d, %Y\")\n\n[1] \"September 05, 2024\""
  },
  {
    "objectID": "slides/week-5.2.html#your-turn",
    "href": "slides/week-5.2.html#your-turn",
    "title": "Working With Data",
    "section": "Your Turn",
    "text": "Your Turn\n\n\nCreate your own tibble\nMake it on a topic you find interesting\nTry to include at least three data types\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/week-5.2.html#apis-1",
    "href": "slides/week-5.2.html#apis-1",
    "title": "Working With Data",
    "section": "APIs",
    "text": "APIs\n\n\nAPI stands for “Application Programming Interface”\nWay for two computers to talk to each other\nIn our case, we will use APIs to download social science data"
  },
  {
    "objectID": "slides/week-5.2.html#apis-in-r",
    "href": "slides/week-5.2.html#apis-in-r",
    "title": "Working With Data",
    "section": "APIs in R",
    "text": "APIs in R\n\n\nAPIs are accessed through packages in R\nSometimes there can be more than one package for an API\nMuch easier than reading in data from messy flat file!\nWe will use a few API packages in this course\n\nWorld Bank data through wbstats (or WDI)\nfredr for Federal Reserve Economic Data\ntidycensus for US Census data\n\nBut there are many APIs out there (please explore!)"
  },
  {
    "objectID": "slides/week-5.2.html#searching-for-wb-indicators",
    "href": "slides/week-5.2.html#searching-for-wb-indicators",
    "title": "Working With Data",
    "section": "Searching for WB Indicators",
    "text": "Searching for WB Indicators\n\n\nflfp_indicators &lt;- wb_search(\"female labor force\") # store the list of indicators\n\nprint(flfp_indicators, n=26) # view the indicators"
  },
  {
    "objectID": "slides/week-5.2.html#wbstats-example",
    "href": "slides/week-5.2.html#wbstats-example",
    "title": "Working With Data",
    "section": "wbstats Example",
    "text": "wbstats Example\n\n\n# Load packages\nlibrary(wbstats) # for downloading WB data\nlibrary(dplyr) # for selecting, renaming and mutating\nlibrary(janitor) # for rounding\n\n# Store the list of indicators in an object\nindicators &lt;- c(\"flfp\" = \"SL.TLF.CACT.FE.ZS\", \"women_rep\" = \"SG.GEN.PARL.ZS\") \n\n# Download the data  \nwomen_emp &lt;- wb_data(indicators, mrv = 50) |&gt; # download data for last 50 yrs\n  select(!iso2c) |&gt; # drop the iso2c code which we won't be using\n  rename(year = date) |&gt; # rename date to year \n  mutate(\n    flfp = round_to_fraction(flfp, denominator = 100), # round to nearest 100th\n    women_rep = round_to_fraction(women_rep, denominator = 100) \n  )\n\n# View the data\nglimpse(women_emp)"
  },
  {
    "objectID": "slides/week-5.2.html#your-turn-1",
    "href": "slides/week-5.2.html#your-turn-1",
    "title": "Working With Data",
    "section": "Your Turn!",
    "text": "Your Turn!\n\n\nSearch for a WB indicator\nDownload the data\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/week-5.2.html#the-v-dem-dataset",
    "href": "slides/week-5.2.html#the-v-dem-dataset",
    "title": "Working With Data",
    "section": "The V-Dem Dataset",
    "text": "The V-Dem Dataset\n\n\nV-Dem stands for Varieties of Democracy\nIt is a dataset that measures democracy around the world\nBased on expert assessments of the quality of democracy in each country\nTwo packages we will explore: vdemlite and vdemdata"
  },
  {
    "objectID": "slides/week-5.2.html#vdemlite",
    "href": "slides/week-5.2.html#vdemlite",
    "title": "Working With Data",
    "section": "vdemlite",
    "text": "vdemlite\n\n\nCovers a few hundred commonly used indicators and indices from 1970 onward\nCovers everything in this document\nAs opposed to 4000+ indicators from the 18th century onward\nAdds some functionality for working with the data\nEasier to work with in the cloud and apps"
  },
  {
    "objectID": "slides/week-5.2.html#vdemlite-fuctions",
    "href": "slides/week-5.2.html#vdemlite-fuctions",
    "title": "Working With Data",
    "section": "vdemlite fuctions",
    "text": "vdemlite fuctions\n\n\nfetchdem() to download the data\nsummarizedem() provides searchable table of indicators with summary stats\nsearchdem() to search for specific indicators or all indicators used to construct an index\nSee the vdemlite documentation for more details"
  },
  {
    "objectID": "slides/week-5.2.html#fetchdem",
    "href": "slides/week-5.2.html#fetchdem",
    "title": "Working With Data",
    "section": "fetchdem()",
    "text": "fetchdem()\n\n\n# Load packages\nlibrary(vdemlite) # to download V-Dem data\n\n# Polyarchy and clean elections index for USA and Sweden for 2000-2020\ndem_indicators &lt;- fetchdem(indicators = c(\"v2x_polyarchy\", \"v2xel_frefair\"),\n                           countries = c(\"USA\", \"SWE\"))\n\n# View the data\nglimpse(dem_indicators)"
  },
  {
    "objectID": "slides/week-5.2.html#summarizedem",
    "href": "slides/week-5.2.html#summarizedem",
    "title": "Working With Data",
    "section": "summarizedem()",
    "text": "summarizedem()\n\n\n# Summary statistics for the polyarchy index\nsummarizedem(indicator = \"v2x_polyarchy\")"
  },
  {
    "objectID": "slides/week-5.2.html#searchdem",
    "href": "slides/week-5.2.html#searchdem",
    "title": "Working With Data",
    "section": "searchdem()",
    "text": "searchdem()\n\n\nsearchdem()"
  },
  {
    "objectID": "slides/week-5.2.html#your-turn-2",
    "href": "slides/week-5.2.html#your-turn-2",
    "title": "Working With Data",
    "section": "Your Turn",
    "text": "Your Turn\n\n\nLook at the vdemlite documentation\nTry using searchdem() to find an indicator you are interested in using\nUse summarizedem() to get summary statistics for that variable\nUse fetchdem() to download the data for that variable for a country or countries of interest\nTry using mutate() to add region codes to the data\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/week-5.2.html#downloading-v-dem-data",
    "href": "slides/week-5.2.html#downloading-v-dem-data",
    "title": "Working With Data",
    "section": "Downloading V-Dem Data",
    "text": "Downloading V-Dem Data\n\nThe vdem function from vdemdata just downloads all of the data. Try running this code chunk. What do you see in democracy?\n\nlibrary(vdemdata) # load the V-Dem package\n\ndemocracy &lt;- vdem() # download the V-Dem dataset"
  },
  {
    "objectID": "slides/week-5.2.html#filter",
    "href": "slides/week-5.2.html#filter",
    "title": "Working With Data",
    "section": "filter()",
    "text": "filter()\n\nRun this code. What do you see?\nTry changing the year\nFor one year, use == instead of &gt;=\nOr try &lt;= and see what happens\n\n\ndemocracy &lt;- vdem |&gt; # download the V-Dem dataset\n  filter(year &gt;= 1990) # filter out years less than 1990\n  \nglimpse(democracy)"
  },
  {
    "objectID": "slides/week-5.2.html#versus",
    "href": "slides/week-5.2.html#versus",
    "title": "Working With Data",
    "section": "= versus ==",
    "text": "= versus ==\n\n\n= is used to assign values to variables, just like &lt;-\n== is used to test if two values are equal to each other\nSo filter(year == 1990) will give you just the observations for 1990"
  },
  {
    "objectID": "slides/week-5.2.html#and",
    "href": "slides/week-5.2.html#and",
    "title": "Working With Data",
    "section": ">= and <=",
    "text": "&gt;= and &lt;=\n\n&gt;= is used to test if a value is greater than or equal to another value\n&lt;= is used to test if a value is less than or equal to another value\nSo filter(year &gt;= 1990) will give you the observations for 1990 and later\nAnd filter(year &lt;= 1990) will give you the observations for 1990 and earlier"
  },
  {
    "objectID": "slides/week-5.2.html#select",
    "href": "slides/week-5.2.html#select",
    "title": "Working With Data",
    "section": "select()",
    "text": "select()\n\nRun this code. What do you see?\nNow try v2x_libdem instead of v2x_polyarchy\nChoose more from the codebook\n\n\ndemocracy &lt;- vdem |&gt; # download the V-Dem dataset\n  select(                  # select (and rename) these variables\n    country = country_name,     # before the = sign is new name  \n    vdem_ctry_id = country_id,  # after the = sign is the old name\n    year, \n    polyarchy = v2x_polyarchy\n  )\n  \nglimpse(democracy)  \n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/week-5.2.html#mutate",
    "href": "slides/week-5.2.html#mutate",
    "title": "Working With Data",
    "section": "mutate()",
    "text": "mutate()\n\nModify the code to create new variable that is three times the value of polyarchy\nHow about polyarchy squared?\n\n\ndemocracy &lt;- vdem |&gt; # download the V-Dem dataset\n  filter(year == 2015) |&gt; # keep only observations from 2015\n  select(                  # select (and rename) these variables\n    country = country_name,     # name before the = sign is new name  \n    vdem_ctry_id = country_id,  # name after the = sign is old name\n    year, \n    polyarchy = v2x_polyarchy \n    ) |&gt;\n  mutate(\n    polyarchy_dbl = polyarchy * 2 # create variable 2X polyarchy\n  )\n  \nglimpse(democracy)  \n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/week-5.2.html#some-common-arithmetic-operators",
    "href": "slides/week-5.2.html#some-common-arithmetic-operators",
    "title": "Working With Data",
    "section": "Some Common Arithmetic Operators",
    "text": "Some Common Arithmetic Operators\n\n\n+ addition\n- subtraction\n* multiplication\n/ division\n^ exponentiation (also **)"
  },
  {
    "objectID": "slides/week-5.2.html#vdemdata-example",
    "href": "slides/week-5.2.html#vdemdata-example",
    "title": "Working With Data",
    "section": "vdemdata Example",
    "text": "vdemdata Example\n\n\n# Load packages\nlibrary(vdemdata) # to download V-Dem data\nlibrary(dplyr)\n\n# Download the data\ndemocracy &lt;- vdem |&gt; # download the V-Dem dataset\n  filter(year == 2015)  |&gt; # filter year, keep 2015\n  select(                  # select (and rename) these variables\n    country = country_name,     # the name before the = sign is the new name  \n    vdem_ctry_id = country_id,  # the name after the = sign is the old name\n    year, \n    polyarchy = v2x_polyarchy, \n    gdp_pc = e_gdppc, \n    region = e_regionpol_6C\n    ) |&gt;\n  mutate(\n    region = case_match(region, # replace the values in region with country names\n                     1 ~ \"Eastern Europe\", \n                     2 ~ \"Latin America\",  \n                     3 ~ \"Middle East\",   \n                     4 ~ \"Africa\", \n                     5 ~ \"The West\", \n                     6 ~ \"Asia\")\n  )\n\n# View the data\nglimpse(democracy)"
  },
  {
    "objectID": "slides/week-5.2.html#section",
    "href": "slides/week-5.2.html#section",
    "title": "Working With Data",
    "section": "",
    "text": "Use filter() to select years…\n\n\n# Download the data\ndemocracy &lt;- vdem |&gt; \n  filter(year == 2015)  |&gt; # keep 2015\n  select(                 \n    country = country_name,       \n    vdem_ctry_id = country_id,  \n    year, \n    polyarchy = v2x_polyarchy, \n    gdp_pc = e_gdppc, \n    region = e_regionpol_6C\n    ) |&gt;\n  mutate(\n    region = case_match(region,\n                     1 ~ \"Eastern Europe\", \n                     2 ~ \"Latin America\",  \n                     3 ~ \"Middle East\",   \n                     4 ~ \"Africa\", \n                     5 ~ \"The West\", \n                     6 ~ \"Asia\")\n  )"
  },
  {
    "objectID": "slides/week-5.2.html#section-1",
    "href": "slides/week-5.2.html#section-1",
    "title": "Working With Data",
    "section": "",
    "text": "Use select() to choose variables…\n\n\n# Download the data\ndemocracy &lt;- vdem |&gt; \n  filter(year == 2015)  |&gt; \n  select(                  # select (and rename) these variables\n    country = country_name,     # the name before the = sign is the new name  \n    vdem_ctry_id = country_id,  # the name after the = sign is the old name\n    year, \n    polyarchy = v2x_polyarchy, \n    gdp_pc = e_gdppc, \n    region = e_regionpol_6C\n    ) |&gt;\n  mutate(\n    region = case_match(region, \n                     1 ~ \"Eastern Europe\", \n                     2 ~ \"Latin America\",  \n                     3 ~ \"Middle East\",   \n                     4 ~ \"Africa\", \n                     5 ~ \"The West\", \n                     6 ~ \"Asia\")\n  )"
  },
  {
    "objectID": "slides/week-5.2.html#section-2",
    "href": "slides/week-5.2.html#section-2",
    "title": "Working With Data",
    "section": "",
    "text": "Use mutate with case_match() to Recode Region….\n\n\n# Download the data\ndemocracy &lt;- vdem |&gt;\n  filter(year == 2015)  |&gt; \n  select(                  \n    country = country_name,     \n    vdem_ctry_id = country_id,  \n    year, \n    polyarchy = v2x_polyarchy, \n    gdp_pc = e_gdppc, \n    region = e_regionpol_6C\n    ) |&gt;\n  mutate(\n    region = case_match(region, # replace the values in region with country names\n                     1 ~ \"Eastern Europe\", \n                     2 ~ \"Latin America\",  \n                     3 ~ \"Middle East\",   \n                     4 ~ \"Africa\", \n                     5 ~ \"The West\", \n                     6 ~ \"Asia\")\n                    # number on the left of the ~ is the V-Dem region code\n                    # we are changing the number to the country name on the right\n                    # of the equals sign\n  )"
  },
  {
    "objectID": "slides/week-6.1.html#downloading-v-dem-data",
    "href": "slides/week-6.1.html#downloading-v-dem-data",
    "title": "The Grammar of Data Wrangling",
    "section": "Downloading V-Dem Data",
    "text": "Downloading V-Dem Data\n\nThe vdem function from vdemdata just downloads all of the data. Try running this code chunk. What do you see in democracy?\n\n\nlibrary(vdemdata) # load the V-Dem package\n\ndemocracy &lt;- vdem() # download the V-Dem dataset\n\n\n\n\n−+\n02:00"
  },
  {
    "objectID": "slides/week-6.1.html#filter",
    "href": "slides/week-6.1.html#filter",
    "title": "The Grammar of Data Wrangling",
    "section": "filter()",
    "text": "filter()\n\nRun this code. What do you see?\nTry changing the year\nFor one year, use == instead of &gt;=\nOr try &lt;= and see what happens\n\n\n\ndemocracy &lt;- vdem |&gt; # download the V-Dem dataset\n  filter(year &gt;= 1990) # filter out years less than 1990\n  \nglimpse(democracy)  \n\n\n\n\n−+\n02:00"
  },
  {
    "objectID": "slides/week-6.1.html#versus",
    "href": "slides/week-6.1.html#versus",
    "title": "The Grammar of Data Wrangling",
    "section": "= versus ==",
    "text": "= versus ==\n\n\n= is used to assign values to variables, just like &lt;-\n== is used to test if two values are equal to each other\nSo filter(year == 1990) will give you just the observations for 1990"
  },
  {
    "objectID": "slides/week-6.1.html#and",
    "href": "slides/week-6.1.html#and",
    "title": "The Grammar of Data Wrangling",
    "section": ">= and <=",
    "text": "&gt;= and &lt;=\n\n&gt;= is used to test if a value is greater than or equal to another value\n&lt;= is used to test if a value is less than or equal to another value\nSo filter(year &gt;= 1990) will give you the observations for 1990 and later\nAnd filter(year &lt;= 1990) will give you the observations for 1990 and earlier"
  },
  {
    "objectID": "slides/week-6.1.html#select",
    "href": "slides/week-6.1.html#select",
    "title": "The Grammar of Data Wrangling",
    "section": "select()",
    "text": "select()\n\nRun this code. What do you see?\nNow try v2x_libdem instead of v2x_polyarchy\nChoose more from the codebook\n\n\ndemocracy &lt;- vdem |&gt; # download the V-Dem dataset\n  select(                  # select (and rename) these variables\n    country = country_name,     # before the = sign is new name  \n    vdem_ctry_id = country_id,  # after the = sign is the old name\n    year, \n    polyarchy = v2x_polyarchy\n  )\n  \nglimpse(democracy)  \n\n\n\n\n−+\n02:00"
  },
  {
    "objectID": "slides/week-6.1.html#mutate",
    "href": "slides/week-6.1.html#mutate",
    "title": "The Grammar of Data Wrangling",
    "section": "mutate()",
    "text": "mutate()\n\nModify the code to create new variable that is three times the value of polyarchy\nHow about polyarchy squared?\n\n\ndemocracy &lt;- vdem |&gt; # download the V-Dem dataset\n  filter(year == 2015) |&gt; # keep only observations from 2015\n  select(                  # select (and rename) these variables\n    country = country_name,     # name before the = sign is new name  \n    vdem_ctry_id = country_id,  # name after the = sign is old name\n    year, \n    polyarchy = v2x_polyarchy \n    ) |&gt;\n  mutate(\n    polyarchy_dbl = polyarchy * 2 # create variable 2X polyarchy\n  )\n  \nglimpse(democracy)  \n\n\n\n\n−+\n02:00"
  },
  {
    "objectID": "slides/week-6.1.html#some-common-arithmetic-operators",
    "href": "slides/week-6.1.html#some-common-arithmetic-operators",
    "title": "The Grammar of Data Wrangling",
    "section": "Some Common Arithmetic Operators",
    "text": "Some Common Arithmetic Operators\n\n\n+ addition\n- subtraction\n* multiplication\n/ division\n^ exponentiation (also **)"
  },
  {
    "objectID": "slides/week-6.1.html#vdemdata-example",
    "href": "slides/week-6.1.html#vdemdata-example",
    "title": "The Grammar of Data Wrangling",
    "section": "vdemdata Example",
    "text": "vdemdata Example\n\n\n# Load packages\nlibrary(vdemdata) # to download V-Dem data\nlibrary(dplyr)\n\n# Download the data\ndemocracy &lt;- vdem |&gt; # download the V-Dem dataset\n  filter(year == 2015)  |&gt; # filter year, keep 2015\n  select(                  # select (and rename) these variables\n    country = country_name,     # the name before the = sign is the new name  \n    vdem_ctry_id = country_id,  # the name after the = sign is the old name\n    year, \n    polyarchy = v2x_polyarchy, \n    gdp_pc = e_gdppc, \n    region = e_regionpol_6C\n    ) |&gt;\n  mutate(\n    region = case_match(region, # replace the values in region with country names\n                     1 ~ \"Eastern Europe\", \n                     2 ~ \"Latin America\",  \n                     3 ~ \"Middle East\",   \n                     4 ~ \"Africa\", \n                     5 ~ \"The West\", \n                     6 ~ \"Asia\")\n  )\n\n# View the data\nglimpse(democracy)"
  },
  {
    "objectID": "slides/week-6.1.html#section",
    "href": "slides/week-6.1.html#section",
    "title": "The Grammar of Data Wrangling",
    "section": "",
    "text": "Use filter() to select years…\n\n\n# Download the data\ndemocracy &lt;- vdem |&gt; \n  filter(year == 2015)  |&gt; # keep 2015\n  select(                 \n    country = country_name,       \n    vdem_ctry_id = country_id,  \n    year, \n    polyarchy = v2x_polyarchy, \n    gdp_pc = e_gdppc, \n    region = e_regionpol_6C\n    ) |&gt;\n  mutate(\n    region = case_match(region,\n                     1 ~ \"Eastern Europe\", \n                     2 ~ \"Latin America\",  \n                     3 ~ \"Middle East\",   \n                     4 ~ \"Africa\", \n                     5 ~ \"The West\", \n                     6 ~ \"Asia\")\n  )"
  },
  {
    "objectID": "slides/week-6.1.html#section-1",
    "href": "slides/week-6.1.html#section-1",
    "title": "The Grammar of Data Wrangling",
    "section": "",
    "text": "Use select() to choose variables…\n\n\n# Download the data\ndemocracy &lt;- vdem |&gt; \n  filter(year == 2015)  |&gt; \n  select(                  # select (and rename) these variables\n    country = country_name,     # the name before the = sign is the new name  \n    vdem_ctry_id = country_id,  # the name after the = sign is the old name\n    year, \n    polyarchy = v2x_polyarchy, \n    gdp_pc = e_gdppc, \n    region = e_regionpol_6C\n    ) |&gt;\n  mutate(\n    region = case_match(region, \n                     1 ~ \"Eastern Europe\", \n                     2 ~ \"Latin America\",  \n                     3 ~ \"Middle East\",   \n                     4 ~ \"Africa\", \n                     5 ~ \"The West\", \n                     6 ~ \"Asia\")\n  )"
  },
  {
    "objectID": "slides/week-6.1.html#section-2",
    "href": "slides/week-6.1.html#section-2",
    "title": "The Grammar of Data Wrangling",
    "section": "",
    "text": "Use mutate with case_match() to Recode Region….\n\n\n# Download the data\ndemocracy &lt;- vdem |&gt;\n  filter(year == 2015)  |&gt; \n  select(                  \n    country = country_name,     \n    vdem_ctry_id = country_id,  \n    year, \n    polyarchy = v2x_polyarchy, \n    gdp_pc = e_gdppc, \n    region = e_regionpol_6C\n    ) |&gt;\n  mutate(\n    region = case_match(region, # replace the values in region with country names\n                     1 ~ \"Eastern Europe\", \n                     2 ~ \"Latin America\",  \n                     3 ~ \"Middle East\",   \n                     4 ~ \"Africa\", \n                     5 ~ \"The West\", \n                     6 ~ \"Asia\")\n                    # number on the left of the ~ is the V-Dem region code\n                    # we are changing the number to the country name on the right\n                    # of the equals sign\n  )"
  },
  {
    "objectID": "slides/week-6.1.html#your-turn",
    "href": "slides/week-6.1.html#your-turn",
    "title": "The Grammar of Data Wrangling",
    "section": "Your Turn!",
    "text": "Your Turn!\n\nHave a look at the V-Dem codebook\n\n\nfilter the data for the year 2010\nselect a different democracy indicator\nuse a different region variable (e.g., e_regionpol_7C)"
  },
  {
    "objectID": "slides/week-6.1.html#group-summarize-and-arrange-1",
    "href": "slides/week-6.1.html#group-summarize-and-arrange-1",
    "title": "The Grammar of Data Wrangling",
    "section": "Group, Summarize and Arrange",
    "text": "Group, Summarize and Arrange\n\n\ngroup_by(), summarize(), arrange()\nA very common sequence in data science:\n\nTake an average or some other statistic for a group\nRank from high to low values of summary value"
  },
  {
    "objectID": "slides/week-6.1.html#example",
    "href": "slides/week-6.1.html#example",
    "title": "The Grammar of Data Wrangling",
    "section": "Example",
    "text": "Example\n\n\n# group_by(), summarize() and arrange()\ndemocracy |&gt; # save result as new object\n  group_by(region)  |&gt; # group data by region\n  summarize(           # summarize following vars (by region)\n    polyarchy_mean = mean(polyarchy, na.rm = TRUE), # calculate mean after remove NAs\n    libdem_median = median(libdem, na.rm = TRUE), # calculate median after remove NAs\n    gender = sd(gender, na.rm = TRUE), # calculate std. dev after remove NAs\n    gdp_pc = min(gdp_pc, na.rm = TRUE) # calculate minimum flfp after remove NAs\n  ) |&gt; \n  arrange(desc(polyarchy_mean)) # arrange in descending order by polyarchy score"
  },
  {
    "objectID": "slides/week-6.1.html#section-3",
    "href": "slides/week-6.1.html#section-3",
    "title": "The Grammar of Data Wrangling",
    "section": "",
    "text": "Use across() to Apply Same Function to Multiple Columns\n\n\ndem_women |&gt;\n  group_by(region) |&gt; \n  summarize(\n    across(c(polyarchy, libdem, women_rep, flfp), # apply to these columns \n           mean, # take the mean of the columns\n           na.rm = TRUE,  # remove NAs\n           .names = \"mean_{col}\") # change the suffix of the vars\n  ) |&gt; \n  arrange(desc(mean_polyarchy))"
  },
  {
    "objectID": "slides/week-6.1.html#try-it-yourself",
    "href": "slides/week-6.1.html#try-it-yourself",
    "title": "The Grammar of Data Wrangling",
    "section": "Try it Yourself",
    "text": "Try it Yourself\nNow try grouping by country instead of region and filter for years &gt;= 2000.\n\nWhat is the median value of polyarchy for Sweden?\nWhat is the max value of libdem New Zealand?\nWhat is the standard deviation of gender for Norway?\nWhat is the min of gdp_pc for Germany?\n\nTry using across() to calculate the mean of polyarchy, libdem, gender1 and gdp_pc for each country."
  },
  {
    "objectID": "slides/week-6.1.html#group-summarize-and-arrange",
    "href": "slides/week-6.1.html#group-summarize-and-arrange",
    "title": "The Grammar of Data Wrangling",
    "section": "Group, Summarize and Arrange",
    "text": "Group, Summarize and Arrange\n\n\ngroup_by(), summarize(), arrange()\nA very common sequence in data science:\n\nTake an average or some other statistic for a group\nRank from high to low values of summary value"
  },
  {
    "objectID": "slides/week-6.2.html#merging-data-frames",
    "href": "slides/week-6.2.html#merging-data-frames",
    "title": "Merging Data Frames",
    "section": "Merging Data Frames",
    "text": "Merging Data Frames\n\nOften we have data from two different sources\nResults in two data frames\nHow to make them one so we can analyze?\nKey questions\n\nWhat is the unit of analysis?\nWhat is/are the corresponding identifier variables?\nAre the identifier variables in common?\nOr do they have to be added/transformed to match?"
  },
  {
    "objectID": "slides/week-6.2.html#merging-wb-and-v-dem-data",
    "href": "slides/week-6.2.html#merging-wb-and-v-dem-data",
    "title": "Merging Data Frames",
    "section": "Merging WB and V-Dem Data",
    "text": "Merging WB and V-Dem Data\n\n\nThese are both time-series, country-level data\nNeed to merge by country-year\nYear is easy\nBut there are many different country codes\nCan use countrycode package to assign country codes"
  },
  {
    "objectID": "slides/week-6.2.html#countrycode-example",
    "href": "slides/week-6.2.html#countrycode-example",
    "title": "Merging Data Frames",
    "section": "countrycode Example",
    "text": "countrycode Example\n\n\n# Load countrycode\nlibrary(countrycode)\n\n# Create new iso3c variable\ndem_data &lt;- dem_data |&gt;    \n  mutate(iso3c = countrycode(sourcevar = country_id, # what we are converting\n        origin = \"vdem\",         # we are converting from vdem\n        destination = \"wb\"))  |&gt; # and converting to the WB iso3c code \n  relocate(iso3c, .after = country_id) # move iso3c \n\n# View the data\nglimpse(dem_data)"
  },
  {
    "objectID": "slides/week-6.2.html#try-it-yourself",
    "href": "slides/week-6.2.html#try-it-yourself",
    "title": "Merging Data Frames",
    "section": "Try it Yourself",
    "text": "Try it Yourself\n\n\nUsing your democracy data frame from the last lesson\nUse mutate() and countrycode() to add iso3c country codes\nUse relocate to move your iso3c code to the “front” of your data frame (optional)\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "slides/week-6.2.html#types-of-joins-in-dplyr",
    "href": "slides/week-6.2.html#types-of-joins-in-dplyr",
    "title": "Merging Data Frames",
    "section": "Types of Joins in dplyr",
    "text": "Types of Joins in dplyr\n\nMutating versus filtering joins\nFour types of mutating joins\n\ninner_join()\nfull_join()\nleft_join()\nright_join()\n\nFor the most part we will use left_join()"
  },
  {
    "objectID": "slides/week-6.2.html#left_join-example",
    "href": "slides/week-6.2.html#left_join-example",
    "title": "Merging Data Frames",
    "section": "left_join() Example",
    "text": "left_join() Example\n\n\n# Perform left join using common iso3c variable and year\ndem_women &lt;- left_join(dem_data, women_emp, by = c(\"iso3c\", \"year\")) |&gt; \n  select(-c(country_text_id, country_id, country)) |&gt; # drop extra country codes/names\n  rename(region = e_regionpol_6C, \n         polyarchy = v2x_polyarchy,\n         libdem = v2x_libdem) |&gt;\n    mutate(\n    region = case_match(region, # replace the values in region with country names\n                     1 ~ \"Eastern Europe\", \n                     2 ~ \"Latin America\",  \n                     3 ~ \"Middle East\",   \n                     4 ~ \"Africa\", \n                     5 ~ \"The West\", \n                     6 ~ \"Asia\")\n    )\n  \n# View the data\nglimpse(dem_women)"
  },
  {
    "objectID": "slides/week-6.2.html#try-it-yourself-1",
    "href": "slides/week-6.2.html#try-it-yourself-1",
    "title": "Merging Data Frames",
    "section": "Try it Yourself",
    "text": "Try it Yourself\n\nTake your V-Dem data frame and your World Bank data frame\nUsing left_join() to merge on country code and year\nAlong the way, use rename() and select() to insure you have just one country name\nTry inner_join(), full_join(), and right_join() as time allows\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "slides/week-6.2.html#group-summarize-and-arrange",
    "href": "slides/week-6.2.html#group-summarize-and-arrange",
    "title": "Merging Data Frames",
    "section": "Group, Summarize and Arrange",
    "text": "Group, Summarize and Arrange\n\n\nDo a group, summarize, arrange sequence on your merged data frame\nGroup and summarize by region (mean or median)\nGroup and summarize by country (mean or median)\nTry using across() to summarize multiple columns at once\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "slides/week-6.2.html#example",
    "href": "slides/week-6.2.html#example",
    "title": "Merging Data Frames",
    "section": "Example",
    "text": "Example\n\n\n# group_by(), summarize() and arrange()\ndem_women |&gt; # save result as new object\n  group_by(region)  |&gt; # group data by region\n  summarize(           # summarize following vars (by region)\n    polyarchy_mean = mean(polyarchy, na.rm = TRUE), # calculate mean after remove NAs\n    libdem_median = median(libdem, na.rm = TRUE), # calculate median after remove NAs\n    women_rep_sd = sd(women_rep, na.rm = TRUE), # calculate std. dev after remove NAs\n    flfp_min = min(flfp, na.rm = TRUE) # calculate minimum flfp after remove NAs\n  ) |&gt; \n  arrange(desc(polyarchy_mean)) # arrange in descending order by polyarchy score"
  },
  {
    "objectID": "slides/week-6.2.html#section",
    "href": "slides/week-6.2.html#section",
    "title": "Merging Data Frames",
    "section": "",
    "text": "Use across() to Apply Same Function to Multiple Columns\n\n\ndem_women |&gt;\n  group_by(region) |&gt; \n  summarize(\n    across(c(polyarchy, libdem, women_rep, flfp), mean, na.rm = TRUE)\n  ) |&gt; \n  arrange(desc(polyarchy))"
  },
  {
    "objectID": "slides/week-6.2.html#try-it-yourself-2",
    "href": "slides/week-6.2.html#try-it-yourself-2",
    "title": "Merging Data Frames",
    "section": "Try it Yourself",
    "text": "Try it Yourself\n\nTry changing the parameters in the code to answer these questions:\n\n\nTry summarizing the data with a different function for one or more of the variables.\n\n\nWhat is the median value of polyarchy for The West?\nWhat is the max value of libdem for Eastern Europe?\nWhat is the standard deviation of women_rep for Africa?\nWhat is the mean of flfp for the Middle East?\n\n\nNow try grouping by country instead of region and filter for years &gt;= 2000.\n\n\nWhat is the median value of polyarchy for Sweden?\nWhat is the max value of libdem New Zealand?\nWhat is the standard deviation of women_rep for Norway?\nWhat is the min of flfp for Germany?\n\n\nTry sorting countries in ascending order of the selected variable (hint: delete “desc” from the arrange() call). Which country ranks at the “top” of the list? Now change it back to descending order."
  },
  {
    "objectID": "slides/week-6.2.html#horizontal-join-merge",
    "href": "slides/week-6.2.html#horizontal-join-merge",
    "title": "Merging Data Frames",
    "section": "Horizontal Join (Merge)",
    "text": "Horizontal Join (Merge)\n\n\nOften we have data from two different sources\nResults in two data frames\nHow to make them one so we can analyze?"
  },
  {
    "objectID": "slides/week-6.2.html#what-a-merge-looks-like",
    "href": "slides/week-6.2.html#what-a-merge-looks-like",
    "title": "Merging Data Frames",
    "section": "What a Merge Looks Like",
    "text": "What a Merge Looks Like\n\n\nSource: R for HR"
  },
  {
    "objectID": "slides/week-6.2.html#inner_join",
    "href": "slides/week-6.2.html#inner_join",
    "title": "Merging Data Frames",
    "section": "inner_join()",
    "text": "inner_join()\n\n\nSource: R for HR"
  },
  {
    "objectID": "slides/week-6.2.html#full_join",
    "href": "slides/week-6.2.html#full_join",
    "title": "Merging Data Frames",
    "section": "full_join()",
    "text": "full_join()\n\n\nSource: R for HR"
  },
  {
    "objectID": "slides/week-6.2.html#left_join",
    "href": "slides/week-6.2.html#left_join",
    "title": "Merging Data Frames",
    "section": "left_join()",
    "text": "left_join()\n\n\nSource: R for HR"
  },
  {
    "objectID": "slides/week-6.2.html#right_join",
    "href": "slides/week-6.2.html#right_join",
    "title": "Merging Data Frames",
    "section": "right_join()",
    "text": "right_join()\n\n\nSource: R for HR"
  },
  {
    "objectID": "slides/week-6.2.html#scenario",
    "href": "slides/week-6.2.html#scenario",
    "title": "Merging Data Frames",
    "section": "Scenario",
    "text": "Scenario\n\n\nWe want to merge two data frames\nOne is from the World Bank\nThe other is from V-Dem\nHow do we do it?"
  },
  {
    "objectID": "slides/week-6.2.html#key-questions",
    "href": "slides/week-6.2.html#key-questions",
    "title": "Merging Data Frames",
    "section": "Key Questions",
    "text": "Key Questions\n\n\nWhat is the unit of analysis?\nWhat is/are the corresponding identifier variables?\nAre the identifier variables in common?\nOr do they have to be added/transformed to match?"
  },
  {
    "objectID": "slides/week-6.2.html#use-left_join-to-merge",
    "href": "slides/week-6.2.html#use-left_join-to-merge",
    "title": "Merging Data Frames",
    "section": "Use left_join() to Merge",
    "text": "Use left_join() to Merge\n\n\n# Perform left join using common iso3c variable and year\ndem_wb &lt;- left_join(vdem_dta, wb_dta, by = c(\"iso3c\", \"year\")) |&gt; #join\n  select(-c(country_text_id, country_id, country)) # drop extra country variables\n  \n# View the data\nglimpse(dem_wb)"
  },
  {
    "objectID": "slides/week-6.2.html#illustration",
    "href": "slides/week-6.2.html#illustration",
    "title": "Merging Data Frames",
    "section": "Illustration",
    "text": "Illustration\n\nSource: R for HR"
  },
  {
    "objectID": "slides/week-6.2.html#grab-some-wb-data",
    "href": "slides/week-6.2.html#grab-some-wb-data",
    "title": "Merging Data Frames",
    "section": "Grab Some WB Data",
    "text": "Grab Some WB Data\n\n\n# Load packages\nlibrary(wbstats) \nlibrary(dplyr) \nlibrary(janitor) \n\n# Store the list of indicators in an object\nindicators &lt;- c(\"flfp\" = \"SL.TLF.CACT.FE.ZS\", \"women_rep\" = \"SG.GEN.PARL.ZS\") \n\n# Download the data  \nwb_dta &lt;- wb_data(indicators, mrv = 25) |&gt; # most recent 25 years\n  select(!iso2c) |&gt; \n  rename(year = date) |&gt; \n  mutate(\n    flfp = round_to_fraction(flfp, denominator = 100), # round to nearest 100th\n    women_rep = round_to_fraction(women_rep, denominator = 100) \n  )\n\n# View the data\nglimpse(women_emp)"
  },
  {
    "objectID": "slides/week-6.2.html#grab-some-v-dem-data",
    "href": "slides/week-6.2.html#grab-some-v-dem-data",
    "title": "Merging Data Frames",
    "section": "Grab Some V-Dem Data",
    "text": "Grab Some V-Dem Data\n\n\nlibrary(vdemlite)\n\nvdem_dta &lt;- fetchdem(indicators = c(\"v2x_gender\", \"v2x_gencl\", \"e_regionpol_6C\") |&gt;\n                         start_year = 2000, end_year = 2020) |&gt; # 20 year span\n                 rename(\n                   women_polemp = v2x_gender,\n                   women_civlib = v2x_gencl,\n                   region = e_regionpol_6C\n                 ) |&gt;\n            mutate(\n              region = case_match(region, \n                                  1 ~ \"Eastern Europe\", \n                                  2 ~ \"Latin America\",  \n                                  3 ~ \"Middle East\",   \n                                  4 ~ \"Africa\", \n                                  5 ~ \"The West\", \n                                  6 ~ \"Asia\")\n              )\n\nglimpse(vdem_dta)"
  },
  {
    "objectID": "slides/week-6.2.html#use-countrycode",
    "href": "slides/week-6.2.html#use-countrycode",
    "title": "Merging Data Frames",
    "section": "Use countrycode",
    "text": "Use countrycode\n\n\n# Load countrycode\nlibrary(countrycode)\n\n# Create new iso3c variable\nvdem_data &lt;- vdem_data |&gt;    \n  mutate(iso3c = countrycode(sourcevar = country_id, # what we are converting\n        origin = \"vdem\",         # we are converting from vdem\n        destination = \"wb\"))  |&gt; # and converting to the WB iso3c code \n  relocate(iso3c, .after = country_id) # move iso3c \n\n# View the data\nglimpse(dem_data)"
  },
  {
    "objectID": "slides/week-6.2.html#summarize-the-data",
    "href": "slides/week-6.2.html#summarize-the-data",
    "title": "Merging Data Frames",
    "section": "Summarize the Data",
    "text": "Summarize the Data\n\n\nDo a group, summarize, arrange sequence on your merged data frame\nGroup and summarize by country (mean or median)\nTry using across() to summarize multiple columns at once\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "slides/week-6.2.html#create-a-scatter-plot",
    "href": "slides/week-6.2.html#create-a-scatter-plot",
    "title": "Merging Data Frames",
    "section": "Create a Scatter Plot",
    "text": "Create a Scatter Plot\n\n\nNow you have one data point per country\nUse ggplot2 to create a scatter plot\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "slides/week-7.1.html#what-is-a-data-frame",
    "href": "slides/week-7.1.html#what-is-a-data-frame",
    "title": "Tidying Data",
    "section": "What is a Data Frame?",
    "text": "What is a Data Frame?\n\n\nSpecial kind of tabular data used in data science\nEach column can be a different data type\nData frames are the most common data structure in R"
  },
  {
    "objectID": "slides/week-7.1.html#what-is-a-tibble",
    "href": "slides/week-7.1.html#what-is-a-tibble",
    "title": "Tidying Data",
    "section": "What is a Tibble?",
    "text": "What is a Tibble?\n\n\nModern data frames in R\nOffers better printing and subsetting behaviors\nDoes not convert character vectors to factors by default\nDisplays only the first 10 rows and as many columns as fit on screen\nColumn names are preserved exactly, even if they contain spaces"
  },
  {
    "objectID": "slides/week-7.1.html#creating-a-tibble",
    "href": "slides/week-7.1.html#creating-a-tibble",
    "title": "Tidying Data",
    "section": "Creating a Tibble",
    "text": "Creating a Tibble\n\n\nWhen you read data into R with readr you automatically get a tibble\nYou can create a tibble using tibble() from the tibble package:\n\n\n  library(tibble)\n  \n  # Create a tibble\n  my_tibble &lt;- tibble(\n    name = c(\"Alice\", \"Bob\", \"Charlie\"),\n    age = c(25, 30, 35),\n    height = c(160, 170, 180),\n    is_student = c(TRUE, FALSE, FALSE)\n  )\n  \nmy_tibble  \n\n# A tibble: 3 × 4\n  name      age height is_student\n  &lt;chr&gt;   &lt;dbl&gt;  &lt;dbl&gt; &lt;lgl&gt;     \n1 Alice      25    160 TRUE      \n2 Bob        30    170 FALSE     \n3 Charlie    35    180 FALSE"
  },
  {
    "objectID": "slides/week-7.1.html#common-data-types",
    "href": "slides/week-7.1.html#common-data-types",
    "title": "Tidying Data",
    "section": "Common Data Types",
    "text": "Common Data Types\n\n&lt;chr&gt; (Character): Stores text strings\n\nExample: \"hello\", \"R programming\"\n\n&lt;dbl&gt; (Double): Stores decimal (floating-point) numbers\n\nExample: 3.14, -1.0\n\n&lt;int&gt; (Integer): Stores whole numbers (integers)\n\nExample: 1, -100, 42\n\n&lt;lgl&gt; (Logical): Stores boolean values (TRUE, FALSE, NA)\n\nExample: TRUE, FALSE, NA\n\n&lt;fct&gt; (Factor): Stores categorical variables with fixed levels\n\nExample: factor(c(\"low\", \"medium\", \"high\"))\n\n&lt;date&gt; (Date): Stores dates in the “YYYY-MM-DD” format\n\nExample: as.Date(\"2024-09-05\")"
  },
  {
    "objectID": "slides/week-7.1.html#other-data-types",
    "href": "slides/week-7.1.html#other-data-types",
    "title": "Tidying Data",
    "section": "Other Data Types",
    "text": "Other Data Types\n\n\n&lt;dttm&gt; (Date-Time or POSIXct): Stores date-time objects (both date and time).\n\nExample: as.POSIXct(\"2024-09-05 14:30:00\")\n\n&lt;time&gt; (Time): Specifically stores time-of-day values (rarely seen without a date)\n\nExample: \"14:30:00\"\n\n&lt;list&gt; (List): Stores lists, where each entry can be a complex object.\n\nExample: list(c(1, 2, 3), c(\"a\", \"b\", \"c\"))"
  },
  {
    "objectID": "slides/week-7.1.html#dates-and-times-with-lubridate",
    "href": "slides/week-7.1.html#dates-and-times-with-lubridate",
    "title": "Tidying Data",
    "section": "Dates and Times with lubridate",
    "text": "Dates and Times with lubridate\n\nlubridate is an R package that makes it easier to work with dates and times\nUse convenient functions to store dates in different formats\n\n\nlibrary(lubridate)\n  \n# Store a date\nmy_date &lt;- ymd(\"2024-09-05\")\nmy_date2 &lt;- mdy(\"09-05-2024\")\nmy_date3 &lt;- dmy(\"05-09-2024\")\n  \n# Print in long form\nformat(my_date, \"%B %d, %Y\")\n\n[1] \"September 05, 2024\""
  },
  {
    "objectID": "slides/week-7.1.html#your-turn",
    "href": "slides/week-7.1.html#your-turn",
    "title": "Tidying Data",
    "section": "Your Turn",
    "text": "Your Turn\n\n\nCreate your own tibble\nMake it on a topic you find interesting\nTry to include at least three data types\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "slides/week-7.1.html#what-is-tyding-data",
    "href": "slides/week-7.1.html#what-is-tyding-data",
    "title": "Tidying Data",
    "section": "What is Tyding Data?",
    "text": "What is Tyding Data?\n\nEarlier we talked about the concept of “tidy data”\n\nEach variable forms a column\nEach observation is in a row\nEach cell has a single value\n\nThe process of tidying data involves reshaping (or pivoting) data into a tidy format\nWe want to use the pivot_longer() or pivot_wider() functions from tidyr to do this"
  },
  {
    "objectID": "slides/week-7.1.html#section",
    "href": "slides/week-7.1.html#section",
    "title": "Tidying Data",
    "section": "",
    "text": "Query: Are these data in a tidy format?\n\n\nlibrary(tidyr)\n\nsmiths\n\n# A tibble: 2 × 5\n  subject     time   age weight height\n  &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 John Smith     1    33     90   1.87\n2 Mary Smith     1    NA     NA   1.54\n\n\n\n\n\n\n\n\n\nTip\n\n\nTo get a list of data frames available in a package use the data() function, e.g. data(package = \"tidyr\")."
  },
  {
    "objectID": "slides/week-7.1.html#section-1",
    "href": "slides/week-7.1.html#section-1",
    "title": "Tidying Data",
    "section": "",
    "text": "How about these data?\n\n\nworld_bank_pop\n\n# A tibble: 1,064 × 20\n   country indicator      `2000`  `2001`  `2002`  `2003`  `2004`  `2005`  `2006`\n   &lt;chr&gt;   &lt;chr&gt;           &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 ABW     SP.URB.TOTL    4.16e4 4.20e+4 4.22e+4 4.23e+4 4.23e+4 4.24e+4 4.26e+4\n 2 ABW     SP.URB.GROW    1.66e0 9.56e-1 4.01e-1 1.97e-1 9.46e-2 1.94e-1 3.67e-1\n 3 ABW     SP.POP.TOTL    8.91e4 9.07e+4 9.18e+4 9.27e+4 9.35e+4 9.45e+4 9.56e+4\n 4 ABW     SP.POP.GROW    2.54e0 1.77e+0 1.19e+0 9.97e-1 9.01e-1 1.00e+0 1.18e+0\n 5 AFE     SP.URB.TOTL    1.16e8 1.20e+8 1.24e+8 1.29e+8 1.34e+8 1.39e+8 1.44e+8\n 6 AFE     SP.URB.GROW    3.60e0 3.66e+0 3.72e+0 3.71e+0 3.74e+0 3.81e+0 3.81e+0\n 7 AFE     SP.POP.TOTL    4.02e8 4.12e+8 4.23e+8 4.34e+8 4.45e+8 4.57e+8 4.70e+8\n 8 AFE     SP.POP.GROW    2.58e0 2.59e+0 2.61e+0 2.62e+0 2.64e+0 2.67e+0 2.70e+0\n 9 AFG     SP.URB.TOTL    4.31e6 4.36e+6 4.67e+6 5.06e+6 5.30e+6 5.54e+6 5.83e+6\n10 AFG     SP.URB.GROW    1.86e0 1.15e+0 6.86e+0 7.95e+0 4.59e+0 4.47e+0 5.03e+0\n# ℹ 1,054 more rows\n# ℹ 11 more variables: `2007` &lt;dbl&gt;, `2008` &lt;dbl&gt;, `2009` &lt;dbl&gt;, `2010` &lt;dbl&gt;,\n#   `2011` &lt;dbl&gt;, `2012` &lt;dbl&gt;, `2013` &lt;dbl&gt;, `2014` &lt;dbl&gt;, `2015` &lt;dbl&gt;,\n#   `2016` &lt;dbl&gt;, `2017` &lt;dbl&gt;"
  },
  {
    "objectID": "slides/week-7.1.html#pivot-longer",
    "href": "slides/week-7.1.html#pivot-longer",
    "title": "Tidying Data",
    "section": "Pivot Longer",
    "text": "Pivot Longer\n\npivot_longer() takes three arguments:\n\ncols - which columns you want to pivot\nnames_to - the name of the column where the old column names are going to (identifier)\nvalues_to - the name of the column where the values are going to"
  },
  {
    "objectID": "slides/week-7.1.html#example-wb-population-data",
    "href": "slides/week-7.1.html#example-wb-population-data",
    "title": "Tidying Data",
    "section": "Example: WB Population Data",
    "text": "Example: WB Population Data\n\n\nlibrary(tidyr)\nlibrary(dplyr)\n\n# Pivot using pivot_longer\n\nlong_pop_data &lt;- world_bank_pop |&gt;\n  pivot_longer(\n    cols = `2000`:`2017`,   # The columns you want to pivot (years)\n    names_to = \"year\",      # New column name for the years\n    values_to = \"pop\"       # New column name for the values\n  ) \n\n# View the tidied data\nlong_pop_data\n\n# A tibble: 19,152 × 4\n   country indicator   year    pop\n   &lt;chr&gt;   &lt;chr&gt;       &lt;chr&gt; &lt;dbl&gt;\n 1 ABW     SP.URB.TOTL 2000  41625\n 2 ABW     SP.URB.TOTL 2001  42025\n 3 ABW     SP.URB.TOTL 2002  42194\n 4 ABW     SP.URB.TOTL 2003  42277\n 5 ABW     SP.URB.TOTL 2004  42317\n 6 ABW     SP.URB.TOTL 2005  42399\n 7 ABW     SP.URB.TOTL 2006  42555\n 8 ABW     SP.URB.TOTL 2007  42729\n 9 ABW     SP.URB.TOTL 2008  42906\n10 ABW     SP.URB.TOTL 2009  43079\n# ℹ 19,142 more rows"
  },
  {
    "objectID": "slides/week-7.1.html#section-2",
    "href": "slides/week-7.1.html#section-2",
    "title": "Tidying Data",
    "section": "",
    "text": "This is better, usable even, but are we done if we want a tidy data frame?\n\n\n\n# A tibble: 19,152 × 4\n   country indicator   year    pop\n   &lt;chr&gt;   &lt;chr&gt;       &lt;chr&gt; &lt;dbl&gt;\n 1 ABW     SP.URB.TOTL 2000  41625\n 2 ABW     SP.URB.TOTL 2001  42025\n 3 ABW     SP.URB.TOTL 2002  42194\n 4 ABW     SP.URB.TOTL 2003  42277\n 5 ABW     SP.URB.TOTL 2004  42317\n 6 ABW     SP.URB.TOTL 2005  42399\n 7 ABW     SP.URB.TOTL 2006  42555\n 8 ABW     SP.URB.TOTL 2007  42729\n 9 ABW     SP.URB.TOTL 2008  42906\n10 ABW     SP.URB.TOTL 2009  43079\n# ℹ 19,142 more rows"
  },
  {
    "objectID": "slides/week-7.1.html#section-3",
    "href": "slides/week-7.1.html#section-3",
    "title": "Tidying Data",
    "section": "",
    "text": "Issue is that the data are in long form (which is OK for some purposes), but we want to make it wider. Wider, but tidy…\n\n\n\n# A tibble: 19,152 × 4\n   country indicator   year    pop\n   &lt;chr&gt;   &lt;chr&gt;       &lt;chr&gt; &lt;dbl&gt;\n 1 ABW     SP.URB.TOTL 2000  41625\n 2 ABW     SP.URB.TOTL 2001  42025\n 3 ABW     SP.URB.TOTL 2002  42194\n 4 ABW     SP.URB.TOTL 2003  42277\n 5 ABW     SP.URB.TOTL 2004  42317\n 6 ABW     SP.URB.TOTL 2005  42399\n 7 ABW     SP.URB.TOTL 2006  42555\n 8 ABW     SP.URB.TOTL 2007  42729\n 9 ABW     SP.URB.TOTL 2008  42906\n10 ABW     SP.URB.TOTL 2009  43079\n# ℹ 19,142 more rows"
  },
  {
    "objectID": "slides/week-7.1.html#section-4",
    "href": "slides/week-7.1.html#section-4",
    "title": "Tidying Data",
    "section": "",
    "text": "Issue is that the data are in long form (which is OK for some purposes), but we want to make it wider. Wider, but tidy…\n\n\nlibrary(tidyr)\nlibrary(dplyr)\n\n# Pivot using pivot_longer\n\nlong_pop_data &lt;- world_bank_pop |&gt;\n  pivot_longer(\n    cols = `2000`:`2017`,   # The columns you want to pivot (years)\n    names_to = \"year\",      # New column name for the years\n    values_to = \"pop\"       # New column name for the values\n  ) \n\n# View the tidied data\nlong_pop_data"
  },
  {
    "objectID": "slides/week-7.1.html#pivot-wider",
    "href": "slides/week-7.1.html#pivot-wider",
    "title": "Tidying Data",
    "section": "Pivot Wider",
    "text": "Pivot Wider\n\npivot_wider() takes three main arguments:\n\nnames_from - the column whose values will become new column names (identifier)\nvalues_from - the column containing the values that will fill the new columns\nvalues_fill (optional) - specifies what to use for missing values (e.g., NA, 0)"
  },
  {
    "objectID": "slides/week-7.1.html#pivotwider-the-wb-data",
    "href": "slides/week-7.1.html#pivotwider-the-wb-data",
    "title": "Tidying Data",
    "section": "pivotwider() the WB Data",
    "text": "pivotwider() the WB Data\n\n\n# pivot wider\ntidy_pop_data &lt;- long_pop_data |&gt;\n  pivot_wider(\n    names_from = indicator, \n    values_from = pop\n  )\n\n# view the data\ntidy_pop_data\n\n# A tibble: 4,788 × 6\n   country year  SP.URB.TOTL SP.URB.GROW SP.POP.TOTL SP.POP.GROW\n   &lt;chr&gt;   &lt;chr&gt;       &lt;dbl&gt;       &lt;dbl&gt;       &lt;dbl&gt;       &lt;dbl&gt;\n 1 ABW     2000        41625      1.66         89101       2.54 \n 2 ABW     2001        42025      0.956        90691       1.77 \n 3 ABW     2002        42194      0.401        91781       1.19 \n 4 ABW     2003        42277      0.197        92701       0.997\n 5 ABW     2004        42317      0.0946       93540       0.901\n 6 ABW     2005        42399      0.194        94483       1.00 \n 7 ABW     2006        42555      0.367        95606       1.18 \n 8 ABW     2007        42729      0.408        96787       1.23 \n 9 ABW     2008        42906      0.413        97996       1.24 \n10 ABW     2009        43079      0.402        99212       1.23 \n# ℹ 4,778 more rows"
  },
  {
    "objectID": "slides/week-7.1.html#download-some-messy-data",
    "href": "slides/week-7.1.html#download-some-messy-data",
    "title": "Tidying Data",
    "section": "Download Some Messy Data",
    "text": "Download Some Messy Data\n\n\nDownload some messy WB data\nMake it multiple variables\nDownload as a CSV file\nSave in your project /data folder"
  },
  {
    "objectID": "slides/week-7.1.html#messy-data-example",
    "href": "slides/week-7.1.html#messy-data-example",
    "title": "Tidying Data",
    "section": "Messy Data Example",
    "text": "Messy Data Example"
  },
  {
    "objectID": "slides/week-7.1.html#read-data",
    "href": "slides/week-7.1.html#read-data",
    "title": "Tidying Data",
    "section": "Read Data",
    "text": "Read Data\n\n\n# Load packages\nlibrary(readr) \nlibrary(dplyr) \n\n# Read data from csv file into an object called \"wb_data_messy\"\nwb_data_messy &lt;- read_csv(\"data/your_file_name.csv\")\n\n# View the data\nglimpse(wb_data_messy)"
  },
  {
    "objectID": "slides/week-7.1.html#pivot-the-data",
    "href": "slides/week-7.1.html#pivot-the-data",
    "title": "Tidying Data",
    "section": "Pivot the Data",
    "text": "Pivot the Data\n\n\nUse pivot_longer() to get the data in long form\nUse pivot_wider() to get the series in the columns"
  },
  {
    "objectID": "slides/week-7.1.html#special-considerations",
    "href": "slides/week-7.1.html#special-considerations",
    "title": "Tidying Data",
    "section": "Special Considerations",
    "text": "Special Considerations\n\n\n# Load tidyr\nlibrary(tidyr)\n\n# Reshape the data\nwb_data &lt;- wb_data_messy |&gt; \n  pivot_longer(             \n    cols = `1973 [YR1973]`: `2022 [YR2022]`, # columns to pivot\n    names_to = \"year\", # name the identifier column \"year\"\n    values_to = \"values\" # name the numeric var column \n  ) \n\n# View the data\nglimpse(wb_data)"
  },
  {
    "objectID": "slides/week-7.1.html#special-considerations-1",
    "href": "slides/week-7.1.html#special-considerations-1",
    "title": "Tidying Data",
    "section": "Special Considerations",
    "text": "Special Considerations\n\n\nwb_data &lt;- wb_data |&gt;\n  select(-`Series Name`)\n\n# Reshape the data\ntidy_data &lt;- wb_data |&gt; \n  pivot_wider(             \n    names_from = `Series Code`,\n    values_from = values\n  ) \n\n# View the data\nglimpse(wb_data)"
  },
  {
    "objectID": "slides/week-7.1.html#give-it-a-shot",
    "href": "slides/week-7.1.html#give-it-a-shot",
    "title": "Tidying Data",
    "section": "Give it a Shot!",
    "text": "Give it a Shot!\n\n\nTry downloading some messy WB data and make it tidy\nRefer to previous slides for help\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "slides/week-7.1.html#mutating-variables",
    "href": "slides/week-7.1.html#mutating-variables",
    "title": "Tidying Data",
    "section": "Mutating Variables",
    "text": "Mutating Variables\n\n\nAnytime we want to change a variable, we are going to use the dplyr verbs mutate() or mutate_at()\nmutate() is if you want to change on variable\nUse across() for multiple variables"
  },
  {
    "objectID": "slides/week-7.1.html#lets-fix-our-variables",
    "href": "slides/week-7.1.html#lets-fix-our-variables",
    "title": "Tidying Data",
    "section": "Let’s Fix Our Variables",
    "text": "Let’s Fix Our Variables\n\n\n# Fix year and flfp\nwb_data &lt;- wb_data |&gt; \n  mutate(year = substring(year, 1, 4)) |&gt;  # truncate year\n  mutate(across(c(\"year\", \"flfp\"), as.numeric))  # convert year and flfp to numeric\n\n# View the data\nglimpse(wb_data)"
  },
  {
    "objectID": "slides/week-7.1.html#now-try-it-with-multiple-varaibles",
    "href": "slides/week-7.1.html#now-try-it-with-multiple-varaibles",
    "title": "Tidying Data",
    "section": "Now Try it With Multiple Varaibles",
    "text": "Now Try it With Multiple Varaibles\n\n\nGo to the data frame with multiple variables that you created earlier\nHow would you modify this code to make sure the variables are in the right format?"
  },
  {
    "objectID": "slides/week-7.1.html#clean-variable-names",
    "href": "slides/week-7.1.html#clean-variable-names",
    "title": "Tidying Data",
    "section": "Clean Variable Names",
    "text": "Clean Variable Names\n\nVery simple: use the janitor package!\n\n# Load janitor\nlibrary(janitor)\n\n# Apply clean_names() to wb_data, store in new data frame called wb_data_clean\nwb_data_clean &lt;- wb_data |&gt;  \n  clean_names() \n\n# Write wb_data_clean to a csv file\nwrite_csv(wb_data_clean, \"data/wb_data_clean.csv\")\n\n# View the data\nglimpse(wb_data_clean)"
  },
  {
    "objectID": "slides/week-7.1.html#column-specifications",
    "href": "slides/week-7.1.html#column-specifications",
    "title": "Tidying Data",
    "section": "Column Specifications",
    "text": "Column Specifications\n\n\nCan clean columns on backend\nBut can also specify data types in read_csv() or read_excel()\n\n\nspec(wb_data_messy) # show column specifications (from `readr`)\n\nwb_data_messy &lt;- read_csv(\"data/your_file_name.csv\", \n                          col_types = cols(\n                           col_double(`1990 [YR1990]`) \n                          ))"
  },
  {
    "objectID": "slides/week-7.1.html#pivot-longer-1",
    "href": "slides/week-7.1.html#pivot-longer-1",
    "title": "Tidying Data",
    "section": "Pivot Longer",
    "text": "Pivot Longer\n\npivot_longer() takes three arguments:\n\ncols - which columns you want to pivot\nnames_to - the name of the column where the old column names are going to (identifier)\nvalues_to - the name of the column where the values are going to"
  },
  {
    "objectID": "slides/week-7.1.html#pivot-wider-1",
    "href": "slides/week-7.1.html#pivot-wider-1",
    "title": "Tidying Data",
    "section": "Pivot Wider",
    "text": "Pivot Wider\n\npivot_wider() takes three main arguments:\n\nnames_from - the column whose values will become new column names (identifier)\nvalues_from - the column containing the values that will fill the new columns\nvalues_fill (optional) - specifies what to use for missing values (e.g., NA, 0)"
  },
  {
    "objectID": "slides/week-7.1.html#pivotwider-the-wb-data-1",
    "href": "slides/week-7.1.html#pivotwider-the-wb-data-1",
    "title": "Tidying Data",
    "section": "pivotwider() the WB Data",
    "text": "pivotwider() the WB Data\n\n\n\n# A tibble: 4,788 × 6\n   country year  SP.URB.TOTL SP.URB.GROW SP.POP.TOTL SP.POP.GROW\n   &lt;chr&gt;   &lt;chr&gt;       &lt;dbl&gt;       &lt;dbl&gt;       &lt;dbl&gt;       &lt;dbl&gt;\n 1 ABW     2000        41625      1.66         89101       2.54 \n 2 ABW     2001        42025      0.956        90691       1.77 \n 3 ABW     2002        42194      0.401        91781       1.19 \n 4 ABW     2003        42277      0.197        92701       0.997\n 5 ABW     2004        42317      0.0946       93540       0.901\n 6 ABW     2005        42399      0.194        94483       1.00 \n 7 ABW     2006        42555      0.367        95606       1.18 \n 8 ABW     2007        42729      0.408        96787       1.23 \n 9 ABW     2008        42906      0.413        97996       1.24 \n10 ABW     2009        43079      0.402        99212       1.23 \n# ℹ 4,778 more rows"
  },
  {
    "objectID": "assignments/coding-assignment-2.html#overview",
    "href": "assignments/coding-assignment-2.html#overview",
    "title": "Coding Assignment 2",
    "section": "",
    "text": "For this assignment, you are going to download some variables using the wbstats and vdemlite packages. Then you are going to wrangle these data and merge the two data sets into one and analyze how they relate to women’s representation in national parliaments. Do your work for each step in the code chunks provided.\nHere is a setup code chunk. You can load all of your packages here or as you go along in the code chunks below using the library() function. However, note that you really only need to load a library once per document.\n\n\n\n\n\n\nWarning\n\n\n\nPlease refrain from installing any packages in your code chunks because this will also install them every time the code chunk is run or your document is rendered. This may not be desirable for you or whoever is looking at or running your code (e.g. me).",
    "crumbs": [
      "Coding Asignments",
      "Assignment 2"
    ]
  },
  {
    "objectID": "assignments/coding-assignment-2.html#step-1-download-data-from-v-dem-20pts",
    "href": "assignments/coding-assignment-2.html#step-1-download-data-from-v-dem-20pts",
    "title": "Coding Assignment 2",
    "section": "Step 1: Download data from V-Dem (20pts)",
    "text": "Step 1: Download data from V-Dem (20pts)\nUse the V-Dem codebook or the searchdem() function in vdemlite to identify one measure of democracy and one indicator related to women’s empowerment (or two measures of women’s empowerment). Now use fetchdem() to download the most recent 25 years or so of data for your analysis for all countries in the dataset. Make sure to load the packages that you need and glimpse() the data or View() it to make sure that it downloaded properly.",
    "crumbs": [
      "Coding Asignments",
      "Assignment 2"
    ]
  },
  {
    "objectID": "assignments/coding-assignment-2.html#step-2-download-data-from-the-world-bank-20-pts",
    "href": "assignments/coding-assignment-2.html#step-2-download-data-from-the-world-bank-20-pts",
    "title": "Coding Assignment 2",
    "section": "Step 2: Download data from the World Bank (20 pts)",
    "text": "Step 2: Download data from the World Bank (20 pts)\nNext, download the variable on women’s represenation that we used in Module 1.2 (“SG.GEN.PARL.ZS”) and at least one additional measure related to women’s empowerment. Go to the WDI site the wb_search() function to identify relevant variables. Download data for the same time period as you did for the V-Dem data for all countries.\n\n\n\n\n\n\nImportant\n\n\n\nTry to make sure you download indicators with enough data to conduct your analysis. You won’t get great results if there are too many NAs.",
    "crumbs": [
      "Coding Asignments",
      "Assignment 2"
    ]
  },
  {
    "objectID": "assignments/coding-assignment-2.html#step-3-merge-the-data-20-pts",
    "href": "assignments/coding-assignment-2.html#step-3-merge-the-data-20-pts",
    "title": "Coding Assignment 2",
    "section": "Step 3: Merge the data (20 pts)",
    "text": "Step 3: Merge the data (20 pts)\nNow add country codes using the countrycode package and merge the data using left_join().",
    "crumbs": [
      "Coding Asignments",
      "Assignment 2"
    ]
  },
  {
    "objectID": "assignments/coding-assignment-2.html#step-4-summarize-your-combined-data-set-20-pts",
    "href": "assignments/coding-assignment-2.html#step-4-summarize-your-combined-data-set-20-pts",
    "title": "Coding Assignment 2",
    "section": "Step 4: Summarize your combined data set (20 pts)",
    "text": "Step 4: Summarize your combined data set (20 pts)\nUse group_by(), summarize() and arrange() to glean insights about your data. For example, how do regions compare on mean values of women’s representation and how do these values relate to the values of other variables in your data set? Which countries stand out in terms of women’s representation?\n\n# Regional summary\n\n\n# Country summary",
    "crumbs": [
      "Coding Asignments",
      "Assignment 2"
    ]
  },
  {
    "objectID": "assignments/coding-assignment-2.html#step-6-interpret-your-data-10-pts",
    "href": "assignments/coding-assignment-2.html#step-6-interpret-your-data-10-pts",
    "title": "Coding Assignment 2",
    "section": "Step 6: Interpret your data (10 pts)",
    "text": "Step 6: Interpret your data (10 pts)\nWrite a paragraph or so relating your insights to the Norris reading about electoral reform and women’s representation. Picking a handful of country cases from your data, how does your summary of gender and democracy variables relate to the level of female representation in a country? How would you relate these findings to Norris’s argument about the importance of an inclusive democracy?\n\n\n\n\n\n\nWarning\n\n\n\nDon’t write your paragraphs or any interpretation or analysis in a code chunk. Use markdown text. Quarto is designed to be a literate programming tool, so you can write your analysis in markdown text and include code chunks when necessary to support your argument.",
    "crumbs": [
      "Coding Asignments",
      "Assignment 2"
    ]
  },
  {
    "objectID": "assignments/coding-assignment-2.html#step-7-pivot-wb-data-10-pts.",
    "href": "assignments/coding-assignment-2.html#step-7-pivot-wb-data-10-pts.",
    "title": "Coding Assignment 2",
    "section": "Step 7: Pivot WB Data (10 pts.)",
    "text": "Step 7: Pivot WB Data (10 pts.)\nSometimes our data does not come in the format that we need to have it in for our analysis. Demonstrate that you know how to pivot data from wide to long form using the world_bank_pop data frame that comes with the tidyr package. Then pivot again (wider this time) to get the data into tidy format.",
    "crumbs": [
      "Coding Asignments",
      "Assignment 2"
    ]
  },
  {
    "objectID": "assignments/coding-assignment-2.html#extra-credit-3-pts.",
    "href": "assignments/coding-assignment-2.html#extra-credit-3-pts.",
    "title": "Coding Assignment 2",
    "section": "Extra Credit (3 pts.)",
    "text": "Extra Credit (3 pts.)\nFollowing the example that we did in class, download some messy data from the World Development Indicators website and wrangle it so that it is a tidy data frame. Be sure to download more than one data frame and don’t forget to use backticks (``) when dealing with unconventional variable names.\nNow render the document to make sure everything runs and to produce a final HTML document!",
    "crumbs": [
      "Coding Asignments",
      "Assignment 2"
    ]
  }
]