{
  "hash": "d97ae1529610de58e6d32f1580ad886e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: R Coding Basics\n#subtitle: \ndate: today\ndate-format: long\nfooter: \"[DATS 1001 Website](https://ds4all.rocks)\"\nlogo: images/ds4all-logo.png\nformat:\n  revealjs:\n    theme: [simple, custom.scss]\n    transition: fade\n    slide-number: true\n    chalkboard: true\nexecute:\n  echo: false\n  message: false\n  warning: false\n  freeze: auto\n---\n\n\n\n\n\n# R Programming Basics\n\n## What Can R Do? \n\n<br>\n\n::: incremental\n- R is a powerful language for data analysis and visualization\n- It is also a general-purpose programming language\n- Does everything from web development to machine learning\n- It is open-source and has a large community of users and developers\n:::\n\n## R as a Calculator\n\n<br>\n\n- R can be used as a simple calculator\n- You can perform arithmetic operations on numbers\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Addi a number and store it to a value\nsum_of_2plus2 <- 2 + 2\n\n\nsum_of_2plus2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n:::\n\n\n\n\n\n## Some Common Arithmetic Operators\n\n<br>\n\n- `+` addition\n- `-` subtraction\n- `*` multiplication\n- `/` division\n- `^` exponentiation (also `**`)\n\n## Functions\n\n- A function is a set of instructions that produces some output\n- In R, you can use built-in functions to perform specific tasks\n- For example, you can use the `mean()` function to calculate the average of a set of numbers\n- To do this you have to use the combine function `c()` to create a vector of numbers\n\n## \n\n<br> \n\nCreate a vector of numbers and take the mean...\n\n<br>\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a vector of numbers\nnumbers <- c(1, 2, 3, 4, 5)\n\n# Calculate the mean of the numbers\nmean(numbers)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n:::\n\n\n\n\n\n## Some Common Base R Functions {.smaller}\n\n- `mean()` calculates the mean of a set of numbers\n- `median()` calculates the median of a set of numbers\n- `sd()` calculates the standard deviation of a set of numbers\n- `sum()` calculates the sum of a set of numbers\n- `length()` calculates the length of a vector\n- `max()` and `min()` calculate the maximum and minimum values of a vector\n- `round()` rounds a number to a specified number of decimal places\n- `sqrt()` calculates the square root of a number\n- `log()` calculates the natural logarithm of a number\n- `exp()` calculates the exponential of a number\n- `abs()` calculates the absolute value of a number\n\n# Packages\n\n## From Functions to Packages {.smaller}\n\n<br>\n\n::: {.incremental}\n-   A *function* is a set of instructions\n    -   `read_csv()` is a function\n    -   `ggplot()` is a function\n-   A *package* is a collection of functions\n    -   `readr` is a package that contains the `read_csv()` function\n    -   `ggplot2` is a package that contains the `ggplot()` function\n-   Use `install.packages()` to install packages\n-   Use `library()` to load packages\n-   You can install packages from CRAN\n:::\n\n## The Tidyverse {.smaller}\n\n::: {.incremental}\n-   The Tidyverse is a collection of data science packages\n-   It is also considered a dialect of R\n-   In this class, we will be using many Tidyverse packages\n    -   `ggplot2` for data visualization\n    -   `readr` for reading data\n    -   `dplyr` for data manipulation\n    -   `tidyr` for data tidying\n    -   Etc.\n-   At first we will load the packages independently, e.g. `library(ggplot2)`\n-   Later we will load them all at once with `library(tidyverse)`\n:::\n\n# Objects\n\n## What is an Object?\n\n::: incremental\n- An object in R is a data structure used to store data\n- It can vary from simple scalar types to more complex data structures like vectors, lists, or data frames\n- Objects hold not only data but also information about the type of data and the operations that can be performed on them\n- Every entity in R is considered an object, making R a language based around the manipulation of objects\n:::\n\n## How to Store Data\n\n- In R, you can store data in objects using the assignment operator `<-`\n- The object name is on the left of `<-`, and the data or value you wish to assign to the object is on the right\n- Then you can print the object to the console using the object name\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Store the value 42 in the object my_number\nmy_number <- 42\n\n# Print the value of my_number\nmy_number \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 42\n```\n\n\n:::\n:::\n\n\n\n\n\n## When to Store Data in Objects\n\n<br>\n\n- Note that you don't always have to store data in objects\n- You should mostly store data in objects when you want to use the data later\n- If you only need to use the data once, you can just use the data directly\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add two numbers without storing them in an object\n2 + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n:::\n\n\n\n\n\n## Your Turn!\n\n<br>\n\n- Go to the Week 2 module on Posit Cloud\n- Work through the first set of challenges there\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer0\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:10%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n\n\n# Three Examples\n\n## Let's get going . . .\n\n<br>\n\nLet's open up the Getting Started module on Posit Cloud...\n\nAnd work through the examples there.\n\n## Example: Make a map!\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"leaflet html-widget html-fill-item\" id=\"htmlwidget-cb1d19b0f365ad2ef797\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-cb1d19b0f365ad2ef797\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"https://openstreetmap.org/copyright/\\\">OpenStreetMap<\\/a>,  <a href=\\\"https://opendatacommons.org/licenses/odbl/\\\">ODbL<\\/a>\"}]},{\"method\":\"addMarkers\",\"args\":[38.90243843683386,-77.0443814477152,null,null,null,{\"interactive\":true,\"draggable\":false,\"keyboard\":true,\"title\":\"\",\"alt\":\"\",\"zIndexOffset\":0,\"opacity\":1,\"riseOnHover\":false,\"riseOffset\":250},null,null,null,null,\"Elliott School of International Affairs\",{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]}],\"limits\":{\"lat\":[38.90243843683386,38.90243843683386],\"lng\":[-77.0443814477152,-77.0443814477152]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n## Example: Make a map!\n\n<br>\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(leaflet)\nleaflet() %>% \n  addTiles() %>%   # Add default OpenStreetMap map tiles\n  addMarkers(lat = 38.90243843683386, lng =  -77.0443814477152, \n             label = \"Elliott School of International Affairs\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer1\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n\n\n## Example: Plotting Democracy Over Time\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](week-2.1_files/figure-html/plot_democracy-1.png){width=672}\n:::\n:::\n\n\n\n\n\n## Example: Plotting Democracy Over Time\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the packages\nlibrary(vdemlite)\nlibrary(ggplot2)\n\n# Use vdemlite to extract democracy scores for France and INdia\ndem_data <- fetchdem(indicators = \"v2x_polyarchy\",\n                     countries = c(\"FRA\", \"IND\"))\n\n# And now we can plot the data\nggplot(dem_data, aes(y = v2x_polyarchy, x = year, color=country_name)) +\n  geom_line() +\n  theme_minimal() +\n  xlab(\"Year\") +\n  ylab(\"Electoral Democracy Index\") +\n  ggtitle(\"Electoral Democracy, 1970-2022\") +\n  geom_hline(yintercept = .5, linetype = \"dashed\", color = \"grey\") +\n   scale_color_manual(name=\"Country\", values=c(\"#E69F00\", \"#56B4E9\")) +\n  ylim(0, 1)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer2\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:0%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n\n\n## Example: UN Voting Trends\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](week-2.1_files/figure-html/un_voting-1.png){width=672}\n:::\n:::\n\n\n\n\n\n## Example: UN Voting Trends\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(unvotes)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(pacman)\n\nunvotes <- un_votes %>%\n  inner_join(un_roll_calls, by = \"rcid\") %>%\n  inner_join(un_roll_call_issues, by = \"rcid\")\n\nunvotes %>%\n  # then filter out to only include the countries we want\n  filter(country %in% c(\"South Africa\", \"United States\", \"France\")) %>%\n  # then make sure R understands the the year variable is a data\n  mutate(year = year(date)) %>%\n  # Then group the data by country and year\n  group_by(country, year, issue) %>%\n  # then take the average Yes votes for each country_year\n  summarize(percent_yes = mean(vote == \"yes\")) %>%\n  # then make a nice plot\n  ggplot(mapping = aes(x = year, y = percent_yes, color = country)) +\n  geom_point(alpha = 0.4) +\n  geom_smooth(method = \"loess\", se = FALSE) +\n  facet_wrap(~issue) +\n  scale_y_continuous(labels = percent) +\n  scale_color_manual( values=c(\"#E69F00\", \"#56B4E9\", \"#009E73\")) +\n  labs(\n    title = \"Percentage of 'Yes' votes in the UN General Assembly\",\n    subtitle = \"1946 to 2019\",\n    y = \"% Yes\",\n    x = \"Year\",\n    color = \"Country\"\n  )\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer3\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:8;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n",
    "supporting": [
      "week-2.1_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/leaflet-1.3.1/leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/leaflet-1.3.1/leaflet.js\"></script>\n<link href=\"../site_libs/leafletfix-1.0.0/leafletfix.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/proj4-2.6.2/proj4.min.js\"></script>\n<script src=\"../site_libs/Proj4Leaflet-1.0.1/proj4leaflet.js\"></script>\n<link href=\"../site_libs/rstudio_leaflet-1.3.1/rstudio_leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/leaflet-binding-2.2.2/leaflet.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}